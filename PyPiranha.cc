/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */


#ifndef SWIGPYTHON
#define SWIGPYTHON
#endif

#define SWIG_PYTHON_DIRECTOR_NO_VTABLE


#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


#if defined(__GNUC__) && defined(_WIN32) && !defined(SWIG_PYTHON_NO_HYPOT_WORKAROUND)
/* Workaround for '::hypot' has not been declared', see https://bugs.python.org/issue11566 */
# include <math.h>
#endif

#if defined(_DEBUG) && defined(SWIG_PYTHON_INTERPRETER_NO_DEBUG)
/* Use debug wrappers with the Python release dll */
# undef _DEBUG
# include <Python.h>
# define _DEBUG 1
#else
# include <Python.h>
#endif

/* -----------------------------------------------------------------------------
 * swigrun.swg
 *
 * This file contains generic C API SWIG runtime support for pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "4"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the SWIG runtime code.
  In 99.9% of the cases, SWIG just needs to declare them as 'static'.

  But only do this if strictly necessary, ie, if you have problems
  with your compiler or suchlike.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

/*  Generic buffer size */
#ifndef SWIG_BUFFER_SIZE
# define SWIG_BUFFER_SIZE 1024
#endif

/* Flags for pointer conversions */
#define SWIG_POINTER_DISOWN        0x1
#define SWIG_CAST_NEW_MEMORY       0x2
#define SWIG_POINTER_NO_NULL       0x4

/* Flags for new pointer objects */
#define SWIG_POINTER_OWN           0x1


/*
   Flags/methods for returning states.

   The SWIG conversion methods, as ConvertPtr, return an integer
   that tells if the conversion was successful or not. And if not,
   an error code can be returned (see swigerrors.swg for the codes).

   Use the following macros/flags to set or process the returning
   states.

   In old versions of SWIG, code such as the following was usually written:

     if (SWIG_ConvertPtr(obj,vptr,ty.flags) != -1) {
       // success code
     } else {
       //fail code
     }

   Now you can be more explicit:

    int res = SWIG_ConvertPtr(obj,vptr,ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
    } else {
      // fail code
    }

   which is the same really, but now you can also do

    Type *ptr;
    int res = SWIG_ConvertPtr(obj,(void **)(&ptr),ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
      if (SWIG_IsNewObj(res) {
        ...
	delete *ptr;
      } else {
        ...
      }
    } else {
      // fail code
    }

   I.e., now SWIG_ConvertPtr can return new objects and you can
   identify the case and take care of the deallocation. Of course that
   also requires SWIG_ConvertPtr to return new result values, such as

      int SWIG_ConvertPtr(obj, ptr,...) {
        if (<obj is ok>) {
          if (<need new object>) {
            *ptr = <ptr to new allocated object>;
            return SWIG_NEWOBJ;
          } else {
            *ptr = <ptr to old object>;
            return SWIG_OLDOBJ;
          }
        } else {
          return SWIG_BADOBJ;
        }
      }

   Of course, returning the plain '0(success)/-1(fail)' still works, but you can be
   more explicit by returning SWIG_BADOBJ, SWIG_ERROR or any of the
   SWIG errors code.

   Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
   allows to return the 'cast rank', for example, if you have this

       int food(double)
       int fooi(int);

   and you call

      food(1)   // cast rank '1'  (1 -> 1.0)
      fooi(1)   // cast rank '0'

   just use the SWIG_AddCast()/SWIG_CheckState()
*/

#define SWIG_OK                    (0)
#define SWIG_ERROR                 (-1)
#define SWIG_IsOK(r)               (r >= 0)
#define SWIG_ArgError(r)           ((r != SWIG_ERROR) ? r : SWIG_TypeError)

/* The CastRankLimit says how many bits are used for the cast rank */
#define SWIG_CASTRANKLIMIT         (1 << 8)
/* The NewMask denotes the object was created (using new/malloc) */
#define SWIG_NEWOBJMASK            (SWIG_CASTRANKLIMIT  << 1)
/* The TmpMask is for in/out typemaps that use temporal objects */
#define SWIG_TMPOBJMASK            (SWIG_NEWOBJMASK << 1)
/* Simple returning values */
#define SWIG_BADOBJ                (SWIG_ERROR)
#define SWIG_OLDOBJ                (SWIG_OK)
#define SWIG_NEWOBJ                (SWIG_OK | SWIG_NEWOBJMASK)
#define SWIG_TMPOBJ                (SWIG_OK | SWIG_TMPOBJMASK)
/* Check, add and del mask methods */
#define SWIG_AddNewMask(r)         (SWIG_IsOK(r) ? (r | SWIG_NEWOBJMASK) : r)
#define SWIG_DelNewMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_NEWOBJMASK) : r)
#define SWIG_IsNewObj(r)           (SWIG_IsOK(r) && (r & SWIG_NEWOBJMASK))
#define SWIG_AddTmpMask(r)         (SWIG_IsOK(r) ? (r | SWIG_TMPOBJMASK) : r)
#define SWIG_DelTmpMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_TMPOBJMASK) : r)
#define SWIG_IsTmpObj(r)           (SWIG_IsOK(r) && (r & SWIG_TMPOBJMASK))

/* Cast-Rank Mode */
#if defined(SWIG_CASTRANK_MODE)
#  ifndef SWIG_TypeRank
#    define SWIG_TypeRank             unsigned long
#  endif
#  ifndef SWIG_MAXCASTRANK            /* Default cast allowed */
#    define SWIG_MAXCASTRANK          (2)
#  endif
#  define SWIG_CASTRANKMASK          ((SWIG_CASTRANKLIMIT) -1)
#  define SWIG_CastRank(r)           (r & SWIG_CASTRANKMASK)
SWIGINTERNINLINE int SWIG_AddCast(int r) {
  return SWIG_IsOK(r) ? ((SWIG_CastRank(r) < SWIG_MAXCASTRANK) ? (r + 1) : SWIG_ERROR) : r;
}
SWIGINTERNINLINE int SWIG_CheckState(int r) {
  return SWIG_IsOK(r) ? SWIG_CastRank(r) + 1 : 0;
}
#else /* no cast-rank mode */
#  define SWIG_AddCast(r) (r)
#  define SWIG_CheckState(r) (SWIG_IsOK(r) ? 1 : 0)
#endif


#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *, int *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store information on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
  int                    owndata;		/* flag if the structure owns the clientdata */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;

/*
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (*f1 > *f2) ? 1 : -1;
  }
  return (int)((l1 - f1) - (l2 - f2));
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCmp(const char *nb, const char *tb) {
  int equiv = 1;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (equiv != 0 && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = SWIG_TypeNameComp(nb, ne, tb, te);
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  return SWIG_TypeCmp(nb, tb) == 0 ? 1 : 0;
}

/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (strcmp(iter->type->name, c) == 0) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Identical to SWIG_TypeCheck, except strcmp is replaced with a pointer comparison
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (iter->type == from) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr, newmemory);
}

/*
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  We choose
     to print the last name, as it is often (?) the most
     specific. */
  if (!type) return NULL;
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/*
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;

  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }
    cast = cast->next;
  }
}
SWIGRUNTIME void
SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {
  SWIG_TypeClientData(ti, clientdata);
  ti->owndata = 1;
}

/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start,
                            swig_module_info *end,
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      size_t l = 0;
      size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	size_t i = (l + r) >> 1;
	const char *iname = iter->types[i]->name;
	if (iname) {
	  int compare = strcmp(name, iname);
	  if (compare == 0) {
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start,
                     swig_module_info *end,
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }

  /* neither found a match */
  return 0;
}

/*
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  const unsigned char *u = (unsigned char *) ptr;
  const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/*
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  unsigned char *u = (unsigned char *) ptr;
  const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    char d = *(c++);
    unsigned char uu;
    if ((d >= '0') && (d <= '9'))
      uu = (unsigned char)((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = (unsigned char)((d - ('a'-10)) << 4);
    else
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (unsigned char)(d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (unsigned char)(d - ('a'-10));
    else
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/*
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/*  Errors in SWIG */
#define  SWIG_UnknownError    	   -1
#define  SWIG_IOError        	   -2
#define  SWIG_RuntimeError   	   -3
#define  SWIG_IndexError     	   -4
#define  SWIG_TypeError      	   -5
#define  SWIG_DivisionByZero 	   -6
#define  SWIG_OverflowError  	   -7
#define  SWIG_SyntaxError    	   -8
#define  SWIG_ValueError     	   -9
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12
#define  SWIG_NullReferenceError   -13



/* Compatibility macros for Python 3 */
#if PY_VERSION_HEX >= 0x03000000

#define PyClass_Check(obj) PyObject_IsInstance(obj, (PyObject *)&PyType_Type)
#define PyInt_Check(x) PyLong_Check(x)
#define PyInt_AsLong(x) PyLong_AsLong(x)
#define PyInt_FromLong(x) PyLong_FromLong(x)
#define PyInt_FromSize_t(x) PyLong_FromSize_t(x)
#define PyString_Check(name) PyBytes_Check(name)
#define PyString_FromString(x) PyUnicode_FromString(x)
#define PyString_Format(fmt, args)  PyUnicode_Format(fmt, args)
#define PyString_AsString(str) PyBytes_AsString(str)
#define PyString_Size(str) PyBytes_Size(str)	
#define PyString_InternFromString(key) PyUnicode_InternFromString(key)
#define Py_TPFLAGS_HAVE_CLASS Py_TPFLAGS_BASETYPE
#define PyString_AS_STRING(x) PyUnicode_AS_STRING(x)
#define _PyLong_FromSsize_t(x) PyLong_FromSsize_t(x)

#endif

#ifndef Py_TYPE
#  define Py_TYPE(op) ((op)->ob_type)
#endif

/* SWIG APIs for compatibility of both Python 2 & 3 */

#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_Python_str_FromFormat PyUnicode_FromFormat
#else
#  define SWIG_Python_str_FromFormat PyString_FromFormat
#endif


/* Warning: This function will allocate a new string in Python 3,
 * so please call SWIG_Python_str_DelForPy3(x) to free the space.
 */
SWIGINTERN char*
SWIG_Python_str_AsChar(PyObject *str)
{
#if PY_VERSION_HEX >= 0x03030000
  return (char *)PyUnicode_AsUTF8(str);
#elif PY_VERSION_HEX >= 0x03000000
  char *newstr = 0;
  str = PyUnicode_AsUTF8String(str);
  if (str) {
    char *cstr;
    Py_ssize_t len;
    if (PyBytes_AsStringAndSize(str, &cstr, &len) != -1) {
      newstr = (char *) malloc(len+1);
      if (newstr)
        memcpy(newstr, cstr, len+1);
    }
    Py_XDECREF(str);
  }
  return newstr;
#else
  return PyString_AsString(str);
#endif
}

#if PY_VERSION_HEX >= 0x03030000 || PY_VERSION_HEX < 0x03000000
#  define SWIG_Python_str_DelForPy3(x)
#else
#  define SWIG_Python_str_DelForPy3(x) free( (void*) (x) )
#endif


SWIGINTERN PyObject*
SWIG_Python_str_FromChar(const char *c)
{
#if PY_VERSION_HEX >= 0x03000000
  return PyUnicode_FromString(c); 
#else
  return PyString_FromString(c);
#endif
}

#ifndef PyObject_DEL
# define PyObject_DEL PyObject_Del
#endif

// SWIGPY_USE_CAPSULE is no longer used within SWIG itself, but some user
// interface files check for it.
# define SWIGPY_USE_CAPSULE
# define SWIGPY_CAPSULE_NAME ("swig_runtime_data" SWIG_RUNTIME_VERSION ".type_pointer_capsule" SWIG_TYPE_TABLE_NAME)

#if PY_VERSION_HEX < 0x03020000
#define PyDescr_TYPE(x) (((PyDescrObject *)(x))->d_type)
#define PyDescr_NAME(x) (((PyDescrObject *)(x))->d_name)
#define Py_hash_t long
#endif

/* -----------------------------------------------------------------------------
 * error manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIME PyObject*
SWIG_Python_ErrorType(int code) {
  PyObject* type = 0;
  switch(code) {
  case SWIG_MemoryError:
    type = PyExc_MemoryError;
    break;
  case SWIG_IOError:
    type = PyExc_IOError;
    break;
  case SWIG_RuntimeError:
    type = PyExc_RuntimeError;
    break;
  case SWIG_IndexError:
    type = PyExc_IndexError;
    break;
  case SWIG_TypeError:
    type = PyExc_TypeError;
    break;
  case SWIG_DivisionByZero:
    type = PyExc_ZeroDivisionError;
    break;
  case SWIG_OverflowError:
    type = PyExc_OverflowError;
    break;
  case SWIG_SyntaxError:
    type = PyExc_SyntaxError;
    break;
  case SWIG_ValueError:
    type = PyExc_ValueError;
    break;
  case SWIG_SystemError:
    type = PyExc_SystemError;
    break;
  case SWIG_AttributeError:
    type = PyExc_AttributeError;
    break;
  default:
    type = PyExc_RuntimeError;
  }
  return type;
}


SWIGRUNTIME void
SWIG_Python_AddErrorMsg(const char* mesg)
{
  PyObject *type = 0;
  PyObject *value = 0;
  PyObject *traceback = 0;

  if (PyErr_Occurred())
    PyErr_Fetch(&type, &value, &traceback);
  if (value) {
    PyObject *old_str = PyObject_Str(value);
    const char *tmp = SWIG_Python_str_AsChar(old_str);
    PyErr_Clear();
    Py_XINCREF(type);
    if (tmp)
      PyErr_Format(type, "%s %s", tmp, mesg);
    else
      PyErr_Format(type, "%s", mesg);
    SWIG_Python_str_DelForPy3(tmp);
    Py_DECREF(old_str);
    Py_DECREF(value);
  } else {
    PyErr_SetString(PyExc_RuntimeError, mesg);
  }
}

SWIGRUNTIME int
SWIG_Python_TypeErrorOccurred(PyObject *obj)
{
  PyObject *error;
  if (obj)
    return 0;
  error = PyErr_Occurred();
  return error && PyErr_GivenExceptionMatches(error, PyExc_TypeError);
}

SWIGRUNTIME void
SWIG_Python_RaiseOrModifyTypeError(const char *message)
{
  if (SWIG_Python_TypeErrorOccurred(NULL)) {
    /* Use existing TypeError to preserve stacktrace and enhance with given message */
    PyObject *newvalue;
    PyObject *type = NULL, *value = NULL, *traceback = NULL;
    PyErr_Fetch(&type, &value, &traceback);
#if PY_VERSION_HEX >= 0x03000000
    newvalue = PyUnicode_FromFormat("%S\nAdditional information:\n%s", value, message);
#else
    newvalue = PyString_FromFormat("%s\nAdditional information:\n%s", PyString_AsString(value), message);
#endif
    Py_XDECREF(value);
    PyErr_Restore(type, newvalue, traceback);
  } else {
    /* Raise TypeError using given message */
    PyErr_SetString(PyExc_TypeError, message);
  }
}

#if defined(SWIG_PYTHON_NO_THREADS)
#  if defined(SWIG_PYTHON_THREADS)
#    undef SWIG_PYTHON_THREADS
#  endif
#endif
#if defined(SWIG_PYTHON_THREADS) /* Threading support is enabled */
#  if !defined(SWIG_PYTHON_USE_GIL) && !defined(SWIG_PYTHON_NO_USE_GIL)
#    define SWIG_PYTHON_USE_GIL
#  endif
#  if defined(SWIG_PYTHON_USE_GIL) /* Use PyGILState threads calls */
#    ifndef SWIG_PYTHON_INITIALIZE_THREADS
#     define SWIG_PYTHON_INITIALIZE_THREADS  PyEval_InitThreads() 
#    endif
#    ifdef __cplusplus /* C++ code */
       class SWIG_Python_Thread_Block {
         bool status;
         PyGILState_STATE state;
       public:
         void end() { if (status) { PyGILState_Release(state); status = false;} }
         SWIG_Python_Thread_Block() : status(true), state(PyGILState_Ensure()) {}
         ~SWIG_Python_Thread_Block() { end(); }
       };
       class SWIG_Python_Thread_Allow {
         bool status;
         PyThreadState *save;
       public:
         void end() { if (status) { PyEval_RestoreThread(save); status = false; }}
         SWIG_Python_Thread_Allow() : status(true), save(PyEval_SaveThread()) {}
         ~SWIG_Python_Thread_Allow() { end(); }
       };
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   SWIG_Python_Thread_Block _swig_thread_block
#      define SWIG_PYTHON_THREAD_END_BLOCK     _swig_thread_block.end()
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   SWIG_Python_Thread_Allow _swig_thread_allow
#      define SWIG_PYTHON_THREAD_END_ALLOW     _swig_thread_allow.end()
#    else /* C code */
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   PyGILState_STATE _swig_thread_block = PyGILState_Ensure()
#      define SWIG_PYTHON_THREAD_END_BLOCK     PyGILState_Release(_swig_thread_block)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   PyThreadState *_swig_thread_allow = PyEval_SaveThread()
#      define SWIG_PYTHON_THREAD_END_ALLOW     PyEval_RestoreThread(_swig_thread_allow)
#    endif
#  else /* Old thread way, not implemented, user must provide it */
#    if !defined(SWIG_PYTHON_INITIALIZE_THREADS)
#      define SWIG_PYTHON_INITIALIZE_THREADS
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_BLOCK)
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_BLOCK)
#      define SWIG_PYTHON_THREAD_END_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_ALLOW)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_ALLOW)
#      define SWIG_PYTHON_THREAD_END_ALLOW
#    endif
#  endif
#else /* No thread support */
#  define SWIG_PYTHON_INITIALIZE_THREADS
#  define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#  define SWIG_PYTHON_THREAD_END_BLOCK
#  define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#  define SWIG_PYTHON_THREAD_END_ALLOW
#endif

/* -----------------------------------------------------------------------------
 * Python API portion that goes into the runtime
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#endif

/* -----------------------------------------------------------------------------
 * Constant declarations
 * ----------------------------------------------------------------------------- */

/* Constant Types */
#define SWIG_PY_POINTER 4
#define SWIG_PY_BINARY  5

/* Constant information structure */
typedef struct swig_const_info {
  int type;
  const char *name;
  long lvalue;
  double dvalue;
  void   *pvalue;
  swig_type_info **ptype;
} swig_const_info;

#ifdef __cplusplus
}
#endif


/* -----------------------------------------------------------------------------
 * pyrun.swg
 *
 * This file contains the runtime support for Python modules
 * and includes code for managing global variables and pointer
 * type checking.
 *
 * ----------------------------------------------------------------------------- */

#if PY_VERSION_HEX < 0x02070000 /* 2.7.0 */
# error "This version of SWIG only supports Python >= 2.7"
#endif

#if PY_VERSION_HEX >= 0x03000000 && PY_VERSION_HEX < 0x03020000
# error "This version of SWIG only supports Python 3 >= 3.2"
#endif

/* Common SWIG API */

/* for raw pointers */
#define SWIG_Python_ConvertPtr(obj, pptr, type, flags)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, 0)
#define SWIG_ConvertPtr(obj, pptr, type, flags)         SWIG_Python_ConvertPtr(obj, pptr, type, flags)
#define SWIG_ConvertPtrAndOwn(obj,pptr,type,flags,own)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, own)

#ifdef SWIGPYTHON_BUILTIN
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(self, ptr, type, flags)
#else
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(NULL, ptr, type, flags)
#endif

#define SWIG_InternalNewPointerObj(ptr, type, flags)	SWIG_Python_NewPointerObj(NULL, ptr, type, flags)

#define SWIG_CheckImplicit(ty)                          SWIG_Python_CheckImplicit(ty) 
#define SWIG_AcquirePtr(ptr, src)                       SWIG_Python_AcquirePtr(ptr, src)
#define swig_owntype                                    int

/* for raw packed data */
#define SWIG_ConvertPacked(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewPackedObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)

/* for class or struct pointers */
#define SWIG_ConvertInstance(obj, pptr, type, flags)    SWIG_ConvertPtr(obj, pptr, type, flags)
#define SWIG_NewInstanceObj(ptr, type, flags)           SWIG_NewPointerObj(ptr, type, flags)

/* for C or C++ function pointers */
#define SWIG_ConvertFunctionPtr(obj, pptr, type)        SWIG_Python_ConvertFunctionPtr(obj, pptr, type)
#define SWIG_NewFunctionPtrObj(ptr, type)               SWIG_Python_NewPointerObj(NULL, ptr, type, 0)

/* for C++ member pointers, ie, member methods */
#define SWIG_ConvertMember(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewMemberObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)


/* Runtime API */

#define SWIG_GetModule(clientdata)                      SWIG_Python_GetModule(clientdata)
#define SWIG_SetModule(clientdata, pointer)             SWIG_Python_SetModule(pointer)
#define SWIG_NewClientData(obj)                         SwigPyClientData_New(obj)

#define SWIG_SetErrorObj                                SWIG_Python_SetErrorObj                            
#define SWIG_SetErrorMsg                        	SWIG_Python_SetErrorMsg				   
#define SWIG_ErrorType(code)                    	SWIG_Python_ErrorType(code)                        
#define SWIG_Error(code, msg)            		SWIG_Python_SetErrorMsg(SWIG_ErrorType(code), msg) 
#define SWIG_fail                        		goto fail					   


/* Runtime API implementation */

/* Error manipulation */

SWIGINTERN void 
SWIG_Python_SetErrorObj(PyObject *errtype, PyObject *obj) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK; 
  PyErr_SetObject(errtype, obj);
  Py_DECREF(obj);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

SWIGINTERN void 
SWIG_Python_SetErrorMsg(PyObject *errtype, const char *msg) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK;
  PyErr_SetString(errtype, msg);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

#define SWIG_Python_Raise(obj, type, desc)  SWIG_Python_SetErrorObj(SWIG_Python_ExceptionType(desc), obj)

/* Set a constant value */

#if defined(SWIGPYTHON_BUILTIN)

SWIGINTERN void
SwigPyBuiltin_AddPublicSymbol(PyObject *seq, const char *key) {
  PyObject *s = PyString_InternFromString(key);
  PyList_Append(seq, s);
  Py_DECREF(s);
}

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, PyObject *public_interface, const char *name, PyObject *obj) {   
  PyDict_SetItemString(d, name, obj);
  Py_DECREF(obj);
  if (public_interface)
    SwigPyBuiltin_AddPublicSymbol(public_interface, name);
}

#else

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, const char *name, PyObject *obj) {   
  PyDict_SetItemString(d, name, obj);
  Py_DECREF(obj);                            
}

#endif

/* Append a value to the result obj */

SWIGINTERN PyObject*
SWIG_Python_AppendOutput(PyObject* result, PyObject* obj) {
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyList_Check(result)) {
      PyObject *o2 = result;
      result = PyList_New(1);
      PyList_SetItem(result, 0, o2);
    }
    PyList_Append(result,obj);
    Py_DECREF(obj);
  }
  return result;
}

/* Unpack the argument tuple */

SWIGINTERN Py_ssize_t
SWIG_Python_UnpackTuple(PyObject *args, const char *name, Py_ssize_t min, Py_ssize_t max, PyObject **objs)
{
  if (!args) {
    if (!min && !max) {
      return 1;
    } else {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got none", 
		   name, (min == max ? "" : "at least "), (int)min);
      return 0;
    }
  }  
  if (!PyTuple_Check(args)) {
    if (min <= 1 && max >= 1) {
      Py_ssize_t i;
      objs[0] = args;
      for (i = 1; i < max; ++i) {
	objs[i] = 0;
      }
      return 2;
    }
    PyErr_SetString(PyExc_SystemError, "UnpackTuple() argument list is not a tuple");
    return 0;
  } else {
    Py_ssize_t l = PyTuple_GET_SIZE(args);
    if (l < min) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at least "), (int)min, (int)l);
      return 0;
    } else if (l > max) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at most "), (int)max, (int)l);
      return 0;
    } else {
      Py_ssize_t i;
      for (i = 0; i < l; ++i) {
	objs[i] = PyTuple_GET_ITEM(args, i);
      }
      for (; l < max; ++l) {
	objs[l] = 0;
      }
      return i + 1;
    }    
  }
}

SWIGINTERN int
SWIG_Python_CheckNoKeywords(PyObject *kwargs, const char *name) {
  int no_kwargs = 1;
  if (kwargs) {
    assert(PyDict_Check(kwargs));
    if (PyDict_Size(kwargs) > 0) {
      PyErr_Format(PyExc_TypeError, "%s() does not take keyword arguments", name);
      no_kwargs = 0;
    }
  }
  return no_kwargs;
}

/* A functor is a function object with one single object argument */
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunctionObjArgs(functor, obj, NULL);

/*
  Helper for static pointer initialization for both C and C++ code, for example
  static PyObject *SWIG_STATIC_POINTER(MyVar) = NewSomething(...);
*/
#ifdef __cplusplus
#define SWIG_STATIC_POINTER(var)  var
#else
#define SWIG_STATIC_POINTER(var)  var = 0; if (!var) var
#endif

/* -----------------------------------------------------------------------------
 * Pointer declarations
 * ----------------------------------------------------------------------------- */

/* Flags for new pointer objects */
#define SWIG_POINTER_NOSHADOW       (SWIG_POINTER_OWN      << 1)
#define SWIG_POINTER_NEW            (SWIG_POINTER_NOSHADOW | SWIG_POINTER_OWN)

#define SWIG_POINTER_IMPLICIT_CONV  (SWIG_POINTER_DISOWN   << 1)

#define SWIG_BUILTIN_TP_INIT	    (SWIG_POINTER_OWN << 2)
#define SWIG_BUILTIN_INIT	    (SWIG_BUILTIN_TP_INIT | SWIG_POINTER_OWN)

#ifdef __cplusplus
extern "C" {
#endif

/* The python void return value */

SWIGRUNTIMEINLINE PyObject * 
SWIG_Py_Void(void)
{
  PyObject *none = Py_None;
  Py_INCREF(none);
  return none;
}

/* SwigPyClientData */

typedef struct {
  PyObject *klass;
  PyObject *newraw;
  PyObject *newargs;
  PyObject *destroy;
  int delargs;
  int implicitconv;
  PyTypeObject *pytype;
} SwigPyClientData;

SWIGRUNTIMEINLINE int 
SWIG_Python_CheckImplicit(swig_type_info *ty)
{
  SwigPyClientData *data = (SwigPyClientData *)ty->clientdata;
  int fail = data ? data->implicitconv : 0;
  if (fail)
    PyErr_SetString(PyExc_TypeError, "Implicit conversion is prohibited for explicit constructors.");
  return fail;
}

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_ExceptionType(swig_type_info *desc) {
  SwigPyClientData *data = desc ? (SwigPyClientData *) desc->clientdata : 0;
  PyObject *klass = data ? data->klass : 0;
  return (klass ? klass : PyExc_RuntimeError);
}


SWIGRUNTIME SwigPyClientData * 
SwigPyClientData_New(PyObject* obj)
{
  if (!obj) {
    return 0;
  } else {
    SwigPyClientData *data = (SwigPyClientData *)malloc(sizeof(SwigPyClientData));
    /* the klass element */
    data->klass = obj;
    Py_INCREF(data->klass);
    /* the newraw method and newargs arguments used to create a new raw instance */
    if (PyClass_Check(obj)) {
      data->newraw = 0;
      data->newargs = obj;
      Py_INCREF(obj);
    } else {
      data->newraw = PyObject_GetAttrString(data->klass, "__new__");
      if (data->newraw) {
	Py_INCREF(data->newraw);
	data->newargs = PyTuple_New(1);
	PyTuple_SetItem(data->newargs, 0, obj);
      } else {
	data->newargs = obj;
      }
      Py_INCREF(data->newargs);
    }
    /* the destroy method, aka as the C++ delete method */
    data->destroy = PyObject_GetAttrString(data->klass, "__swig_destroy__");
    if (PyErr_Occurred()) {
      PyErr_Clear();
      data->destroy = 0;
    }
    if (data->destroy) {
      int flags;
      Py_INCREF(data->destroy);
      flags = PyCFunction_GET_FLAGS(data->destroy);
      data->delargs = !(flags & (METH_O));
    } else {
      data->delargs = 0;
    }
    data->implicitconv = 0;
    data->pytype = 0;
    return data;
  }
}

SWIGRUNTIME void 
SwigPyClientData_Del(SwigPyClientData *data) {
  Py_XDECREF(data->newraw);
  Py_XDECREF(data->newargs);
  Py_XDECREF(data->destroy);
}

/* =============== SwigPyObject =====================*/

typedef struct {
  PyObject_HEAD
  void *ptr;
  swig_type_info *ty;
  int own;
  PyObject *next;
#ifdef SWIGPYTHON_BUILTIN
  PyObject *dict;
#endif
} SwigPyObject;


#ifdef SWIGPYTHON_BUILTIN

SWIGRUNTIME PyObject *
SwigPyObject_get___dict__(PyObject *v, PyObject *SWIGUNUSEDPARM(args))
{
  SwigPyObject *sobj = (SwigPyObject *)v;

  if (!sobj->dict)
    sobj->dict = PyDict_New();

  Py_INCREF(sobj->dict);
  return sobj->dict;
}

#endif

SWIGRUNTIME PyObject *
SwigPyObject_long(SwigPyObject *v)
{
  return PyLong_FromVoidPtr(v->ptr);
}

SWIGRUNTIME PyObject *
SwigPyObject_format(const char* fmt, SwigPyObject *v)
{
  PyObject *res = NULL;
  PyObject *args = PyTuple_New(1);
  if (args) {
    if (PyTuple_SetItem(args, 0, SwigPyObject_long(v)) == 0) {
      PyObject *ofmt = SWIG_Python_str_FromChar(fmt);
      if (ofmt) {
#if PY_VERSION_HEX >= 0x03000000
	res = PyUnicode_Format(ofmt,args);
#else
	res = PyString_Format(ofmt,args);
#endif
	Py_DECREF(ofmt);
      }
      Py_DECREF(args);
    }
  }
  return res;
}

SWIGRUNTIME PyObject *
SwigPyObject_oct(SwigPyObject *v)
{
  return SwigPyObject_format("%o",v);
}

SWIGRUNTIME PyObject *
SwigPyObject_hex(SwigPyObject *v)
{
  return SwigPyObject_format("%x",v);
}

SWIGRUNTIME PyObject *
SwigPyObject_repr(SwigPyObject *v)
{
  const char *name = SWIG_TypePrettyName(v->ty);
  PyObject *repr = SWIG_Python_str_FromFormat("<Swig Object of type '%s' at %p>", (name ? name : "unknown"), (void *)v);
  if (v->next) {
    PyObject *nrep = SwigPyObject_repr((SwigPyObject *)v->next);
# if PY_VERSION_HEX >= 0x03000000
    PyObject *joined = PyUnicode_Concat(repr, nrep);
    Py_DecRef(repr);
    Py_DecRef(nrep);
    repr = joined;
# else
    PyString_ConcatAndDel(&repr,nrep);
# endif
  }
  return repr;  
}

/* We need a version taking two PyObject* parameters so it's a valid
 * PyCFunction to use in swigobject_methods[]. */
SWIGRUNTIME PyObject *
SwigPyObject_repr2(PyObject *v, PyObject *SWIGUNUSEDPARM(args))
{
  return SwigPyObject_repr((SwigPyObject*)v);
}

SWIGRUNTIME int
SwigPyObject_compare(SwigPyObject *v, SwigPyObject *w)
{
  void *i = v->ptr;
  void *j = w->ptr;
  return (i < j) ? -1 : ((i > j) ? 1 : 0);
}

/* Added for Python 3.x, would it also be useful for Python 2.x? */
SWIGRUNTIME PyObject*
SwigPyObject_richcompare(SwigPyObject *v, SwigPyObject *w, int op)
{
  PyObject* res;
  if( op != Py_EQ && op != Py_NE ) {
    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
  }
  res = PyBool_FromLong( (SwigPyObject_compare(v, w)==0) == (op == Py_EQ) ? 1 : 0);
  return res;  
}


SWIGRUNTIME PyTypeObject* SwigPyObject_TypeOnce(void);

#ifdef SWIGPYTHON_BUILTIN
static swig_type_info *SwigPyObject_stype = 0;
SWIGRUNTIME PyTypeObject*
SwigPyObject_type(void) {
    SwigPyClientData *cd;
    assert(SwigPyObject_stype);
    cd = (SwigPyClientData*) SwigPyObject_stype->clientdata;
    assert(cd);
    assert(cd->pytype);
    return cd->pytype;
}
#else
SWIGRUNTIME PyTypeObject*
SwigPyObject_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = SwigPyObject_TypeOnce();
  return type;
}
#endif

SWIGRUNTIMEINLINE int
SwigPyObject_Check(PyObject *op) {
#ifdef SWIGPYTHON_BUILTIN
  PyTypeObject *target_tp = SwigPyObject_type();
  if (PyType_IsSubtype(op->ob_type, target_tp))
    return 1;
  return (strcmp(op->ob_type->tp_name, "SwigPyObject") == 0);
#else
  return (Py_TYPE(op) == SwigPyObject_type())
    || (strcmp(Py_TYPE(op)->tp_name,"SwigPyObject") == 0);
#endif
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own);

SWIGRUNTIME void
SwigPyObject_dealloc(PyObject *v)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  PyObject *next = sobj->next;
  if (sobj->own == SWIG_POINTER_OWN) {
    swig_type_info *ty = sobj->ty;
    SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
    PyObject *destroy = data ? data->destroy : 0;
    if (destroy) {
      /* destroy is always a VARARGS method */
      PyObject *res;

      /* PyObject_CallFunction() has the potential to silently drop
         the active exception.  In cases of unnamed temporary
         variable or where we just finished iterating over a generator
         StopIteration will be active right now, and this needs to
         remain true upon return from SwigPyObject_dealloc.  So save
         and restore. */
      
      PyObject *type = NULL, *value = NULL, *traceback = NULL;
      PyErr_Fetch(&type, &value, &traceback);

      if (data->delargs) {
        /* we need to create a temporary object to carry the destroy operation */
        PyObject *tmp = SwigPyObject_New(sobj->ptr, ty, 0);
        res = SWIG_Python_CallFunctor(destroy, tmp);
        Py_DECREF(tmp);
      } else {
        PyCFunction meth = PyCFunction_GET_FUNCTION(destroy);
        PyObject *mself = PyCFunction_GET_SELF(destroy);
        res = ((*meth)(mself, v));
      }
      if (!res)
        PyErr_WriteUnraisable(destroy);

      PyErr_Restore(type, value, traceback);

      Py_XDECREF(res);
    } 
#if !defined(SWIG_PYTHON_SILENT_MEMLEAK)
    else {
      const char *name = SWIG_TypePrettyName(ty);
      printf("swig/python detected a memory leak of type '%s', no destructor found.\n", (name ? name : "unknown"));
    }
#endif
  } 
  Py_XDECREF(next);
  PyObject_DEL(v);
}

SWIGRUNTIME PyObject* 
SwigPyObject_append(PyObject* v, PyObject* next)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  if (!SwigPyObject_Check(next)) {
    PyErr_SetString(PyExc_TypeError, "Attempt to append a non SwigPyObject");
    return NULL;
  }
  sobj->next = next;
  Py_INCREF(next);
  return SWIG_Py_Void();
}

SWIGRUNTIME PyObject* 
SwigPyObject_next(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  if (sobj->next) {    
    Py_INCREF(sobj->next);
    return sobj->next;
  } else {
    return SWIG_Py_Void();
  }
}

SWIGINTERN PyObject*
SwigPyObject_disown(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = 0;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
SwigPyObject_acquire(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = SWIG_POINTER_OWN;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
SwigPyObject_own(PyObject *v, PyObject *args)
{
  PyObject *val = 0;
  if (!PyArg_UnpackTuple(args, "own", 0, 1, &val)) {
    return NULL;
  } else {
    SwigPyObject *sobj = (SwigPyObject *)v;
    PyObject *obj = PyBool_FromLong(sobj->own);
    if (val) {
      if (PyObject_IsTrue(val)) {
        SwigPyObject_acquire(v,args);
      } else {
        SwigPyObject_disown(v,args);
      }
    } 
    return obj;
  }
}

static PyMethodDef
swigobject_methods[] = {
  {"disown",  SwigPyObject_disown,  METH_NOARGS,  "releases ownership of the pointer"},
  {"acquire", SwigPyObject_acquire, METH_NOARGS,  "acquires ownership of the pointer"},
  {"own",     SwigPyObject_own,     METH_VARARGS, "returns/sets ownership of the pointer"},
  {"append",  SwigPyObject_append,  METH_O,       "appends another 'this' object"},
  {"next",    SwigPyObject_next,    METH_NOARGS,  "returns the next 'this' object"},
  {"__repr__",SwigPyObject_repr2,   METH_NOARGS,  "returns object representation"},
  {0, 0, 0, 0}  
};

SWIGRUNTIME PyTypeObject*
SwigPyObject_TypeOnce(void) {
  static char swigobject_doc[] = "Swig object carries a C/C++ instance pointer";

  static PyNumberMethods SwigPyObject_as_number = {
    (binaryfunc)0, /*nb_add*/
    (binaryfunc)0, /*nb_subtract*/
    (binaryfunc)0, /*nb_multiply*/
    /* nb_divide removed in Python 3 */
#if PY_VERSION_HEX < 0x03000000
    (binaryfunc)0, /*nb_divide*/
#endif
    (binaryfunc)0, /*nb_remainder*/
    (binaryfunc)0, /*nb_divmod*/
    (ternaryfunc)0,/*nb_power*/
    (unaryfunc)0,  /*nb_negative*/
    (unaryfunc)0,  /*nb_positive*/
    (unaryfunc)0,  /*nb_absolute*/
    (inquiry)0,    /*nb_nonzero*/
    0,		   /*nb_invert*/
    0,		   /*nb_lshift*/
    0,		   /*nb_rshift*/
    0,		   /*nb_and*/
    0,		   /*nb_xor*/
    0,		   /*nb_or*/
#if PY_VERSION_HEX < 0x03000000
    0,   /*nb_coerce*/
#endif
    (unaryfunc)SwigPyObject_long, /*nb_int*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_long, /*nb_long*/
#else
    0, /*nb_reserved*/
#endif
    (unaryfunc)0,                 /*nb_float*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_oct,  /*nb_oct*/
    (unaryfunc)SwigPyObject_hex,  /*nb_hex*/
#endif
#if PY_VERSION_HEX >= 0x03050000 /* 3.5 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_matrix_multiply */
#elif PY_VERSION_HEX >= 0x03000000 /* 3.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index, nb_inplace_divide removed */
#else
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index */
#endif
  };

  static PyTypeObject swigpyobject_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
#if PY_VERSION_HEX >= 0x03000000
      PyVarObject_HEAD_INIT(NULL, 0)
#else
      PyObject_HEAD_INIT(NULL)
      0,                                    /* ob_size */
#endif
      "SwigPyObject",                       /* tp_name */
      sizeof(SwigPyObject),                 /* tp_basicsize */
      0,                                    /* tp_itemsize */
      (destructor)SwigPyObject_dealloc,     /* tp_dealloc */
      0,                                    /* tp_print */
      (getattrfunc)0,                       /* tp_getattr */
      (setattrfunc)0,                       /* tp_setattr */
#if PY_VERSION_HEX >= 0x03000000
      0, /* tp_reserved in 3.0.1, tp_compare in 3.0.0 but not used */
#else
      (cmpfunc)SwigPyObject_compare,        /* tp_compare */
#endif
      (reprfunc)SwigPyObject_repr,          /* tp_repr */
      &SwigPyObject_as_number,              /* tp_as_number */
      0,                                    /* tp_as_sequence */
      0,                                    /* tp_as_mapping */
      (hashfunc)0,                          /* tp_hash */
      (ternaryfunc)0,                       /* tp_call */
      0,                                    /* tp_str */
      PyObject_GenericGetAttr,              /* tp_getattro */
      0,                                    /* tp_setattro */
      0,                                    /* tp_as_buffer */
      Py_TPFLAGS_DEFAULT,                   /* tp_flags */
      swigobject_doc,                       /* tp_doc */
      0,                                    /* tp_traverse */
      0,                                    /* tp_clear */
      (richcmpfunc)SwigPyObject_richcompare,/* tp_richcompare */
      0,                                    /* tp_weaklistoffset */
      0,                                    /* tp_iter */
      0,                                    /* tp_iternext */
      swigobject_methods,                   /* tp_methods */
      0,                                    /* tp_members */
      0,                                    /* tp_getset */
      0,                                    /* tp_base */
      0,                                    /* tp_dict */
      0,                                    /* tp_descr_get */
      0,                                    /* tp_descr_set */
      0,                                    /* tp_dictoffset */
      0,                                    /* tp_init */
      0,                                    /* tp_alloc */
      0,                                    /* tp_new */
      0,                                    /* tp_free */
      0,                                    /* tp_is_gc */
      0,                                    /* tp_bases */
      0,                                    /* tp_mro */
      0,                                    /* tp_cache */
      0,                                    /* tp_subclasses */
      0,                                    /* tp_weaklist */
      0,                                    /* tp_del */
      0,                                    /* tp_version_tag */
#if PY_VERSION_HEX >= 0x03040000
      0,                                    /* tp_finalize */
#endif
#if PY_VERSION_HEX >= 0x03080000
      0,                                    /* tp_vectorcall */
#endif
#if (PY_VERSION_HEX >= 0x03080000) && (PY_VERSION_HEX < 0x03090000)
      0,                                    /* tp_print */
#endif
#ifdef COUNT_ALLOCS
      0,                                    /* tp_allocs */
      0,                                    /* tp_frees */
      0,                                    /* tp_maxalloc */
      0,                                    /* tp_prev */
      0                                     /* tp_next */
#endif
    };
    swigpyobject_type = tmp;
    type_init = 1;
    if (PyType_Ready(&swigpyobject_type) < 0)
      return NULL;
  }
  return &swigpyobject_type;
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own)
{
  SwigPyObject *sobj = PyObject_NEW(SwigPyObject, SwigPyObject_type());
  if (sobj) {
    sobj->ptr  = ptr;
    sobj->ty   = ty;
    sobj->own  = own;
    sobj->next = 0;
  }
  return (PyObject *)sobj;
}

/* -----------------------------------------------------------------------------
 * Implements a simple Swig Packed type, and use it instead of string
 * ----------------------------------------------------------------------------- */

typedef struct {
  PyObject_HEAD
  void *pack;
  swig_type_info *ty;
  size_t size;
} SwigPyPacked;

SWIGRUNTIME PyObject *
SwigPyPacked_repr(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    return SWIG_Python_str_FromFormat("<Swig Packed at %s%s>", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromFormat("<Swig Packed %s>", v->ty->name);
  }  
}

SWIGRUNTIME PyObject *
SwigPyPacked_str(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))){
    return SWIG_Python_str_FromFormat("%s%s", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromChar(v->ty->name);
  }  
}

SWIGRUNTIME int
SwigPyPacked_compare(SwigPyPacked *v, SwigPyPacked *w)
{
  size_t i = v->size;
  size_t j = w->size;
  int s = (i < j) ? -1 : ((i > j) ? 1 : 0);
  return s ? s : strncmp((const char *)v->pack, (const char *)w->pack, 2*v->size);
}

SWIGRUNTIME PyTypeObject* SwigPyPacked_TypeOnce(void);

SWIGRUNTIME PyTypeObject*
SwigPyPacked_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = SwigPyPacked_TypeOnce();
  return type;
}

SWIGRUNTIMEINLINE int
SwigPyPacked_Check(PyObject *op) {
  return ((op)->ob_type == SwigPyPacked_TypeOnce()) 
    || (strcmp((op)->ob_type->tp_name,"SwigPyPacked") == 0);
}

SWIGRUNTIME void
SwigPyPacked_dealloc(PyObject *v)
{
  if (SwigPyPacked_Check(v)) {
    SwigPyPacked *sobj = (SwigPyPacked *) v;
    free(sobj->pack);
  }
  PyObject_DEL(v);
}

SWIGRUNTIME PyTypeObject*
SwigPyPacked_TypeOnce(void) {
  static char swigpacked_doc[] = "Swig object carries a C/C++ instance pointer";
  static PyTypeObject swigpypacked_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
#if PY_VERSION_HEX>=0x03000000
      PyVarObject_HEAD_INIT(NULL, 0)
#else
      PyObject_HEAD_INIT(NULL)
      0,                                    /* ob_size */
#endif
      "SwigPyPacked",                       /* tp_name */
      sizeof(SwigPyPacked),                 /* tp_basicsize */
      0,                                    /* tp_itemsize */
      (destructor)SwigPyPacked_dealloc,     /* tp_dealloc */
      0,                                    /* tp_print */
      (getattrfunc)0,                       /* tp_getattr */
      (setattrfunc)0,                       /* tp_setattr */
#if PY_VERSION_HEX>=0x03000000
      0, /* tp_reserved in 3.0.1 */
#else
      (cmpfunc)SwigPyPacked_compare,        /* tp_compare */
#endif
      (reprfunc)SwigPyPacked_repr,          /* tp_repr */
      0,                                    /* tp_as_number */
      0,                                    /* tp_as_sequence */
      0,                                    /* tp_as_mapping */
      (hashfunc)0,                          /* tp_hash */
      (ternaryfunc)0,                       /* tp_call */
      (reprfunc)SwigPyPacked_str,           /* tp_str */
      PyObject_GenericGetAttr,              /* tp_getattro */
      0,                                    /* tp_setattro */
      0,                                    /* tp_as_buffer */
      Py_TPFLAGS_DEFAULT,                   /* tp_flags */
      swigpacked_doc,                       /* tp_doc */
      0,                                    /* tp_traverse */
      0,                                    /* tp_clear */
      0,                                    /* tp_richcompare */
      0,                                    /* tp_weaklistoffset */
      0,                                    /* tp_iter */
      0,                                    /* tp_iternext */
      0,                                    /* tp_methods */
      0,                                    /* tp_members */
      0,                                    /* tp_getset */
      0,                                    /* tp_base */
      0,                                    /* tp_dict */
      0,                                    /* tp_descr_get */
      0,                                    /* tp_descr_set */
      0,                                    /* tp_dictoffset */
      0,                                    /* tp_init */
      0,                                    /* tp_alloc */
      0,                                    /* tp_new */
      0,                                    /* tp_free */
      0,                                    /* tp_is_gc */
      0,                                    /* tp_bases */
      0,                                    /* tp_mro */
      0,                                    /* tp_cache */
      0,                                    /* tp_subclasses */
      0,                                    /* tp_weaklist */
      0,                                    /* tp_del */
      0,                                    /* tp_version_tag */
#if PY_VERSION_HEX >= 0x03040000
      0,                                    /* tp_finalize */
#endif
#if PY_VERSION_HEX >= 0x03080000
      0,                                    /* tp_vectorcall */
#endif
#if (PY_VERSION_HEX >= 0x03080000) && (PY_VERSION_HEX < 0x03090000)
      0,                                    /* tp_print */
#endif
#ifdef COUNT_ALLOCS
      0,                                    /* tp_allocs */
      0,                                    /* tp_frees */
      0,                                    /* tp_maxalloc */
      0,                                    /* tp_prev */
      0                                     /* tp_next */
#endif
    };
    swigpypacked_type = tmp;
    type_init = 1;
    if (PyType_Ready(&swigpypacked_type) < 0)
      return NULL;
  }
  return &swigpypacked_type;
}

SWIGRUNTIME PyObject *
SwigPyPacked_New(void *ptr, size_t size, swig_type_info *ty)
{
  SwigPyPacked *sobj = PyObject_NEW(SwigPyPacked, SwigPyPacked_type());
  if (sobj) {
    void *pack = malloc(size);
    if (pack) {
      memcpy(pack, ptr, size);
      sobj->pack = pack;
      sobj->ty   = ty;
      sobj->size = size;
    } else {
      PyObject_DEL((PyObject *) sobj);
      sobj = 0;
    }
  }
  return (PyObject *) sobj;
}

SWIGRUNTIME swig_type_info *
SwigPyPacked_UnpackData(PyObject *obj, void *ptr, size_t size)
{
  if (SwigPyPacked_Check(obj)) {
    SwigPyPacked *sobj = (SwigPyPacked *)obj;
    if (sobj->size != size) return 0;
    memcpy(ptr, sobj->pack, size);
    return sobj->ty;
  } else {
    return 0;
  }
}

/* -----------------------------------------------------------------------------
 * pointers/data manipulation
 * ----------------------------------------------------------------------------- */

static PyObject *Swig_This_global = NULL;

SWIGRUNTIME PyObject *
SWIG_This(void)
{
  if (Swig_This_global == NULL)
    Swig_This_global = SWIG_Python_str_FromChar("this");
  return Swig_This_global;
}

/* #define SWIG_PYTHON_SLOW_GETSET_THIS */

/* TODO: I don't know how to implement the fast getset in Python 3 right now */
#if PY_VERSION_HEX>=0x03000000
#define SWIG_PYTHON_SLOW_GETSET_THIS 
#endif

SWIGRUNTIME SwigPyObject *
SWIG_Python_GetSwigThis(PyObject *pyobj) 
{
  PyObject *obj;

  if (SwigPyObject_Check(pyobj))
    return (SwigPyObject *) pyobj;

#ifdef SWIGPYTHON_BUILTIN
  (void)obj;
# ifdef PyWeakref_CheckProxy
  if (PyWeakref_CheckProxy(pyobj)) {
    pyobj = PyWeakref_GET_OBJECT(pyobj);
    if (pyobj && SwigPyObject_Check(pyobj))
      return (SwigPyObject*) pyobj;
  }
# endif
  return NULL;
#else

  obj = 0;

#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
  if (PyInstance_Check(pyobj)) {
    obj = _PyInstance_Lookup(pyobj, SWIG_This());      
  } else {
    PyObject **dictptr = _PyObject_GetDictPtr(pyobj);
    if (dictptr != NULL) {
      PyObject *dict = *dictptr;
      obj = dict ? PyDict_GetItem(dict, SWIG_This()) : 0;
    } else {
#ifdef PyWeakref_CheckProxy
      if (PyWeakref_CheckProxy(pyobj)) {
	PyObject *wobj = PyWeakref_GET_OBJECT(pyobj);
	return wobj ? SWIG_Python_GetSwigThis(wobj) : 0;
      }
#endif
      obj = PyObject_GetAttr(pyobj,SWIG_This());
      if (obj) {
	Py_DECREF(obj);
      } else {
	if (PyErr_Occurred()) PyErr_Clear();
	return 0;
      }
    }
  }
#else
  obj = PyObject_GetAttr(pyobj,SWIG_This());
  if (obj) {
    Py_DECREF(obj);
  } else {
    if (PyErr_Occurred()) PyErr_Clear();
    return 0;
  }
#endif
  if (obj && !SwigPyObject_Check(obj)) {
    /* a PyObject is called 'this', try to get the 'real this'
       SwigPyObject from it */ 
    return SWIG_Python_GetSwigThis(obj);
  }
  return (SwigPyObject *)obj;
#endif
}

/* Acquire a pointer value */

SWIGRUNTIME int
SWIG_Python_AcquirePtr(PyObject *obj, int own) {
  if (own == SWIG_POINTER_OWN) {
    SwigPyObject *sobj = SWIG_Python_GetSwigThis(obj);
    if (sobj) {
      int oldown = sobj->own;
      sobj->own = own;
      return oldown;
    }
  }
  return 0;
}

/* Convert a pointer value */

SWIGRUNTIME int
SWIG_Python_ConvertPtrAndOwn(PyObject *obj, void **ptr, swig_type_info *ty, int flags, int *own) {
  int res;
  SwigPyObject *sobj;
  int implicit_conv = (flags & SWIG_POINTER_IMPLICIT_CONV) != 0;

  if (!obj)
    return SWIG_ERROR;
  if (obj == Py_None && !implicit_conv) {
    if (ptr)
      *ptr = 0;
    return (flags & SWIG_POINTER_NO_NULL) ? SWIG_NullReferenceError : SWIG_OK;
  }

  res = SWIG_ERROR;

  sobj = SWIG_Python_GetSwigThis(obj);
  if (own)
    *own = 0;
  while (sobj) {
    void *vptr = sobj->ptr;
    if (ty) {
      swig_type_info *to = sobj->ty;
      if (to == ty) {
        /* no type cast needed */
        if (ptr) *ptr = vptr;
        break;
      } else {
        swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
        if (!tc) {
          sobj = (SwigPyObject *)sobj->next;
        } else {
          if (ptr) {
            int newmemory = 0;
            *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
            if (newmemory == SWIG_CAST_NEW_MEMORY) {
              assert(own); /* badly formed typemap which will lead to a memory leak - it must set and use own to delete *ptr */
              if (own)
                *own = *own | SWIG_CAST_NEW_MEMORY;
            }
          }
          break;
        }
      }
    } else {
      if (ptr) *ptr = vptr;
      break;
    }
  }
  if (sobj) {
    if (own)
      *own = *own | sobj->own;
    if (flags & SWIG_POINTER_DISOWN) {
      sobj->own = 0;
    }
    res = SWIG_OK;
  } else {
    if (implicit_conv) {
      SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
      if (data && !data->implicitconv) {
        PyObject *klass = data->klass;
        if (klass) {
          PyObject *impconv;
          data->implicitconv = 1; /* avoid recursion and call 'explicit' constructors*/
          impconv = SWIG_Python_CallFunctor(klass, obj);
          data->implicitconv = 0;
          if (PyErr_Occurred()) {
            PyErr_Clear();
            impconv = 0;
          }
          if (impconv) {
            SwigPyObject *iobj = SWIG_Python_GetSwigThis(impconv);
            if (iobj) {
              void *vptr;
              res = SWIG_Python_ConvertPtrAndOwn((PyObject*)iobj, &vptr, ty, 0, 0);
              if (SWIG_IsOK(res)) {
                if (ptr) {
                  *ptr = vptr;
                  /* transfer the ownership to 'ptr' */
                  iobj->own = 0;
                  res = SWIG_AddCast(res);
                  res = SWIG_AddNewMask(res);
                } else {
                  res = SWIG_AddCast(res);		    
                }
              }
            }
            Py_DECREF(impconv);
          }
        }
      }
      if (!SWIG_IsOK(res) && obj == Py_None) {
        if (ptr)
          *ptr = 0;
        if (PyErr_Occurred())
          PyErr_Clear();
        res = SWIG_OK;
      }
    }
  }
  return res;
}

/* Convert a function ptr value */

SWIGRUNTIME int
SWIG_Python_ConvertFunctionPtr(PyObject *obj, void **ptr, swig_type_info *ty) {
  if (!PyCFunction_Check(obj)) {
    return SWIG_ConvertPtr(obj, ptr, ty, 0);
  } else {
    void *vptr = 0;
    swig_cast_info *tc;

    /* here we get the method pointer for callbacks */
    const char *doc = (((PyCFunctionObject *)obj) -> m_ml -> ml_doc);
    const char *desc = doc ? strstr(doc, "swig_ptr: ") : 0;
    if (desc)
      desc = ty ? SWIG_UnpackVoidPtr(desc + 10, &vptr, ty->name) : 0;
    if (!desc)
      return SWIG_ERROR;
    tc = SWIG_TypeCheck(desc,ty);
    if (tc) {
      int newmemory = 0;
      *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
      assert(!newmemory); /* newmemory handling not yet implemented */
    } else {
      return SWIG_ERROR;
    }
    return SWIG_OK;
  }
}

/* Convert a packed pointer value */

SWIGRUNTIME int
SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, size_t sz, swig_type_info *ty) {
  swig_type_info *to = SwigPyPacked_UnpackData(obj, ptr, sz);
  if (!to) return SWIG_ERROR;
  if (ty) {
    if (to != ty) {
      /* check type cast? */
      swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
      if (!tc) return SWIG_ERROR;
    }
  }
  return SWIG_OK;
}  

/* -----------------------------------------------------------------------------
 * Create a new pointer object
 * ----------------------------------------------------------------------------- */

/*
  Create a new instance object, without calling __init__, and set the
  'this' attribute.
*/

SWIGRUNTIME PyObject* 
SWIG_Python_NewShadowInstance(SwigPyClientData *data, PyObject *swig_this)
{
  PyObject *inst = 0;
  PyObject *newraw = data->newraw;
  if (newraw) {
    inst = PyObject_Call(newraw, data->newargs, NULL);
    if (inst) {
#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
      PyObject **dictptr = _PyObject_GetDictPtr(inst);
      if (dictptr != NULL) {
	PyObject *dict = *dictptr;
	if (dict == NULL) {
	  dict = PyDict_New();
	  *dictptr = dict;
	  PyDict_SetItem(dict, SWIG_This(), swig_this);
	}
      }
#else
      if (PyObject_SetAttr(inst, SWIG_This(), swig_this) == -1) {
        Py_DECREF(inst);
        inst = 0;
      }
#endif
    }
  } else {
#if PY_VERSION_HEX >= 0x03000000
    PyObject *empty_args = PyTuple_New(0);
    if (empty_args) {
      PyObject *empty_kwargs = PyDict_New();
      if (empty_kwargs) {
        inst = ((PyTypeObject *)data->newargs)->tp_new((PyTypeObject *)data->newargs, empty_args, empty_kwargs);
        Py_DECREF(empty_kwargs);
        if (inst) {
          if (PyObject_SetAttr(inst, SWIG_This(), swig_this) == -1) {
            Py_DECREF(inst);
            inst = 0;
          } else {
            Py_TYPE(inst)->tp_flags &= ~Py_TPFLAGS_VALID_VERSION_TAG;
          }
        }
      }
      Py_DECREF(empty_args);
    }
#else
    PyObject *dict = PyDict_New();
    if (dict) {
      PyDict_SetItem(dict, SWIG_This(), swig_this);
      inst = PyInstance_NewRaw(data->newargs, dict);
      Py_DECREF(dict);
    }
#endif
  }
  return inst;
}

SWIGRUNTIME int
SWIG_Python_SetSwigThis(PyObject *inst, PyObject *swig_this)
{
#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
  PyObject **dictptr = _PyObject_GetDictPtr(inst);
  if (dictptr != NULL) {
    PyObject *dict = *dictptr;
    if (dict == NULL) {
      dict = PyDict_New();
      *dictptr = dict;
    }
    return PyDict_SetItem(dict, SWIG_This(), swig_this);
  }
#endif
  return PyObject_SetAttr(inst, SWIG_This(), swig_this);
} 


SWIGINTERN PyObject *
SWIG_Python_InitShadowInstance(PyObject *args) {
  PyObject *obj[2];
  if (!SWIG_Python_UnpackTuple(args, "swiginit", 2, 2, obj)) {
    return NULL;
  } else {
    SwigPyObject *sthis = SWIG_Python_GetSwigThis(obj[0]);
    if (sthis) {
      SwigPyObject_append((PyObject*) sthis, obj[1]);
    } else {
      if (SWIG_Python_SetSwigThis(obj[0], obj[1]) != 0)
        return NULL;
    }
    return SWIG_Py_Void();
  }
}

/* Create a new pointer object */

SWIGRUNTIME PyObject *
SWIG_Python_NewPointerObj(PyObject *self, void *ptr, swig_type_info *type, int flags) {
  SwigPyClientData *clientdata;
  PyObject * robj;
  int own;

  if (!ptr)
    return SWIG_Py_Void();

  clientdata = type ? (SwigPyClientData *)(type->clientdata) : 0;
  own = (flags & SWIG_POINTER_OWN) ? SWIG_POINTER_OWN : 0;
  if (clientdata && clientdata->pytype) {
    SwigPyObject *newobj;
    if (flags & SWIG_BUILTIN_TP_INIT) {
      newobj = (SwigPyObject*) self;
      if (newobj->ptr) {
        PyObject *next_self = clientdata->pytype->tp_alloc(clientdata->pytype, 0);
        while (newobj->next)
	  newobj = (SwigPyObject *) newobj->next;
        newobj->next = next_self;
        newobj = (SwigPyObject *)next_self;
#ifdef SWIGPYTHON_BUILTIN
        newobj->dict = 0;
#endif
      }
    } else {
      newobj = PyObject_New(SwigPyObject, clientdata->pytype);
#ifdef SWIGPYTHON_BUILTIN
      newobj->dict = 0;
#endif
    }
    if (newobj) {
      newobj->ptr = ptr;
      newobj->ty = type;
      newobj->own = own;
      newobj->next = 0;
      return (PyObject*) newobj;
    }
    return SWIG_Py_Void();
  }

  assert(!(flags & SWIG_BUILTIN_TP_INIT));

  robj = SwigPyObject_New(ptr, type, own);
  if (robj && clientdata && !(flags & SWIG_POINTER_NOSHADOW)) {
    PyObject *inst = SWIG_Python_NewShadowInstance(clientdata, robj);
    Py_DECREF(robj);
    robj = inst;
  }
  return robj;
}

/* Create a new packed object */

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_NewPackedObj(void *ptr, size_t sz, swig_type_info *type) {
  return ptr ? SwigPyPacked_New((void *) ptr, sz, type) : SWIG_Py_Void();
}

/* -----------------------------------------------------------------------------*
 *  Get type list 
 * -----------------------------------------------------------------------------*/

#ifdef SWIG_LINK_RUNTIME
void *SWIG_ReturnGlobalTypeList(void *);
#endif

SWIGRUNTIME swig_module_info *
SWIG_Python_GetModule(void *SWIGUNUSEDPARM(clientdata)) {
  static void *type_pointer = (void *)0;
  /* first check if module already created */
  if (!type_pointer) {
#ifdef SWIG_LINK_RUNTIME
    type_pointer = SWIG_ReturnGlobalTypeList((void *)0);
#else
    type_pointer = PyCapsule_Import(SWIGPY_CAPSULE_NAME, 0);
    if (PyErr_Occurred()) {
      PyErr_Clear();
      type_pointer = (void *)0;
    }
#endif
  }
  return (swig_module_info *) type_pointer;
}

SWIGRUNTIME void
SWIG_Python_DestroyModule(PyObject *obj)
{
  swig_module_info *swig_module = (swig_module_info *) PyCapsule_GetPointer(obj, SWIGPY_CAPSULE_NAME);
  swig_type_info **types = swig_module->types;
  size_t i;
  for (i =0; i < swig_module->size; ++i) {
    swig_type_info *ty = types[i];
    if (ty->owndata) {
      SwigPyClientData *data = (SwigPyClientData *) ty->clientdata;
      if (data) SwigPyClientData_Del(data);
    }
  }
  Py_DECREF(SWIG_This());
  Swig_This_global = NULL;
}

SWIGRUNTIME void
SWIG_Python_SetModule(swig_module_info *swig_module) {
#if PY_VERSION_HEX >= 0x03000000
 /* Add a dummy module object into sys.modules */
  PyObject *module = PyImport_AddModule("swig_runtime_data" SWIG_RUNTIME_VERSION);
#else
  static PyMethodDef swig_empty_runtime_method_table[] = { {NULL, NULL, 0, NULL} }; /* Sentinel */
  PyObject *module = Py_InitModule("swig_runtime_data" SWIG_RUNTIME_VERSION, swig_empty_runtime_method_table);
#endif
  PyObject *pointer = PyCapsule_New((void *) swig_module, SWIGPY_CAPSULE_NAME, SWIG_Python_DestroyModule);
  if (pointer && module) {
    PyModule_AddObject(module, "type_pointer_capsule" SWIG_TYPE_TABLE_NAME, pointer);
  } else {
    Py_XDECREF(pointer);
  }
}

/* The python cached type query */
SWIGRUNTIME PyObject *
SWIG_Python_TypeCache(void) {
  static PyObject *SWIG_STATIC_POINTER(cache) = PyDict_New();
  return cache;
}

SWIGRUNTIME swig_type_info *
SWIG_Python_TypeQuery(const char *type)
{
  PyObject *cache = SWIG_Python_TypeCache();
  PyObject *key = SWIG_Python_str_FromChar(type); 
  PyObject *obj = PyDict_GetItem(cache, key);
  swig_type_info *descriptor;
  if (obj) {
    descriptor = (swig_type_info *) PyCapsule_GetPointer(obj, NULL);
  } else {
    swig_module_info *swig_module = SWIG_GetModule(0);
    descriptor = SWIG_TypeQueryModule(swig_module, swig_module, type);
    if (descriptor) {
      obj = PyCapsule_New((void*) descriptor, NULL, NULL);
      PyDict_SetItem(cache, key, obj);
      Py_DECREF(obj);
    }
  }
  Py_DECREF(key);
  return descriptor;
}

/* 
   For backward compatibility only
*/
#define SWIG_POINTER_EXCEPTION  0
#define SWIG_arg_fail(arg)      SWIG_Python_ArgFail(arg)
#define SWIG_MustGetPtr(p, type, argnum, flags)  SWIG_Python_MustGetPtr(p, type, argnum, flags)

SWIGRUNTIME int
SWIG_Python_AddErrMesg(const char* mesg, int infront)
{  
  if (PyErr_Occurred()) {
    PyObject *type = 0;
    PyObject *value = 0;
    PyObject *traceback = 0;
    PyErr_Fetch(&type, &value, &traceback);
    if (value) {
      PyObject *old_str = PyObject_Str(value);
      const char *tmp = SWIG_Python_str_AsChar(old_str);
      const char *errmesg = tmp ? tmp : "Invalid error message";
      Py_XINCREF(type);
      PyErr_Clear();
      if (infront) {
	PyErr_Format(type, "%s %s", mesg, errmesg);
      } else {
	PyErr_Format(type, "%s %s", errmesg, mesg);
      }
      SWIG_Python_str_DelForPy3(tmp);
      Py_DECREF(old_str);
    }
    return 1;
  } else {
    return 0;
  }
}
  
SWIGRUNTIME int
SWIG_Python_ArgFail(int argnum)
{
  if (PyErr_Occurred()) {
    /* add information about failing argument */
    char mesg[256];
    PyOS_snprintf(mesg, sizeof(mesg), "argument number %d:", argnum);
    return SWIG_Python_AddErrMesg(mesg, 1);
  } else {
    return 0;
  }
}

SWIGRUNTIMEINLINE const char *
SwigPyObject_GetDesc(PyObject *self)
{
  SwigPyObject *v = (SwigPyObject *)self;
  swig_type_info *ty = v ? v->ty : 0;
  return ty ? ty->str : "";
}

SWIGRUNTIME void
SWIG_Python_TypeError(const char *type, PyObject *obj)
{
  if (type) {
#if defined(SWIG_COBJECT_TYPES)
    if (obj && SwigPyObject_Check(obj)) {
      const char *otype = (const char *) SwigPyObject_GetDesc(obj);
      if (otype) {
	PyErr_Format(PyExc_TypeError, "a '%s' is expected, 'SwigPyObject(%s)' is received",
		     type, otype);
	return;
      }
    } else 
#endif      
    {
      const char *otype = (obj ? obj->ob_type->tp_name : 0); 
      if (otype) {
	PyObject *str = PyObject_Str(obj);
	const char *cstr = str ? SWIG_Python_str_AsChar(str) : 0;
	if (cstr) {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s(%s)' is received",
		       type, otype, cstr);
          SWIG_Python_str_DelForPy3(cstr);
	} else {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s' is received",
		       type, otype);
	}
	Py_XDECREF(str);
	return;
      }
    }   
    PyErr_Format(PyExc_TypeError, "a '%s' is expected", type);
  } else {
    PyErr_Format(PyExc_TypeError, "unexpected type is received");
  }
}


/* Convert a pointer value, signal an exception on a type mismatch */
SWIGRUNTIME void *
SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int SWIGUNUSEDPARM(argnum), int flags) {
  void *result;
  if (SWIG_Python_ConvertPtr(obj, &result, ty, flags) == -1) {
    PyErr_Clear();
#if SWIG_POINTER_EXCEPTION
    if (flags) {
      SWIG_Python_TypeError(SWIG_TypePrettyName(ty), obj);
      SWIG_Python_ArgFail(argnum);
    }
#endif
  }
  return result;
}

#ifdef SWIGPYTHON_BUILTIN
SWIGRUNTIME int
SWIG_Python_NonDynamicSetAttr(PyObject *obj, PyObject *name, PyObject *value) {
  PyTypeObject *tp = obj->ob_type;
  PyObject *descr;
  PyObject *encoded_name;
  descrsetfunc f;
  int res = -1;

# ifdef Py_USING_UNICODE
  if (PyString_Check(name)) {
    name = PyUnicode_Decode(PyString_AsString(name), PyString_Size(name), NULL, NULL);
    if (!name)
      return -1;
  } else if (!PyUnicode_Check(name))
# else
  if (!PyString_Check(name))
# endif
  {
    PyErr_Format(PyExc_TypeError, "attribute name must be string, not '%.200s'", name->ob_type->tp_name);
    return -1;
  } else {
    Py_INCREF(name);
  }

  if (!tp->tp_dict) {
    if (PyType_Ready(tp) < 0)
      goto done;
  }

  descr = _PyType_Lookup(tp, name);
  f = NULL;
  if (descr != NULL)
    f = descr->ob_type->tp_descr_set;
  if (!f) {
    if (PyString_Check(name)) {
      encoded_name = name;
      Py_INCREF(name);
    } else {
      encoded_name = PyUnicode_AsUTF8String(name);
      if (!encoded_name)
        return -1;
    }
    PyErr_Format(PyExc_AttributeError, "'%.100s' object has no attribute '%.200s'", tp->tp_name, PyString_AsString(encoded_name));
    Py_DECREF(encoded_name);
  } else {
    res = f(descr, obj, value);
  }
  
  done:
  Py_DECREF(name);
  return res;
}
#endif


#ifdef __cplusplus
}
#endif



#define SWIG_exception_fail(code, msg) do { SWIG_Error(code, msg); SWIG_fail; } while(0) 

#define SWIG_contract_assert(expr, msg) if (!(expr)) { SWIG_Error(SWIG_RuntimeError, msg); SWIG_fail; } else 



#ifdef __cplusplus
extern "C" {
#endif

/* Method creation and docstring support functions */

SWIGINTERN PyMethodDef *SWIG_PythonGetProxyDoc(const char *name);
SWIGINTERN PyObject *SWIG_PyInstanceMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *func);
SWIGINTERN PyObject *SWIG_PyStaticMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *func);

#ifdef __cplusplus
}
#endif


  #define SWIG_exception(code, msg) do { SWIG_Error(code, msg); SWIG_fail;; } while(0) 


/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE_p_Axis swig_types[0]
#define SWIGTYPE_p_CGAL__Delaunay_triangulation_2T_fastjet__contrib__piranha__DynamicVoronoiBase__K_fastjet__contrib__piranha__DynamicVoronoiBase__Tds2_t__Point swig_types[1]
#define SWIGTYPE_p_Event swig_types[2]
#define SWIGTYPE_p_EventVector swig_types[3]
#define SWIGTYPE_p_Face_circulator swig_types[4]
#define SWIGTYPE_p_Face_handle swig_types[5]
#define SWIGTYPE_p_IndexedPointsVec swig_types[6]
#define SWIGTYPE_p_K swig_types[7]
#define SWIGTYPE_p_PairwiseDistance swig_types[8]
#define SWIGTYPE_p_ParticleCollection swig_types[9]
#define SWIGTYPE_p_ParticleWeight swig_types[10]
#define SWIGTYPE_p_Point swig_types[11]
#define SWIGTYPE_p_Search_traits_2 swig_types[12]
#define SWIGTYPE_p_Self swig_types[13]
#define SWIGTYPE_p_StructureType swig_types[14]
#define SWIGTYPE_p_Tds2 swig_types[15]
#define SWIGTYPE_p_Tfb2 swig_types[16]
#define SWIGTYPE_p_Transform swig_types[17]
#define SWIGTYPE_p_Triangulation swig_types[18]
#define SWIGTYPE_p_Tvb2 swig_types[19]
#define SWIGTYPE_p_ValuePublic swig_types[20]
#define SWIGTYPE_p_Vertex_circulator swig_types[21]
#define SWIGTYPE_p_Vertex_handle swig_types[22]
#define SWIGTYPE_p_WeightCollection swig_types[23]
#define SWIGTYPE_p_allocator_type swig_types[24]
#define SWIGTYPE_p_char swig_types[25]
#define SWIGTYPE_p_difference_type swig_types[26]
#define SWIGTYPE_p_double swig_types[27]
#define SWIGTYPE_p_fastjet__BackgroundEstimatorBase swig_types[28]
#define SWIGTYPE_p_fastjet__GhostedAreaSpec swig_types[29]
#define SWIGTYPE_p_fastjet__GridMedianBackgroundEstimator swig_types[30]
#define SWIGTYPE_p_fastjet__JetAlgorithm swig_types[31]
#define SWIGTYPE_p_fastjet__JetMedianBackgroundEstimator swig_types[32]
#define SWIGTYPE_p_fastjet__PseudoJet swig_types[33]
#define SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Energy_fastjet__contrib__emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t swig_types[34]
#define SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Energy_fastjet__contrib__emd__EEArcLength_lemon__NetworkSimplexT_t_t swig_types[35]
#define SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Energy_fastjet__contrib__emd__EEDotMassive_lemon__NetworkSimplexT_t_t swig_types[36]
#define SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Energy_fastjet__contrib__emd__EEDot_lemon__NetworkSimplexT_t_t swig_types[37]
#define SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Momentum_fastjet__contrib__emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t swig_types[38]
#define SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Momentum_fastjet__contrib__emd__EEArcLength_lemon__NetworkSimplexT_t_t swig_types[39]
#define SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Momentum_fastjet__contrib__emd__EEDotMassive_lemon__NetworkSimplexT_t_t swig_types[40]
#define SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Momentum_fastjet__contrib__emd__EEDot_lemon__NetworkSimplexT_t_t swig_types[41]
#define SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseEnergy_fastjet__contrib__emd__DeltaR_lemon__NetworkSimplexT_t_t swig_types[42]
#define SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseEnergy_fastjet__contrib__emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t swig_types[43]
#define SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseEnergy_fastjet__contrib__emd__HadronicDot_lemon__NetworkSimplexT_t_t swig_types[44]
#define SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseMomentum_fastjet__contrib__emd__DeltaR_lemon__NetworkSimplexT_t_t swig_types[45]
#define SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseMomentum_fastjet__contrib__emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t swig_types[46]
#define SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseMomentum_fastjet__contrib__emd__HadronicDot_lemon__NetworkSimplexT_t_t swig_types[47]
#define SWIGTYPE_p_fastjet__contrib__piranha__DynamicVoronoiBase swig_types[48]
#define SWIGTYPE_p_fastjet__contrib__piranha__DynamicVoronoiCylinder swig_types[49]
#define SWIGTYPE_p_fastjet__contrib__piranha__DynamicVoronoiDisk swig_types[50]
#define SWIGTYPE_p_fastjet__contrib__piranha__GhostGridBase swig_types[51]
#define SWIGTYPE_p_fastjet__contrib__piranha__GhostGridDisk swig_types[52]
#define SWIGTYPE_p_fastjet__contrib__piranha__GhostGridRectangle swig_types[53]
#define SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiCylinder_t swig_types[54]
#define SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiDisk_t swig_types[55]
#define SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorCylinder swig_types[56]
#define SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorDisk swig_types[57]
#define SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t_t swig_types[58]
#define SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEArcLength_lemon__NetworkSimplexT_t_t_t swig_types[59]
#define SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEDotMassive_lemon__NetworkSimplexT_t_t_t swig_types[60]
#define SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEDot_lemon__NetworkSimplexT_t_t_t swig_types[61]
#define SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t_t swig_types[62]
#define SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEArcLength_lemon__NetworkSimplexT_t_t_t swig_types[63]
#define SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEDotMassive_lemon__NetworkSimplexT_t_t_t swig_types[64]
#define SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEDot_lemon__NetworkSimplexT_t_t_t swig_types[65]
#define SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__DeltaR_lemon__NetworkSimplexT_t_t_t swig_types[66]
#define SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t_t swig_types[67]
#define SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__HadronicDot_lemon__NetworkSimplexT_t_t_t swig_types[68]
#define SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__DeltaR_lemon__NetworkSimplexT_t_t_t swig_types[69]
#define SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t_t swig_types[70]
#define SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__HadronicDot_lemon__NetworkSimplexT_t_t_t swig_types[71]
#define SWIGTYPE_p_fastjet__contrib__piranha__PiranhaError swig_types[72]
#define SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__Energy_t swig_types[73]
#define SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__Momentum_t swig_types[74]
#define SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__TransverseEnergy_t swig_types[75]
#define SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__TransverseMomentum_t swig_types[76]
#define SWIGTYPE_p_fastjet__contrib__piranha__SubtractionHistory swig_types[77]
#define SWIGTYPE_p_first_type swig_types[78]
#define SWIGTYPE_p_p_PyObject swig_types[79]
#define SWIGTYPE_p_second_type swig_types[80]
#define SWIGTYPE_p_size_type swig_types[81]
#define SWIGTYPE_p_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t swig_types[82]
#define SWIGTYPE_p_std__allocatorT_int_t swig_types[83]
#define SWIGTYPE_p_std__allocatorT_std__pairT_double_double_t_t swig_types[84]
#define SWIGTYPE_p_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t swig_types[85]
#define SWIGTYPE_p_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t swig_types[86]
#define SWIGTYPE_p_std__invalid_argument swig_types[87]
#define SWIGTYPE_p_std__pairT_double_double_t swig_types[88]
#define SWIGTYPE_p_std__pairT_std__pairT_double_double_t_std__pairT_double_double_t_t swig_types[89]
#define SWIGTYPE_p_std__runtime_error swig_types[90]
#define SWIGTYPE_p_std__vectorT_CGAL__Delaunay_triangulation_2T_fastjet__contrib__piranha__DynamicVoronoiBase__K_fastjet__contrib__piranha__DynamicVoronoiBase__Tds2_t__Point_std__allocatorT_CGAL__Delaunay_triangulation_2T_fastjet__contrib__piranha__DynamicVoronoiBase__K_fastjet__contrib__piranha__DynamicVoronoiBase__Tds2_t__Point_t_t swig_types[91]
#define SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t swig_types[92]
#define SWIGTYPE_p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t swig_types[93]
#define SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t swig_types[94]
#define SWIGTYPE_p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t swig_types[95]
#define SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t swig_types[96]
#define SWIGTYPE_p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t swig_types[97]
#define SWIGTYPE_p_swig__SwigPyIterator swig_types[98]
#define SWIGTYPE_p_value_type swig_types[99]
static swig_type_info *swig_types[101];
static swig_module_info swig_module = {swig_types, 100, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */

#ifdef SWIG_TypeQuery
# undef SWIG_TypeQuery
#endif
#define SWIG_TypeQuery SWIG_Python_TypeQuery

/*-----------------------------------------------
              @(target):= _piranha.so
  ------------------------------------------------*/
#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_init    PyInit__piranha

#else
#  define SWIG_init    init_piranha

#endif
#define SWIG_name    "_piranha"

#define SWIGVERSION 0x040002 
#define SWIG_VERSION SWIGVERSION


#define SWIG_as_voidptr(a) const_cast< void * >(static_cast< const void * >(a)) 
#define SWIG_as_voidptrptr(a) ((void)SWIG_as_voidptr(*a),reinterpret_cast< void** >(a)) 


#include <stdexcept>


namespace swig {
  class SwigPtr_PyObject {
  protected:
    PyObject *_obj;

  public:
    SwigPtr_PyObject() :_obj(0)
    {
    }

    SwigPtr_PyObject(const SwigPtr_PyObject& item) : _obj(item._obj)
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      Py_XINCREF(_obj);      
      SWIG_PYTHON_THREAD_END_BLOCK;
    }
    
    SwigPtr_PyObject(PyObject *obj, bool initial_ref = true) :_obj(obj)
    {
      if (initial_ref) {
        SWIG_PYTHON_THREAD_BEGIN_BLOCK;
        Py_XINCREF(_obj);
        SWIG_PYTHON_THREAD_END_BLOCK;
      }
    }
    
    SwigPtr_PyObject & operator=(const SwigPtr_PyObject& item) 
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      Py_XINCREF(item._obj);
      Py_XDECREF(_obj);
      _obj = item._obj;
      SWIG_PYTHON_THREAD_END_BLOCK;
      return *this;      
    }
    
    ~SwigPtr_PyObject() 
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      Py_XDECREF(_obj);
      SWIG_PYTHON_THREAD_END_BLOCK;
    }
    
    operator PyObject *() const
    {
      return _obj;
    }

    PyObject *operator->() const
    {
      return _obj;
    }
  };
}


namespace swig {
  struct SwigVar_PyObject : SwigPtr_PyObject {
    SwigVar_PyObject(PyObject* obj = 0) : SwigPtr_PyObject(obj, false) { }
    
    SwigVar_PyObject & operator = (PyObject* obj)
    {
      Py_XDECREF(_obj);
      _obj = obj;
      return *this;      
    }
  };
}


#include <iostream>

#if PY_VERSION_HEX >= 0x03020000
# define SWIGPY_SLICE_ARG(obj) ((PyObject*) (obj))
#else
# define SWIGPY_SLICE_ARG(obj) ((PySliceObject*) (obj))
#endif


#include <typeinfo>
#include <stdexcept>


#if defined(__GNUC__)
#  if __GNUC__ == 2 && __GNUC_MINOR <= 96
#     define SWIG_STD_NOMODERN_STL
#  endif
#endif


#include <string>


#include <stddef.h>


namespace swig {
  struct stop_iteration {
  };

  struct SwigPyIterator {
  private:
    SwigPtr_PyObject _seq;

  protected:
    SwigPyIterator(PyObject *seq) : _seq(seq)
    {
    }
      
  public:
    virtual ~SwigPyIterator() {}

    // Access iterator method, required by Python
    virtual PyObject *value() const = 0;

    // Forward iterator method, required by Python
    virtual SwigPyIterator *incr(size_t n = 1) = 0;
    
    // Backward iterator method, very common in C++, but not required in Python
    virtual SwigPyIterator *decr(size_t /*n*/ = 1)
    {
      throw stop_iteration();
    }

    // Random access iterator methods, but not required in Python
    virtual ptrdiff_t distance(const SwigPyIterator &/*x*/) const
    {
      throw std::invalid_argument("operation not supported");
    }

    virtual bool equal (const SwigPyIterator &/*x*/) const
    {
      throw std::invalid_argument("operation not supported");
    }
    
    // C++ common/needed methods
    virtual SwigPyIterator *copy() const = 0;

    PyObject *next()     
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK; // disable threads       
      PyObject *obj = value();
      incr();       
      SWIG_PYTHON_THREAD_END_BLOCK; // re-enable threads
      return obj;     
    }

    /* Make an alias for Python 3.x */
    PyObject *__next__()
    {
      return next();
    }

    PyObject *previous()
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK; // disable threads       
      decr();
      PyObject *obj = value();
      SWIG_PYTHON_THREAD_END_BLOCK; // re-enable threads       
      return obj;
    }

    SwigPyIterator *advance(ptrdiff_t n)
    {
      return  (n > 0) ?  incr(n) : decr(-n);
    }
      
    bool operator == (const SwigPyIterator& x)  const
    {
      return equal(x);
    }
      
    bool operator != (const SwigPyIterator& x) const
    {
      return ! operator==(x);
    }
      
    SwigPyIterator& operator += (ptrdiff_t n)
    {
      return *advance(n);
    }

    SwigPyIterator& operator -= (ptrdiff_t n)
    {
      return *advance(-n);
    }
      
    SwigPyIterator* operator + (ptrdiff_t n) const
    {
      return copy()->advance(n);
    }

    SwigPyIterator* operator - (ptrdiff_t n) const
    {
      return copy()->advance(-n);
    }
      
    ptrdiff_t operator - (const SwigPyIterator& x) const
    {
      return x.distance(*this);
    }
      
    static swig_type_info* descriptor() {
      static int init = 0;
      static swig_type_info* desc = 0;
      if (!init) {
	desc = SWIG_TypeQuery("swig::SwigPyIterator *");
	init = 1;
      }	
      return desc;
    }    
  };

#if defined(SWIGPYTHON_BUILTIN)
  inline PyObject* make_output_iterator_builtin (PyObject *pyself)
  {
    Py_INCREF(pyself);
    return pyself;
  }
#endif
}


SWIGINTERN int
SWIG_AsVal_double (PyObject *obj, double *val)
{
  int res = SWIG_TypeError;
  if (PyFloat_Check(obj)) {
    if (val) *val = PyFloat_AsDouble(obj);
    return SWIG_OK;
#if PY_VERSION_HEX < 0x03000000
  } else if (PyInt_Check(obj)) {
    if (val) *val = (double) PyInt_AsLong(obj);
    return SWIG_OK;
#endif
  } else if (PyLong_Check(obj)) {
    double v = PyLong_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    double d = PyFloat_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = d;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      long v = PyLong_AsLong(obj);
      if (!PyErr_Occurred()) {
	if (val) *val = v;
	return SWIG_AddCast(SWIG_AddCast(SWIG_OK));
      } else {
	PyErr_Clear();
      }
    }
  }
#endif
  return res;
}


#include <float.h>


#include <math.h>


SWIGINTERNINLINE int
SWIG_CanCastAsInteger(double *d, double min, double max) {
  double x = *d;
  if ((min <= x && x <= max)) {
   double fx = floor(x);
   double cx = ceil(x);
   double rd =  ((x - fx) < 0.5) ? fx : cx; /* simple rint */
   if ((errno == EDOM) || (errno == ERANGE)) {
     errno = 0;
   } else {
     double summ, reps, diff;
     if (rd < x) {
       diff = x - rd;
     } else if (rd > x) {
       diff = rd - x;
     } else {
       return 1;
     }
     summ = rd + x;
     reps = diff/summ;
     if (reps < 8*DBL_EPSILON) {
       *d = rd;
       return 1;
     }
   }
  }
  return 0;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_long (PyObject *obj, unsigned long *val) 
{
#if PY_VERSION_HEX < 0x03000000
  if (PyInt_Check(obj)) {
    long v = PyInt_AsLong(obj);
    if (v >= 0) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      return SWIG_OverflowError;
    }
  } else
#endif
  if (PyLong_Check(obj)) {
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
      return SWIG_OverflowError;
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, 0, ULONG_MAX)) {
	if (val) *val = (unsigned long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


#include <limits.h>
#if !defined(SWIG_NO_LLONG_MAX)
# if !defined(LLONG_MAX) && defined(__GNUC__) && defined (__LONG_LONG_MAX__)
#   define LLONG_MAX __LONG_LONG_MAX__
#   define LLONG_MIN (-LLONG_MAX - 1LL)
#   define ULLONG_MAX (LLONG_MAX * 2ULL + 1ULL)
# endif
#endif


#if defined(LLONG_MAX) && !defined(SWIG_LONG_LONG_AVAILABLE)
#  define SWIG_LONG_LONG_AVAILABLE
#endif


#ifdef SWIG_LONG_LONG_AVAILABLE
SWIGINTERN int
SWIG_AsVal_unsigned_SS_long_SS_long (PyObject *obj, unsigned long long *val)
{
  int res = SWIG_TypeError;
  if (PyLong_Check(obj)) {
    unsigned long long v = PyLong_AsUnsignedLongLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
      res = SWIG_OverflowError;
    }
  } else {
    unsigned long v;
    res = SWIG_AsVal_unsigned_SS_long (obj,&v);
    if (SWIG_IsOK(res)) {
      if (val) *val = v;
      return res;
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    const double mant_max = 1LL << DBL_MANT_DIG;
    double d;
    res = SWIG_AsVal_double (obj,&d);
    if (SWIG_IsOK(res) && !SWIG_CanCastAsInteger(&d, 0, mant_max))
      return SWIG_OverflowError;
    if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, 0, mant_max)) {
      if (val) *val = (unsigned long long)(d);
      return SWIG_AddCast(res);
    }
    res = SWIG_TypeError;
  }
#endif
  return res;
}
#endif


SWIGINTERNINLINE int
SWIG_AsVal_size_t (PyObject * obj, size_t *val)
{
  int res = SWIG_TypeError;
#ifdef SWIG_LONG_LONG_AVAILABLE
  if (sizeof(size_t) <= sizeof(unsigned long)) {
#endif
    unsigned long v;
    res = SWIG_AsVal_unsigned_SS_long (obj, val ? &v : 0);
    if (SWIG_IsOK(res) && val) *val = static_cast< size_t >(v);
#ifdef SWIG_LONG_LONG_AVAILABLE
  } else if (sizeof(size_t) <= sizeof(unsigned long long)) {
    unsigned long long v;
    res = SWIG_AsVal_unsigned_SS_long_SS_long (obj, val ? &v : 0);
    if (SWIG_IsOK(res) && val) *val = static_cast< size_t >(v);
  }
#endif
  return res;
}


  #define SWIG_From_long   PyInt_FromLong 


#ifdef SWIG_LONG_LONG_AVAILABLE
SWIGINTERNINLINE PyObject* 
SWIG_From_long_SS_long  (long long value)
{
  return ((value < LONG_MIN) || (value > LONG_MAX)) ?
    PyLong_FromLongLong(value) : PyInt_FromLong(static_cast< long >(value));
}
#endif


SWIGINTERNINLINE PyObject *
SWIG_From_ptrdiff_t  (ptrdiff_t value)
{    
#ifdef SWIG_LONG_LONG_AVAILABLE
  if (sizeof(ptrdiff_t) <= sizeof(long)) {
#endif
    return SWIG_From_long  (static_cast< long >(value));
#ifdef SWIG_LONG_LONG_AVAILABLE
  } else {
    /* assume sizeof(ptrdiff_t) <= sizeof(long long) */
    return SWIG_From_long_SS_long  (static_cast< long long >(value));
  }
#endif
}


SWIGINTERNINLINE PyObject*
  SWIG_From_bool  (bool value)
{
  return PyBool_FromLong(value ? 1 : 0);
}


SWIGINTERN int
SWIG_AsVal_long (PyObject *obj, long* val)
{
#if PY_VERSION_HEX < 0x03000000
  if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else
#endif
  if (PyLong_Check(obj)) {
    long v = PyLong_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
      return SWIG_OverflowError;
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    long v = PyInt_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, LONG_MIN, LONG_MAX)) {
	if (val) *val = (long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


#ifdef SWIG_LONG_LONG_AVAILABLE
SWIGINTERN int
SWIG_AsVal_long_SS_long (PyObject *obj, long long *val)
{
  int res = SWIG_TypeError;
  if (PyLong_Check(obj)) {
    long long v = PyLong_AsLongLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
      res = SWIG_OverflowError;
    }
  } else {
    long v;
    res = SWIG_AsVal_long (obj,&v);
    if (SWIG_IsOK(res)) {
      if (val) *val = v;
      return res;
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    const double mant_max = 1LL << DBL_MANT_DIG;
    const double mant_min = -mant_max;
    double d;
    res = SWIG_AsVal_double (obj,&d);
    if (SWIG_IsOK(res) && !SWIG_CanCastAsInteger(&d, mant_min, mant_max))
      return SWIG_OverflowError;
    if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, mant_min, mant_max)) {
      if (val) *val = (long long)(d);
      return SWIG_AddCast(res);
    }
    res = SWIG_TypeError;
  }
#endif
  return res;
}
#endif


SWIGINTERNINLINE int
SWIG_AsVal_ptrdiff_t (PyObject * obj, ptrdiff_t *val)
{
  int res = SWIG_TypeError;
#ifdef SWIG_LONG_LONG_AVAILABLE
  if (sizeof(ptrdiff_t) <= sizeof(long)) {
#endif
    long v;
    res = SWIG_AsVal_long (obj, val ? &v : 0);
    if (SWIG_IsOK(res) && val) *val = static_cast< ptrdiff_t >(v);
#ifdef SWIG_LONG_LONG_AVAILABLE
  } else if (sizeof(ptrdiff_t) <= sizeof(long long)) {
    long long v;
    res = SWIG_AsVal_long_SS_long (obj, val ? &v : 0);
    if (SWIG_IsOK(res) && val) *val = static_cast< ptrdiff_t >(v);
  }
#endif
  return res;
}


#include <algorithm>


#include <list>


#include <utility>


#include <vector>


// Python class for representing errors from FastJet
static PyObject * FastJetError_;


#ifndef SWIG
#define SWIG
#endif

#include "fastjet/tools/GridMedianBackgroundEstimator.hh"
#include "fastjet/tools/JetMedianBackgroundEstimator.hh"
#include "Piranha.hh"

// macros for exception handling
#define CATCH_STD_EXCEPTION catch (std::exception & e) { SWIG_exception(SWIG_SystemError, e.what()); } \
  catch (fastjet::Error & e) { PyErr_SetString(FastJetError_, e.message().c_str()); SWIG_fail; }
#define CATCH_STD_INVALID_ARGUMENT catch (std::invalid_argument & e) { SWIG_exception(SWIG_ValueError, e.what()); }
#define CATCH_STD_RUNTIME_ERROR catch (std::runtime_error & e) { SWIG_exception(SWIG_RuntimeError, e.what()); }
#define CATCH_STD_LOGIC_ERROR catch (std::logic_error & e) { SWIG_exception(SWIG_RuntimeError, e.what()); }
#define CATCH_STD_OUT_OF_RANGE catch (std::out_of_range & e) { SWIG_exception(SWIG_IndexError, e.what()); }

using namespace fastjet::contrib;


  #define SWIG_From_double   PyFloat_FromDouble 


namespace swig {
  template <class Type>
  struct noconst_traits {
    typedef Type noconst_type;
  };

  template <class Type>
  struct noconst_traits<const Type> {
    typedef Type noconst_type;
  };

  /*
    type categories
  */
  struct pointer_category { };
  struct value_category { };

  /*
    General traits that provides type_name and type_info
  */
  template <class Type> struct traits { };

  template <class Type>
  inline const char* type_name() {
    return traits<typename noconst_traits<Type >::noconst_type >::type_name();
  }

  template <class Type> struct traits_info {
    static swig_type_info *type_query(std::string name) {
      name += " *";
      return SWIG_TypeQuery(name.c_str());
    }
    static swig_type_info *type_info() {
      static swig_type_info *info = type_query(type_name<Type>());
      return info;
    }
  };

  /*
    Partial specialization for pointers (traits_info)
  */
  template <class Type> struct traits_info<Type *> {
    static swig_type_info *type_query(std::string name) {
      name += " *";
      return SWIG_TypeQuery(name.c_str());
    }
    static swig_type_info *type_info() {
      static swig_type_info *info = type_query(type_name<Type>());
      return info;
    }
  };

  template <class Type>
  inline swig_type_info *type_info() {
    return traits_info<Type>::type_info();
  }

  /*
    Partial specialization for pointers (traits)
  */
  template <class Type> struct traits <Type *> {
    typedef pointer_category category;
    static std::string make_ptr_name(const char* name) {
      std::string ptrname = name;
      ptrname += " *";
      return ptrname;
    }
    static const char* type_name() {
      static std::string name = make_ptr_name(swig::type_name<Type>());
      return name.c_str();
    }
  };

  template <class Type, class Category>
  struct traits_as { };

  template <class Type, class Category>
  struct traits_check { };

}


namespace swig {  
  /*
    Traits that provides the from method
  */
  template <class Type> struct traits_from_ptr {
    static PyObject *from(Type *val, int owner = 0) {
      return SWIG_InternalNewPointerObj(val, type_info<Type>(), owner);
    }
  };

  template <class Type> struct traits_from {
    static PyObject *from(const Type& val) {
      return traits_from_ptr<Type>::from(new Type(val), 1);
    }
  };

  template <class Type> struct traits_from<Type *> {
    static PyObject *from(Type* val) {
      return traits_from_ptr<Type>::from(val, 0);
    }
  };

  template <class Type> struct traits_from<const Type *> {
    static PyObject *from(const Type* val) {
      return traits_from_ptr<Type>::from(const_cast<Type*>(val), 0);
    }
  };


  template <class Type>
  inline PyObject *from(const Type& val) {
    return traits_from<Type>::from(val);
  }

  template <class Type>
  inline PyObject *from_ptr(Type* val, int owner) {
    return traits_from_ptr<Type>::from(val, owner);
  }

  /*
    Traits that provides the asval/as/check method
  */
  template <class Type>
  struct traits_asptr {   
    static int asptr(PyObject *obj, Type **val) {
      int res = SWIG_ERROR;
      swig_type_info *descriptor = type_info<Type>();
      if (val) {
        Type *p = 0;
        int newmem = 0;
        res = descriptor ? SWIG_ConvertPtrAndOwn(obj, (void **)&p, descriptor, 0, &newmem) : SWIG_ERROR;
        if (SWIG_IsOK(res)) {
          if (newmem & SWIG_CAST_NEW_MEMORY) {
            res |= SWIG_NEWOBJMASK;
          }
          *val = p;
        }
      } else {
        res = descriptor ? SWIG_ConvertPtr(obj, 0, descriptor, 0) : SWIG_ERROR;
      }
      return res;
    }
  }; 

  template <class Type>
  inline int asptr(PyObject *obj, Type **vptr) {
    return traits_asptr<Type>::asptr(obj, vptr);
  }

  template <class Type> 
  struct traits_asval {
    static int asval(PyObject *obj, Type *val) {
      if (val) {
	Type *p = 0;
	int res = traits_asptr<Type>::asptr(obj, &p);
	if (!SWIG_IsOK(res)) return res;	
	if (p) {
	  typedef typename noconst_traits<Type>::noconst_type noconst_type;
	  *(const_cast<noconst_type*>(val)) = *p;
	  if (SWIG_IsNewObj(res)){
	    delete p;
	    res = SWIG_DelNewMask(res);
	  }
	  return res;
	} else {
	  return SWIG_ERROR;
	}
      } else {
	return traits_asptr<Type>::asptr(obj, (Type **)(0));
      }
    }
  };

  template <class Type> struct traits_asval<Type*> {
    static int asval(PyObject *obj, Type **val) {
      if (val) {
        typedef typename noconst_traits<Type>::noconst_type noconst_type;
        noconst_type *p = 0;
        int res = traits_asptr<noconst_type>::asptr(obj,  &p);
        if (SWIG_IsOK(res)) {
          *(const_cast<noconst_type**>(val)) = p;
	}
	return res;
      } else {
	return traits_asptr<Type>::asptr(obj, (Type **)(0));
      }
    }
  };
  
  template <class Type>
  inline int asval(PyObject *obj, Type *val) {
    return traits_asval<Type>::asval(obj, val);
  }

  template <class Type> 
  struct traits_as<Type, value_category> {
    static Type as(PyObject *obj) {
      Type v;
      int res = asval(obj, &v);
      if (!obj || !SWIG_IsOK(res)) {
	if (!PyErr_Occurred()) {
	  ::SWIG_Error(SWIG_TypeError,  swig::type_name<Type>());
	}
	throw std::invalid_argument("bad type");
      }
      return v;
    }
  };

  template <class Type> 
  struct traits_as<Type, pointer_category> {
    static Type as(PyObject *obj) {
      Type *v = 0;      
      int res = (obj ? traits_asptr<Type>::asptr(obj, &v) : SWIG_ERROR);
      if (SWIG_IsOK(res) && v) {
	if (SWIG_IsNewObj(res)) {
	  Type r(*v);
	  delete v;
	  return r;
	} else {
	  return *v;
	}
      } else {
	if (!PyErr_Occurred()) {
	  SWIG_Error(SWIG_TypeError,  swig::type_name<Type>());
	}
	throw std::invalid_argument("bad type");
      }
    }
  };

  template <class Type> 
  struct traits_as<Type*, pointer_category> {
    static Type* as(PyObject *obj) {
      Type *v = 0;      
      int res = (obj ? traits_asptr<Type>::asptr(obj, &v) : SWIG_ERROR);
      if (SWIG_IsOK(res)) {
	return v;
      } else {
	if (!PyErr_Occurred()) {
	  SWIG_Error(SWIG_TypeError,  swig::type_name<Type>());
	}
	throw std::invalid_argument("bad type");
      }
    }
  };
    
  template <class Type>
  inline Type as(PyObject *obj) {
    return traits_as<Type, typename traits<Type>::category>::as(obj);
  }

  template <class Type> 
  struct traits_check<Type, value_category> {
    static bool check(PyObject *obj) {
      int res = obj ? asval(obj, (Type *)(0)) : SWIG_ERROR;
      return SWIG_IsOK(res) ? true : false;
    }
  };

  template <class Type> 
  struct traits_check<Type, pointer_category> {
    static bool check(PyObject *obj) {
      int res = obj ? asptr(obj, (Type **)(0)) : SWIG_ERROR;
      return SWIG_IsOK(res) ? true : false;
    }
  };

  template <class Type>
  inline bool check(PyObject *obj) {
    return traits_check<Type, typename traits<Type>::category>::check(obj);
  }
}


namespace swig {
  template <> struct traits< double > {
    typedef value_category category;
    static const char* type_name() { return"double"; }
  };
  template <>  struct traits_asval< double > {
    typedef double value_type;
    static int asval(PyObject *obj, value_type *val) {
      return SWIG_AsVal_double (obj, val);
    }
  };
  template <>  struct traits_from< double > {
    typedef double value_type;
    static PyObject *from(const value_type& val) {
      return SWIG_From_double  (val);
    }
  };
}


  namespace swig {


















































    template <class T, class U >
    struct traits_asptr<std::pair<T,U> >  {
      typedef std::pair<T,U> value_type;

      static int get_pair(PyObject* first, PyObject* second,
			  std::pair<T,U> **val) 
      {
	if (val) {
	  value_type *vp = (new std::pair<T,U>());
	  T *pfirst = &(vp->first);
	  int res1 = swig::asval((PyObject*)first, pfirst);
	  if (!SWIG_IsOK(res1)) {
	    delete vp;
	    return res1;
	  }
	  U *psecond = &(vp->second);
	  int res2 = swig::asval((PyObject*)second, psecond);
	  if (!SWIG_IsOK(res2)) {
	    delete vp;
	    return res2;
	  }
	  *val = vp;
	  return SWIG_AddNewMask(res1 > res2 ? res1 : res2);
	} else {
	  T *pfirst = 0;
	  int res1 = swig::asval((PyObject*)first, pfirst);
	  if (!SWIG_IsOK(res1)) return res1;
	  U *psecond = 0;
	  int res2 = swig::asval((PyObject*)second, psecond);
	  if (!SWIG_IsOK(res2)) return res2;
	  return res1 > res2 ? res1 : res2;
	}
      }

      static int asptr(PyObject *obj, std::pair<T,U> **val) {
	int res = SWIG_ERROR;
	if (PyTuple_Check(obj)) {
	  if (PyTuple_GET_SIZE(obj) == 2) {
	    res = get_pair(PyTuple_GET_ITEM(obj,0),PyTuple_GET_ITEM(obj,1), val);
	  }
	} else if (PySequence_Check(obj)) {
	  if (PySequence_Size(obj) == 2) {
	    swig::SwigVar_PyObject first = PySequence_GetItem(obj,0);
	    swig::SwigVar_PyObject second = PySequence_GetItem(obj,1);
	    res = get_pair(first, second, val);
	  }
	} else {
	  value_type *p = 0;
	  swig_type_info *descriptor = swig::type_info<value_type>();
	  res = descriptor ? SWIG_ConvertPtr(obj, (void **)&p, descriptor, 0) : SWIG_ERROR;
	  if (SWIG_IsOK(res) && val)  *val = p;
	}
	return res;
      }
    };


    template <class T, class U >
    struct traits_from<std::pair<T,U> >   {
      static PyObject *from(const std::pair<T,U>& val) {
	PyObject* obj = PyTuple_New(2);
	PyTuple_SetItem(obj,0,swig::from(val.first));
	PyTuple_SetItem(obj,1,swig::from(val.second));
	return obj;
      }
    };
  }





































      namespace swig {
	template <>  struct traits<std::pair< double, double > > {
	  typedef pointer_category category;
	  static const char* type_name() {
	    return "std::pair<" "double" "," "double" " >";
	  }
	};
      }
    

      namespace swig {
	template <>  struct traits<std::pair< std::pair< double,double >, std::pair< double,double > > > {
	  typedef pointer_category category;
	  static const char* type_name() {
	    return "std::pair<" "std::pair< double,double >" "," "std::pair< double,double >" " >";
	  }
	};
      }
    

#include <functional>

namespace std {
  template <>
  struct less <PyObject *>
  {
    bool
    operator()(PyObject * v, PyObject *w) const
    { 
      bool res;
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      res = PyObject_RichCompareBool(v, w, Py_LT) ? true : false;
      /* This may fall into a case of inconsistent
               eg. ObjA > ObjX > ObjB
               but ObjA < ObjB
      */
      if( PyErr_Occurred() && PyErr_ExceptionMatches(PyExc_TypeError) )
      {
        /* Objects can't be compared, this mostly occurred in Python 3.0 */
        /* Compare their ptr directly for a workaround */
        res = (v < w);
        PyErr_Clear();
      }
      SWIG_PYTHON_THREAD_END_BLOCK;
      return res;
    }
  };

  template <>
  struct less <swig::SwigPtr_PyObject>
  {
    bool
    operator()(const swig::SwigPtr_PyObject& v, const swig::SwigPtr_PyObject& w) const
    {
      return std::less<PyObject *>()(v, w);
    }
  };

  template <>
  struct less <swig::SwigVar_PyObject>
  {
    bool
    operator()(const swig::SwigVar_PyObject& v, const swig::SwigVar_PyObject& w) const
    {
      return std::less<PyObject *>()(v, w);
    }
  };

}

namespace swig {
  template <> struct traits<PyObject *> {
    typedef value_category category;
    static const char* type_name() { return "PyObject *"; }
  };  

  template <>  struct traits_asval<PyObject * > {   
    typedef PyObject * value_type;
    static int asval(PyObject *obj, value_type *val) {
      if (val) *val = obj;
      return SWIG_OK;
    }
  };

  template <> 
  struct traits_check<PyObject *, value_category> {
    static bool check(PyObject *) {
      return true;
    }
  };

  template <>  struct traits_from<PyObject *> {
    typedef PyObject * value_type;
    static PyObject *from(const value_type& val) {
      Py_XINCREF(val);
      return val;
    }
  };
  
}

namespace swig {
  template <class Difference>
  inline size_t
  check_index(Difference i, size_t size, bool insert = false) {
    if ( i < 0 ) {
      if ((size_t) (-i) <= size)
	return (size_t) (i + size);
    } else if ( (size_t) i < size ) {
      return (size_t) i;
    } else if (insert && ((size_t) i == size)) {
      return size;
    }
    throw std::out_of_range("index out of range");
  }

  template <class Difference>
  void
  slice_adjust(Difference i, Difference j, Py_ssize_t step, size_t size, Difference &ii, Difference &jj, bool insert = false) {
    if (step == 0) {
      throw std::invalid_argument("slice step cannot be zero");
    } else if (step > 0) {
      // Required range: 0 <= i < size, 0 <= j < size, i <= j
      if (i < 0) {
        ii = 0;
      } else if (i < (Difference)size) {
        ii = i;
      } else if (insert && (i >= (Difference)size)) {
        ii = (Difference)size;
      }
      if (j < 0) {
        jj = 0;
      } else {
        jj = (j < (Difference)size) ? j : (Difference)size;
      }
      if (jj < ii)
        jj = ii;
    } else {
      // Required range: -1 <= i < size-1, -1 <= j < size-1, i >= j
      if (i < -1) {
        ii = -1;
      } else if (i < (Difference) size) {
        ii = i;
      } else if (i >= (Difference)(size-1)) {
        ii = (Difference)(size-1);
      }
      if (j < -1) {
        jj = -1;
      } else {
        jj = (j < (Difference)size ) ? j : (Difference)(size-1);
      }
      if (ii < jj)
        ii = jj;
    }
  }

  template <class Sequence, class Difference>
  inline typename Sequence::iterator
  getpos(Sequence* self, Difference i)  {
    typename Sequence::iterator pos = self->begin();
    std::advance(pos, check_index(i,self->size()));
    return pos;
  }

  template <class Sequence, class Difference>
  inline typename Sequence::const_iterator
  cgetpos(const Sequence* self, Difference i)  {
    typename Sequence::const_iterator pos = self->begin();
    std::advance(pos, check_index(i,self->size()));
    return pos;
  }

  template <class Sequence>
  inline void
  erase(Sequence* seq, const typename Sequence::iterator& position) {
    seq->erase(position);
  }

  template <class Sequence>
  struct traits_reserve {
    static void reserve(Sequence & /*seq*/, typename Sequence::size_type /*n*/) {
      // This should be specialized for types that support reserve
    }
  };

  template <class Sequence, class Difference>
  inline Sequence*
  getslice(const Sequence* self, Difference i, Difference j, Py_ssize_t step) {
    typename Sequence::size_type size = self->size();
    Difference ii = 0;
    Difference jj = 0;
    swig::slice_adjust(i, j, step, size, ii, jj);

    if (step > 0) {
      typename Sequence::const_iterator sb = self->begin();
      typename Sequence::const_iterator se = self->begin();
      std::advance(sb,ii);
      std::advance(se,jj);
      if (step == 1) {
        return new Sequence(sb, se);
      } else {
        Sequence *sequence = new Sequence();
        swig::traits_reserve<Sequence>::reserve(*sequence, (jj - ii + step - 1) / step);
        typename Sequence::const_iterator it = sb;
        while (it!=se) {
          sequence->push_back(*it);
          for (Py_ssize_t c=0; c<step && it!=se; ++c)
            it++;
        }
        return sequence;
      } 
    } else {
      Sequence *sequence = new Sequence();
      swig::traits_reserve<Sequence>::reserve(*sequence, (ii - jj - step - 1) / -step);
      typename Sequence::const_reverse_iterator sb = self->rbegin();
      typename Sequence::const_reverse_iterator se = self->rbegin();
      std::advance(sb,size-ii-1);
      std::advance(se,size-jj-1);
      typename Sequence::const_reverse_iterator it = sb;
      while (it!=se) {
        sequence->push_back(*it);
        for (Py_ssize_t c=0; c<-step && it!=se; ++c)
          it++;
      }
      return sequence;
    }
  }

  template <class Sequence, class Difference, class InputSeq>
  inline void
  setslice(Sequence* self, Difference i, Difference j, Py_ssize_t step, const InputSeq& is = InputSeq()) {
    typename Sequence::size_type size = self->size();
    Difference ii = 0;
    Difference jj = 0;
    swig::slice_adjust(i, j, step, size, ii, jj, true);
    if (step > 0) {
      if (step == 1) {
        size_t ssize = jj - ii;
        if (ssize <= is.size()) {
          // expanding/staying the same size
          swig::traits_reserve<Sequence>::reserve(*self, self->size() - ssize + is.size());
          typename Sequence::iterator sb = self->begin();
          typename InputSeq::const_iterator isit = is.begin();
          std::advance(sb,ii);
          std::advance(isit, jj - ii);
          self->insert(std::copy(is.begin(), isit, sb), isit, is.end());
        } else {
          // shrinking
          typename Sequence::iterator sb = self->begin();
          typename Sequence::iterator se = self->begin();
          std::advance(sb,ii);
          std::advance(se,jj);
          self->erase(sb,se);
          sb = self->begin();
          std::advance(sb,ii);
          self->insert(sb, is.begin(), is.end());
        }
      } else {
        size_t replacecount = (jj - ii + step - 1) / step;
        if (is.size() != replacecount) {
          char msg[1024];
          sprintf(msg, "attempt to assign sequence of size %lu to extended slice of size %lu", (unsigned long)is.size(), (unsigned long)replacecount);
          throw std::invalid_argument(msg);
        }
        typename Sequence::const_iterator isit = is.begin();
        typename Sequence::iterator it = self->begin();
        std::advance(it,ii);
        for (size_t rc=0; rc<replacecount && it != self->end(); ++rc) {
          *it++ = *isit++;
          for (Py_ssize_t c=0; c<(step-1) && it != self->end(); ++c)
            it++;
        }
      }
    } else {
      size_t replacecount = (ii - jj - step - 1) / -step;
      if (is.size() != replacecount) {
        char msg[1024];
        sprintf(msg, "attempt to assign sequence of size %lu to extended slice of size %lu", (unsigned long)is.size(), (unsigned long)replacecount);
        throw std::invalid_argument(msg);
      }
      typename Sequence::const_iterator isit = is.begin();
      typename Sequence::reverse_iterator it = self->rbegin();
      std::advance(it,size-ii-1);
      for (size_t rc=0; rc<replacecount && it != self->rend(); ++rc) {
        *it++ = *isit++;
        for (Py_ssize_t c=0; c<(-step-1) && it != self->rend(); ++c)
          it++;
      }
    }
  }

  template <class Sequence, class Difference>
  inline void
  delslice(Sequence* self, Difference i, Difference j, Py_ssize_t step) {
    typename Sequence::size_type size = self->size();
    Difference ii = 0;
    Difference jj = 0;
    swig::slice_adjust(i, j, step, size, ii, jj, true);
    if (step > 0) {
      typename Sequence::iterator sb = self->begin();
      std::advance(sb,ii);
      if (step == 1) {
        typename Sequence::iterator se = self->begin();
        std::advance(se,jj);
        self->erase(sb,se);
      } else {
        typename Sequence::iterator it = sb;
        size_t delcount = (jj - ii + step - 1) / step;
        while (delcount) {
          it = self->erase(it);
          for (Py_ssize_t c=0; c<(step-1) && it != self->end(); ++c)
            it++;
          delcount--;
        }
      }
    } else {
      typename Sequence::reverse_iterator sb = self->rbegin();
      std::advance(sb,size-ii-1);
      typename Sequence::reverse_iterator it = sb;
      size_t delcount = (ii - jj - step - 1) / -step;
      while (delcount) {
        it = typename Sequence::reverse_iterator(self->erase((++it).base()));
        for (Py_ssize_t c=0; c<(-step-1) && it != self->rend(); ++c)
          it++;
        delcount--;
      }
    }
  }
}


#if defined(__SUNPRO_CC) && defined(_RWSTD_VER)
#  if !defined(SWIG_NO_STD_NOITERATOR_TRAITS_STL)
#    define SWIG_STD_NOITERATOR_TRAITS_STL
#  endif
#endif

#if !defined(SWIG_STD_NOITERATOR_TRAITS_STL)
#include <iterator>
#else
namespace std {
  template <class Iterator>
  struct iterator_traits {
    typedef ptrdiff_t difference_type;
    typedef typename Iterator::value_type value_type;
  };

  template <class Iterator, class Category,class T, class Reference, class Pointer, class Distance>
  struct iterator_traits<__reverse_bi_iterator<Iterator,Category,T,Reference,Pointer,Distance> > {
    typedef Distance difference_type;
    typedef T value_type;
  };

  template <class T>
  struct iterator_traits<T*> {
    typedef T value_type;
    typedef ptrdiff_t difference_type;
  };

  template<typename _InputIterator>
  inline typename iterator_traits<_InputIterator>::difference_type
  distance(_InputIterator __first, _InputIterator __last)
  {
    typename iterator_traits<_InputIterator>::difference_type __n = 0;
    while (__first != __last) {
      ++__first; ++__n;
    }
    return __n;
  }
}
#endif


namespace swig {
  template<typename OutIterator>
  class SwigPyIterator_T :  public SwigPyIterator
  {
  public:
    typedef OutIterator out_iterator;
    typedef typename std::iterator_traits<out_iterator>::value_type value_type;    
    typedef SwigPyIterator_T<out_iterator> self_type;

    SwigPyIterator_T(out_iterator curr, PyObject *seq)
      : SwigPyIterator(seq), current(curr)
    {
    }

    const out_iterator& get_current() const
    {
      return current;
    }

    
    bool equal (const SwigPyIterator &iter) const
    {
      const self_type *iters = dynamic_cast<const self_type *>(&iter);
      if (iters) {
	return (current == iters->get_current());
      } else {
	throw std::invalid_argument("bad iterator type");
      }
    }
    
    ptrdiff_t distance(const SwigPyIterator &iter) const
    {
      const self_type *iters = dynamic_cast<const self_type *>(&iter);
      if (iters) {
	return std::distance(current, iters->get_current());
      } else {
	throw std::invalid_argument("bad iterator type");
      }
    }    
    
  protected:
    out_iterator current;
  };
  
  template <class ValueType>
  struct from_oper 
  {
    typedef const ValueType& argument_type;
    typedef PyObject *result_type;
    result_type operator()(argument_type v) const
    {
      return swig::from(v);
    }
  };

  template<typename OutIterator, 
	   typename ValueType = typename std::iterator_traits<OutIterator>::value_type,
	   typename FromOper = from_oper<ValueType> >
  class SwigPyForwardIteratorOpen_T :  public SwigPyIterator_T<OutIterator>
  {
  public:
    FromOper from;
    typedef OutIterator out_iterator;
    typedef ValueType value_type;
    typedef SwigPyIterator_T<out_iterator>  base;
    typedef SwigPyForwardIteratorOpen_T<OutIterator, ValueType, FromOper> self_type;
    
    SwigPyForwardIteratorOpen_T(out_iterator curr, PyObject *seq)
      : SwigPyIterator_T<OutIterator>(curr, seq)
    {
    }
    
    PyObject *value() const {
      return from(static_cast<const value_type&>(*(base::current)));
    }
    
    SwigPyIterator *copy() const
    {
      return new self_type(*this);
    }

    SwigPyIterator *incr(size_t n = 1)
    {
      while (n--) {
	++base::current;
      }
      return this;
    }

  };

  template<typename OutIterator, 
	   typename ValueType = typename std::iterator_traits<OutIterator>::value_type,
	   typename FromOper = from_oper<ValueType> >
  class SwigPyIteratorOpen_T :  public SwigPyForwardIteratorOpen_T<OutIterator, ValueType, FromOper>
  {
  public:
    FromOper from;
    typedef OutIterator out_iterator;
    typedef ValueType value_type;
    typedef SwigPyIterator_T<out_iterator>  base;
    typedef SwigPyIteratorOpen_T<OutIterator, ValueType, FromOper> self_type;
    
    SwigPyIteratorOpen_T(out_iterator curr, PyObject *seq)
      : SwigPyForwardIteratorOpen_T<OutIterator>(curr, seq)
    {
    }

    SwigPyIterator *decr(size_t n = 1)
    {
      while (n--) {
	--base::current;
      }
      return this;
    }
  };

  template<typename OutIterator, 
	   typename ValueType = typename std::iterator_traits<OutIterator>::value_type,
	   typename FromOper = from_oper<ValueType> >
  class SwigPyForwardIteratorClosed_T :  public SwigPyIterator_T<OutIterator>
  {
  public:
    FromOper from;
    typedef OutIterator out_iterator;
    typedef ValueType value_type;
    typedef SwigPyIterator_T<out_iterator>  base;    
    typedef SwigPyForwardIteratorClosed_T<OutIterator, ValueType, FromOper> self_type;
    
    SwigPyForwardIteratorClosed_T(out_iterator curr, out_iterator first, out_iterator last, PyObject *seq)
      : SwigPyIterator_T<OutIterator>(curr, seq), begin(first), end(last)
    {
    }
    
    PyObject *value() const {
      if (base::current == end) {
	throw stop_iteration();
      } else {
	return from(static_cast<const value_type&>(*(base::current)));
      }
    }
    
    SwigPyIterator *copy() const
    {
      return new self_type(*this);
    }

    SwigPyIterator *incr(size_t n = 1)
    {
      while (n--) {
	if (base::current == end) {
	  throw stop_iteration();
	} else {
	  ++base::current;
	}
      }
      return this;
    }

  protected:
    out_iterator begin;
    out_iterator end;
  };

  template<typename OutIterator, 
	   typename ValueType = typename std::iterator_traits<OutIterator>::value_type,
	   typename FromOper = from_oper<ValueType> >
  class SwigPyIteratorClosed_T :  public SwigPyForwardIteratorClosed_T<OutIterator,ValueType,FromOper>
  {
  public:
    FromOper from;
    typedef OutIterator out_iterator;
    typedef ValueType value_type;
    typedef SwigPyIterator_T<out_iterator>  base;
    typedef SwigPyForwardIteratorClosed_T<OutIterator, ValueType, FromOper> base0;
    typedef SwigPyIteratorClosed_T<OutIterator, ValueType, FromOper> self_type;
    
    SwigPyIteratorClosed_T(out_iterator curr, out_iterator first, out_iterator last, PyObject *seq)
      : SwigPyForwardIteratorClosed_T<OutIterator,ValueType,FromOper>(curr, first, last, seq)
    {
    }

    SwigPyIterator *decr(size_t n = 1)
    {
      while (n--) {
	if (base::current == base0::begin) {
	  throw stop_iteration();
	} else {
	  --base::current;
	}
      }
      return this;
    }
  };


  template<typename OutIter>
  inline SwigPyIterator*
  make_output_forward_iterator(const OutIter& current, const OutIter& begin,const OutIter& end, PyObject *seq = 0)
  {
    return new SwigPyForwardIteratorClosed_T<OutIter>(current, begin, end, seq);
  }

  template<typename OutIter>
  inline SwigPyIterator*
  make_output_iterator(const OutIter& current, const OutIter& begin,const OutIter& end, PyObject *seq = 0)
  {
    return new SwigPyIteratorClosed_T<OutIter>(current, begin, end, seq);
  }

  template<typename OutIter>
  inline SwigPyIterator*
  make_output_forward_iterator(const OutIter& current, PyObject *seq = 0)
  {
    return new SwigPyForwardIteratorOpen_T<OutIter>(current, seq);
  }

  template<typename OutIter>
  inline SwigPyIterator*
  make_output_iterator(const OutIter& current, PyObject *seq = 0)
  {
    return new SwigPyIteratorOpen_T<OutIter>(current, seq);
  }

}


namespace swig
{
  template <class T>
  struct SwigPySequence_Ref
  {
    SwigPySequence_Ref(PyObject* seq, Py_ssize_t index)
      : _seq(seq), _index(index)
    {
    }
    
    operator T () const
    {
      swig::SwigVar_PyObject item = PySequence_GetItem(_seq, _index);
      try {
	return swig::as<T>(item);
      } catch (const std::invalid_argument& e) {
	char msg[1024];
	sprintf(msg, "in sequence element %d ", (int)_index);
	if (!PyErr_Occurred()) {
	  ::SWIG_Error(SWIG_TypeError,  swig::type_name<T>());
	}
	SWIG_Python_AddErrorMsg(msg);
	SWIG_Python_AddErrorMsg(e.what());
	throw;
      }
    }

    SwigPySequence_Ref& operator=(const T& v)
    {
      PySequence_SetItem(_seq, _index, swig::from<T>(v));
      return *this;
    }

  private:
    PyObject* _seq;
    Py_ssize_t _index;
  };

  template <class T>
  struct SwigPySequence_ArrowProxy
  {
    SwigPySequence_ArrowProxy(const T& x): m_value(x) {}
    const T* operator->() const { return &m_value; }
    operator const T*() const { return &m_value; }
    T m_value;
  };

  template <class T, class Reference >
  struct SwigPySequence_InputIterator
  {
    typedef SwigPySequence_InputIterator<T, Reference > self;

    typedef std::random_access_iterator_tag iterator_category;
    typedef Reference reference;
    typedef T value_type;
    typedef T* pointer;
    typedef Py_ssize_t difference_type;

    SwigPySequence_InputIterator()
    {
    }

    SwigPySequence_InputIterator(PyObject* seq, Py_ssize_t index)
      : _seq(seq), _index(index)
    {
    }

    reference operator*() const
    {
      return reference(_seq, _index);
    }

    SwigPySequence_ArrowProxy<T>
    operator->() const {
      return SwigPySequence_ArrowProxy<T>(operator*());
    }

    bool operator==(const self& ri) const
    {
      return (_index == ri._index) && (_seq == ri._seq);
    }

    bool operator!=(const self& ri) const
    {
      return !(operator==(ri));
    }

    self& operator ++ ()
    {
      ++_index;
      return *this;
    }

    self& operator -- ()
    {
      --_index;
      return *this;
    }

    self& operator += (difference_type n)
    {
      _index += n;
      return *this;
    }

    self operator +(difference_type n) const
    {
      return self(_seq, _index + n);
    }

    self& operator -= (difference_type n)
    {
      _index -= n;
      return *this;
    }

    self operator -(difference_type n) const
    {
      return self(_seq, _index - n);
    }

    difference_type operator - (const self& ri) const
    {
      return _index - ri._index;
    }

    bool operator < (const self& ri) const
    {
      return _index < ri._index;
    }

    reference
    operator[](difference_type n) const
    {
      return reference(_seq, _index + n);
    }

  private:
    PyObject* _seq;
    difference_type _index;
  };

  // STL container wrapper around a Python sequence
  template <class T>
  struct SwigPySequence_Cont
  {
    typedef SwigPySequence_Ref<T> reference;
    typedef const SwigPySequence_Ref<T> const_reference;
    typedef T value_type;
    typedef T* pointer;
    typedef Py_ssize_t difference_type;
    typedef size_t size_type;
    typedef const pointer const_pointer;
    typedef SwigPySequence_InputIterator<T, reference> iterator;
    typedef SwigPySequence_InputIterator<T, const_reference> const_iterator;

    SwigPySequence_Cont(PyObject* seq) : _seq(0)
    {
      if (!PySequence_Check(seq)) {
	throw std::invalid_argument("a sequence is expected");
      }
      _seq = seq;
      Py_INCREF(_seq);
    }

    ~SwigPySequence_Cont()
    {
      Py_XDECREF(_seq);
    }

    size_type size() const
    {
      return static_cast<size_type>(PySequence_Size(_seq));
    }

    bool empty() const
    {
      return size() == 0;
    }

    iterator begin()
    {
      return iterator(_seq, 0);
    }

    const_iterator begin() const
    {
      return const_iterator(_seq, 0);
    }

    iterator end()
    {
      return iterator(_seq, size());
    }

    const_iterator end() const
    {
      return const_iterator(_seq, size());
    }

    reference operator[](difference_type n)
    {
      return reference(_seq, n);
    }

    const_reference operator[](difference_type n)  const
    {
      return const_reference(_seq, n);
    }

    bool check() const
    {
      Py_ssize_t s = size();
      for (Py_ssize_t i = 0; i < s; ++i) {
	swig::SwigVar_PyObject item = PySequence_GetItem(_seq, i);
	if (!swig::check<value_type>(item))
	  return false;
      }
      return true;
    }

  private:
    PyObject* _seq;
  };

}


namespace swig {
  template <class SwigPySeq, class Seq>
  inline void
  assign(const SwigPySeq& swigpyseq, Seq* seq) {
    // seq->assign(swigpyseq.begin(), swigpyseq.end()); // not used as not always implemented
    typedef typename SwigPySeq::value_type value_type;
    typename SwigPySeq::const_iterator it = swigpyseq.begin();
    for (;it != swigpyseq.end(); ++it) {
      seq->insert(seq->end(),(value_type)(*it));
    }
  }

  template <class Seq, class T = typename Seq::value_type >
  struct traits_asptr_stdseq {
    typedef Seq sequence;
    typedef T value_type;

    static int asptr(PyObject *obj, sequence **seq) {
      if (obj == Py_None || SWIG_Python_GetSwigThis(obj)) {
	sequence *p;
	swig_type_info *descriptor = swig::type_info<sequence>();
	if (descriptor && SWIG_IsOK(::SWIG_ConvertPtr(obj, (void **)&p, descriptor, 0))) {
	  if (seq) *seq = p;
	  return SWIG_OLDOBJ;
	}
      } else if (PySequence_Check(obj)) {
	try {
	  SwigPySequence_Cont<value_type> swigpyseq(obj);
	  if (seq) {
	    sequence *pseq = new sequence();
	    assign(swigpyseq, pseq);
	    *seq = pseq;
	    return SWIG_NEWOBJ;
	  } else {
	    return swigpyseq.check() ? SWIG_OK : SWIG_ERROR;
	  }
	} catch (std::exception& e) {
	  if (seq) {
	    if (!PyErr_Occurred()) {
	      PyErr_SetString(PyExc_TypeError, e.what());
	    }
	  }
	  return SWIG_ERROR;
	}
      }
      return SWIG_ERROR;
    }
  };

  template <class Seq, class T = typename Seq::value_type >
  struct traits_from_stdseq {
    typedef Seq sequence;
    typedef T value_type;
    typedef typename Seq::size_type size_type;
    typedef typename sequence::const_iterator const_iterator;

    static PyObject *from(const sequence& seq) {
#ifdef SWIG_PYTHON_EXTRA_NATIVE_CONTAINERS
      swig_type_info *desc = swig::type_info<sequence>();
      if (desc && desc->clientdata) {
	return SWIG_InternalNewPointerObj(new sequence(seq), desc, SWIG_POINTER_OWN);
      }
#endif
      size_type size = seq.size();
      if (size <= (size_type)INT_MAX) {
	PyObject *obj = PyTuple_New((Py_ssize_t)size);
	Py_ssize_t i = 0;
	for (const_iterator it = seq.begin(); it != seq.end(); ++it, ++i) {
	  PyTuple_SetItem(obj,i,swig::from<value_type>(*it));
	}
	return obj;
      } else {
	PyErr_SetString(PyExc_OverflowError,"sequence size not valid in python");
	return NULL;
      }
    }
  };
}


  namespace swig {
    template <class T>
    struct traits_reserve<std::vector<T> > {
      static void reserve(std::vector<T> &seq, typename std::vector<T>::size_type n) {
        seq.reserve(n);
      }
    };

    template <class T>
    struct traits_asptr<std::vector<T> >  {
      static int asptr(PyObject *obj, std::vector<T> **vec) {
	return traits_asptr_stdseq<std::vector<T> >::asptr(obj, vec);
      }
    };
    
    template <class T>
    struct traits_from<std::vector<T> > {
      static PyObject *from(const std::vector<T>& vec) {
	return traits_from_stdseq<std::vector<T> >::from(vec);
      }
    };
  }


      namespace swig {
	template <>  struct traits<std::vector< double, std::allocator< double > > > {
	  typedef pointer_category category;
	  static const char* type_name() {
	    return "std::vector<" "double" "," "std::allocator< double >" " >";
	  }
	};
      }
    

      namespace swig {
	template <>  struct traits<std::vector< std::vector< double,std::allocator< double > >, std::allocator< std::vector< double,std::allocator< double > > > > > {
	  typedef pointer_category category;
	  static const char* type_name() {
	    return "std::vector<" "std::vector< double,std::allocator< double > >" "," "std::allocator< std::vector< double,std::allocator< double > > >" " >";
	  }
	};
      }
    
SWIGINTERN swig::SwigPyIterator *std_vector_Sl_std_vector_Sl_double_Sg__Sg__iterator(std::vector< std::vector< double > > *self,PyObject **PYTHON_SELF){
      return swig::make_output_iterator(self->begin(), self->begin(), self->end(), *PYTHON_SELF);
    }
SWIGINTERN bool std_vector_Sl_std_vector_Sl_double_Sg__Sg____nonzero__(std::vector< std::vector< double > > const *self){
      return !(self->empty());
    }
SWIGINTERN bool std_vector_Sl_std_vector_Sl_double_Sg__Sg____bool__(std::vector< std::vector< double > > const *self){
      return !(self->empty());
    }
SWIGINTERN std::vector< std::vector< double > >::size_type std_vector_Sl_std_vector_Sl_double_Sg__Sg____len__(std::vector< std::vector< double > > const *self){
      return self->size();
    }

SWIGINTERNINLINE PyObject* 
SWIG_From_unsigned_SS_long  (unsigned long value)
{
  return (value > LONG_MAX) ?
    PyLong_FromUnsignedLong(value) : PyInt_FromLong(static_cast< long >(value));
}


#ifdef SWIG_LONG_LONG_AVAILABLE
SWIGINTERNINLINE PyObject* 
SWIG_From_unsigned_SS_long_SS_long  (unsigned long long value)
{
  return (value > LONG_MAX) ?
    PyLong_FromUnsignedLongLong(value) : PyInt_FromLong(static_cast< long >(value));
}
#endif


SWIGINTERNINLINE PyObject *
SWIG_From_size_t  (size_t value)
{    
#ifdef SWIG_LONG_LONG_AVAILABLE
  if (sizeof(size_t) <= sizeof(unsigned long)) {
#endif
    return SWIG_From_unsigned_SS_long  (static_cast< unsigned long >(value));
#ifdef SWIG_LONG_LONG_AVAILABLE
  } else {
    /* assume sizeof(size_t) <= sizeof(unsigned long long) */
    return SWIG_From_unsigned_SS_long_SS_long  (static_cast< unsigned long long >(value));
  }
#endif
}

SWIGINTERN std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > *std_vector_Sl_std_vector_Sl_double_Sg__Sg____getslice__(std::vector< std::vector< double > > *self,std::vector< std::vector< double > >::difference_type i,std::vector< std::vector< double > >::difference_type j){
      return swig::getslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_std_vector_Sl_double_Sg__Sg____setslice____SWIG_0(std::vector< std::vector< double > > *self,std::vector< std::vector< double > >::difference_type i,std::vector< std::vector< double > >::difference_type j){
      swig::setslice(self, i, j, 1, std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > >());
    }
SWIGINTERN void std_vector_Sl_std_vector_Sl_double_Sg__Sg____setslice____SWIG_1(std::vector< std::vector< double > > *self,std::vector< std::vector< double > >::difference_type i,std::vector< std::vector< double > >::difference_type j,std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > const &v){
      swig::setslice(self, i, j, 1, v);
    }
SWIGINTERN void std_vector_Sl_std_vector_Sl_double_Sg__Sg____delslice__(std::vector< std::vector< double > > *self,std::vector< std::vector< double > >::difference_type i,std::vector< std::vector< double > >::difference_type j){
      swig::delslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_std_vector_Sl_double_Sg__Sg____delitem____SWIG_0(std::vector< std::vector< double > > *self,std::vector< std::vector< double > >::difference_type i){
      swig::erase(self, swig::getpos(self, i));
    }
SWIGINTERN std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > *std_vector_Sl_std_vector_Sl_double_Sg__Sg____getitem____SWIG_0(std::vector< std::vector< double > > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return NULL;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > >::difference_type id = i;
      std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > >::difference_type jd = j;
      return swig::getslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_std_vector_Sl_double_Sg__Sg____setitem____SWIG_0(std::vector< std::vector< double > > *self,PySliceObject *slice,std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > const &v){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > >::difference_type id = i;
      std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > >::difference_type jd = j;
      swig::setslice(self, id, jd, step, v);
    }
SWIGINTERN void std_vector_Sl_std_vector_Sl_double_Sg__Sg____setitem____SWIG_1(std::vector< std::vector< double > > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > >::difference_type id = i;
      std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_std_vector_Sl_double_Sg__Sg____delitem____SWIG_1(std::vector< std::vector< double > > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > >::difference_type id = i;
      std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN std::vector< std::vector< double > >::value_type const &std_vector_Sl_std_vector_Sl_double_Sg__Sg____getitem____SWIG_1(std::vector< std::vector< double > > const *self,std::vector< std::vector< double > >::difference_type i){
      return *(swig::cgetpos(self, i));
    }

namespace swig {
  static PyObject* container_owner_attribute() {
    static PyObject* attr = SWIG_Python_str_FromChar("__swig_container");
    return attr;
  }

  template <typename T>
  struct container_owner {
    // By default, do not add the back-reference (for value types)
    // Specialization below will check the reference for pointer types.
    static bool back_reference(PyObject* /*child*/, PyObject* /*owner*/) {
      return false;
    }
  };

  template <>
  struct container_owner<swig::pointer_category> {  
    /*
     * Call to add a back-reference to the owning object when returning a 
     * reference from a container.  Will only set the reference if child
     * is a SWIG wrapper object that does not own the pointer.
     *
     * returns whether the reference was set or not
     */
    static bool back_reference(PyObject* child, PyObject* owner) {
      SwigPyObject* swigThis = SWIG_Python_GetSwigThis(child);
      if (swigThis && (swigThis->own & SWIG_POINTER_OWN) != SWIG_POINTER_OWN) {
        return PyObject_SetAttr(child, container_owner_attribute(), owner) != -1;
      }
      return false;
    }
  };
}

SWIGINTERN void std_vector_Sl_std_vector_Sl_double_Sg__Sg____setitem____SWIG_2(std::vector< std::vector< double > > *self,std::vector< std::vector< double > >::difference_type i,std::vector< std::vector< double > >::value_type const &x){
      *(swig::getpos(self,i)) = x;
    }
SWIGINTERN std::vector< std::vector< double > >::value_type std_vector_Sl_std_vector_Sl_double_Sg__Sg__pop(std::vector< std::vector< double > > *self){
      if (self->size() == 0)
	throw std::out_of_range("pop from empty container");
      std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > >::value_type x = self->back();
      self->pop_back();
      return x;
    }
SWIGINTERN void std_vector_Sl_std_vector_Sl_double_Sg__Sg__append(std::vector< std::vector< double > > *self,std::vector< std::vector< double > >::value_type const &x){
      self->push_back(x);
    }
SWIGINTERN std::vector< std::vector< double > >::iterator std_vector_Sl_std_vector_Sl_double_Sg__Sg__erase__SWIG_0(std::vector< std::vector< double > > *self,std::vector< std::vector< double > >::iterator pos){ return self->erase(pos); }
SWIGINTERN std::vector< std::vector< double > >::iterator std_vector_Sl_std_vector_Sl_double_Sg__Sg__erase__SWIG_1(std::vector< std::vector< double > > *self,std::vector< std::vector< double > >::iterator first,std::vector< std::vector< double > >::iterator last){ return self->erase(first, last); }
SWIGINTERN std::vector< std::vector< double > >::iterator std_vector_Sl_std_vector_Sl_double_Sg__Sg__insert__SWIG_0(std::vector< std::vector< double > > *self,std::vector< std::vector< double > >::iterator pos,std::vector< std::vector< double > >::value_type const &x){ return self->insert(pos, x); }
SWIGINTERN void std_vector_Sl_std_vector_Sl_double_Sg__Sg__insert__SWIG_1(std::vector< std::vector< double > > *self,std::vector< std::vector< double > >::iterator pos,std::vector< std::vector< double > >::size_type n,std::vector< std::vector< double > >::value_type const &x){ self->insert(pos, n, x); }

  namespace swig {
    template <>  struct traits< fastjet::contrib::piranha::SubtractionHistory > {
      typedef pointer_category category;
      static const char* type_name() { return"fastjet::contrib::piranha::SubtractionHistory"; }
    };
  }


      namespace swig {
	template <>  struct traits<std::vector< fastjet::contrib::piranha::SubtractionHistory, std::allocator< fastjet::contrib::piranha::SubtractionHistory > > > {
	  typedef pointer_category category;
	  static const char* type_name() {
	    return "std::vector<" "fastjet::contrib::piranha::SubtractionHistory" "," "std::allocator< fastjet::contrib::piranha::SubtractionHistory >" " >";
	  }
	};
      }
    
SWIGINTERN swig::SwigPyIterator *std_vector_Sl_fastjet_contrib_piranha_SubtractionHistory_Sg__iterator(std::vector< fastjet::contrib::piranha::SubtractionHistory > *self,PyObject **PYTHON_SELF){
      return swig::make_output_iterator(self->begin(), self->begin(), self->end(), *PYTHON_SELF);
    }
SWIGINTERN bool std_vector_Sl_fastjet_contrib_piranha_SubtractionHistory_Sg____nonzero__(std::vector< fastjet::contrib::piranha::SubtractionHistory > const *self){
      return !(self->empty());
    }
SWIGINTERN bool std_vector_Sl_fastjet_contrib_piranha_SubtractionHistory_Sg____bool__(std::vector< fastjet::contrib::piranha::SubtractionHistory > const *self){
      return !(self->empty());
    }
SWIGINTERN std::vector< fastjet::contrib::piranha::SubtractionHistory >::size_type std_vector_Sl_fastjet_contrib_piranha_SubtractionHistory_Sg____len__(std::vector< fastjet::contrib::piranha::SubtractionHistory > const *self){
      return self->size();
    }
SWIGINTERN std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > > *std_vector_Sl_fastjet_contrib_piranha_SubtractionHistory_Sg____getslice__(std::vector< fastjet::contrib::piranha::SubtractionHistory > *self,std::vector< fastjet::contrib::piranha::SubtractionHistory >::difference_type i,std::vector< fastjet::contrib::piranha::SubtractionHistory >::difference_type j){
      return swig::getslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_fastjet_contrib_piranha_SubtractionHistory_Sg____setslice____SWIG_0(std::vector< fastjet::contrib::piranha::SubtractionHistory > *self,std::vector< fastjet::contrib::piranha::SubtractionHistory >::difference_type i,std::vector< fastjet::contrib::piranha::SubtractionHistory >::difference_type j){
      swig::setslice(self, i, j, 1, std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > >());
    }
SWIGINTERN void std_vector_Sl_fastjet_contrib_piranha_SubtractionHistory_Sg____setslice____SWIG_1(std::vector< fastjet::contrib::piranha::SubtractionHistory > *self,std::vector< fastjet::contrib::piranha::SubtractionHistory >::difference_type i,std::vector< fastjet::contrib::piranha::SubtractionHistory >::difference_type j,std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > > const &v){
      swig::setslice(self, i, j, 1, v);
    }
SWIGINTERN void std_vector_Sl_fastjet_contrib_piranha_SubtractionHistory_Sg____delslice__(std::vector< fastjet::contrib::piranha::SubtractionHistory > *self,std::vector< fastjet::contrib::piranha::SubtractionHistory >::difference_type i,std::vector< fastjet::contrib::piranha::SubtractionHistory >::difference_type j){
      swig::delslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_fastjet_contrib_piranha_SubtractionHistory_Sg____delitem____SWIG_0(std::vector< fastjet::contrib::piranha::SubtractionHistory > *self,std::vector< fastjet::contrib::piranha::SubtractionHistory >::difference_type i){
      swig::erase(self, swig::getpos(self, i));
    }
SWIGINTERN std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > > *std_vector_Sl_fastjet_contrib_piranha_SubtractionHistory_Sg____getitem____SWIG_0(std::vector< fastjet::contrib::piranha::SubtractionHistory > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return NULL;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > >::difference_type id = i;
      std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > >::difference_type jd = j;
      return swig::getslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_fastjet_contrib_piranha_SubtractionHistory_Sg____setitem____SWIG_0(std::vector< fastjet::contrib::piranha::SubtractionHistory > *self,PySliceObject *slice,std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > > const &v){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > >::difference_type id = i;
      std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > >::difference_type jd = j;
      swig::setslice(self, id, jd, step, v);
    }
SWIGINTERN void std_vector_Sl_fastjet_contrib_piranha_SubtractionHistory_Sg____setitem____SWIG_1(std::vector< fastjet::contrib::piranha::SubtractionHistory > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > >::difference_type id = i;
      std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_fastjet_contrib_piranha_SubtractionHistory_Sg____delitem____SWIG_1(std::vector< fastjet::contrib::piranha::SubtractionHistory > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > >::difference_type id = i;
      std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type const &std_vector_Sl_fastjet_contrib_piranha_SubtractionHistory_Sg____getitem____SWIG_1(std::vector< fastjet::contrib::piranha::SubtractionHistory > const *self,std::vector< fastjet::contrib::piranha::SubtractionHistory >::difference_type i){
      return *(swig::cgetpos(self, i));
    }
SWIGINTERN void std_vector_Sl_fastjet_contrib_piranha_SubtractionHistory_Sg____setitem____SWIG_2(std::vector< fastjet::contrib::piranha::SubtractionHistory > *self,std::vector< fastjet::contrib::piranha::SubtractionHistory >::difference_type i,std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type const &x){
      *(swig::getpos(self,i)) = x;
    }
SWIGINTERN std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type std_vector_Sl_fastjet_contrib_piranha_SubtractionHistory_Sg__pop(std::vector< fastjet::contrib::piranha::SubtractionHistory > *self){
      if (self->size() == 0)
	throw std::out_of_range("pop from empty container");
      std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > >::value_type x = self->back();
      self->pop_back();
      return x;
    }
SWIGINTERN void std_vector_Sl_fastjet_contrib_piranha_SubtractionHistory_Sg__append(std::vector< fastjet::contrib::piranha::SubtractionHistory > *self,std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type const &x){
      self->push_back(x);
    }
SWIGINTERN std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator std_vector_Sl_fastjet_contrib_piranha_SubtractionHistory_Sg__erase__SWIG_0(std::vector< fastjet::contrib::piranha::SubtractionHistory > *self,std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator pos){ return self->erase(pos); }
SWIGINTERN std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator std_vector_Sl_fastjet_contrib_piranha_SubtractionHistory_Sg__erase__SWIG_1(std::vector< fastjet::contrib::piranha::SubtractionHistory > *self,std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator first,std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator last){ return self->erase(first, last); }
SWIGINTERN std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator std_vector_Sl_fastjet_contrib_piranha_SubtractionHistory_Sg__insert__SWIG_0(std::vector< fastjet::contrib::piranha::SubtractionHistory > *self,std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator pos,std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type const &x){ return self->insert(pos, x); }
SWIGINTERN void std_vector_Sl_fastjet_contrib_piranha_SubtractionHistory_Sg__insert__SWIG_1(std::vector< fastjet::contrib::piranha::SubtractionHistory > *self,std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator pos,std::vector< fastjet::contrib::piranha::SubtractionHistory >::size_type n,std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type const &x){ self->insert(pos, n, x); }

  namespace swig {
    template <>  struct traits< fastjet::PseudoJet > {
      typedef pointer_category category;
      static const char* type_name() { return"fastjet::PseudoJet"; }
    };
  }


      namespace swig {
	template <>  struct traits<std::vector< fastjet::PseudoJet, std::allocator< fastjet::PseudoJet > > > {
	  typedef pointer_category category;
	  static const char* type_name() {
	    return "std::vector<" "fastjet::PseudoJet" "," "std::allocator< fastjet::PseudoJet >" " >";
	  }
	};
      }
    

      namespace swig {
	template <>  struct traits<std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >, std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > > > {
	  typedef pointer_category category;
	  static const char* type_name() {
	    return "std::vector<" "std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >" "," "std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >" " >";
	  }
	};
      }
    
SWIGINTERN swig::SwigPyIterator *std_vector_Sl_std_vector_Sl_fastjet_PseudoJet_Sg__Sg__iterator(std::vector< std::vector< fastjet::PseudoJet > > *self,PyObject **PYTHON_SELF){
      return swig::make_output_iterator(self->begin(), self->begin(), self->end(), *PYTHON_SELF);
    }
SWIGINTERN bool std_vector_Sl_std_vector_Sl_fastjet_PseudoJet_Sg__Sg____nonzero__(std::vector< std::vector< fastjet::PseudoJet > > const *self){
      return !(self->empty());
    }
SWIGINTERN bool std_vector_Sl_std_vector_Sl_fastjet_PseudoJet_Sg__Sg____bool__(std::vector< std::vector< fastjet::PseudoJet > > const *self){
      return !(self->empty());
    }
SWIGINTERN std::vector< std::vector< fastjet::PseudoJet > >::size_type std_vector_Sl_std_vector_Sl_fastjet_PseudoJet_Sg__Sg____len__(std::vector< std::vector< fastjet::PseudoJet > > const *self){
      return self->size();
    }
SWIGINTERN std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > > *std_vector_Sl_std_vector_Sl_fastjet_PseudoJet_Sg__Sg____getslice__(std::vector< std::vector< fastjet::PseudoJet > > *self,std::vector< std::vector< fastjet::PseudoJet > >::difference_type i,std::vector< std::vector< fastjet::PseudoJet > >::difference_type j){
      return swig::getslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_std_vector_Sl_fastjet_PseudoJet_Sg__Sg____setslice____SWIG_0(std::vector< std::vector< fastjet::PseudoJet > > *self,std::vector< std::vector< fastjet::PseudoJet > >::difference_type i,std::vector< std::vector< fastjet::PseudoJet > >::difference_type j){
      swig::setslice(self, i, j, 1, std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > >());
    }
SWIGINTERN void std_vector_Sl_std_vector_Sl_fastjet_PseudoJet_Sg__Sg____setslice____SWIG_1(std::vector< std::vector< fastjet::PseudoJet > > *self,std::vector< std::vector< fastjet::PseudoJet > >::difference_type i,std::vector< std::vector< fastjet::PseudoJet > >::difference_type j,std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > > const &v){
      swig::setslice(self, i, j, 1, v);
    }
SWIGINTERN void std_vector_Sl_std_vector_Sl_fastjet_PseudoJet_Sg__Sg____delslice__(std::vector< std::vector< fastjet::PseudoJet > > *self,std::vector< std::vector< fastjet::PseudoJet > >::difference_type i,std::vector< std::vector< fastjet::PseudoJet > >::difference_type j){
      swig::delslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_std_vector_Sl_fastjet_PseudoJet_Sg__Sg____delitem____SWIG_0(std::vector< std::vector< fastjet::PseudoJet > > *self,std::vector< std::vector< fastjet::PseudoJet > >::difference_type i){
      swig::erase(self, swig::getpos(self, i));
    }
SWIGINTERN std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > > *std_vector_Sl_std_vector_Sl_fastjet_PseudoJet_Sg__Sg____getitem____SWIG_0(std::vector< std::vector< fastjet::PseudoJet > > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return NULL;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > >::difference_type id = i;
      std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > >::difference_type jd = j;
      return swig::getslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_std_vector_Sl_fastjet_PseudoJet_Sg__Sg____setitem____SWIG_0(std::vector< std::vector< fastjet::PseudoJet > > *self,PySliceObject *slice,std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > > const &v){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > >::difference_type id = i;
      std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > >::difference_type jd = j;
      swig::setslice(self, id, jd, step, v);
    }
SWIGINTERN void std_vector_Sl_std_vector_Sl_fastjet_PseudoJet_Sg__Sg____setitem____SWIG_1(std::vector< std::vector< fastjet::PseudoJet > > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > >::difference_type id = i;
      std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_std_vector_Sl_fastjet_PseudoJet_Sg__Sg____delitem____SWIG_1(std::vector< std::vector< fastjet::PseudoJet > > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > >::difference_type id = i;
      std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN std::vector< std::vector< fastjet::PseudoJet > >::value_type const &std_vector_Sl_std_vector_Sl_fastjet_PseudoJet_Sg__Sg____getitem____SWIG_1(std::vector< std::vector< fastjet::PseudoJet > > const *self,std::vector< std::vector< fastjet::PseudoJet > >::difference_type i){
      return *(swig::cgetpos(self, i));
    }
SWIGINTERN void std_vector_Sl_std_vector_Sl_fastjet_PseudoJet_Sg__Sg____setitem____SWIG_2(std::vector< std::vector< fastjet::PseudoJet > > *self,std::vector< std::vector< fastjet::PseudoJet > >::difference_type i,std::vector< std::vector< fastjet::PseudoJet > >::value_type const &x){
      *(swig::getpos(self,i)) = x;
    }
SWIGINTERN std::vector< std::vector< fastjet::PseudoJet > >::value_type std_vector_Sl_std_vector_Sl_fastjet_PseudoJet_Sg__Sg__pop(std::vector< std::vector< fastjet::PseudoJet > > *self){
      if (self->size() == 0)
	throw std::out_of_range("pop from empty container");
      std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > >::value_type x = self->back();
      self->pop_back();
      return x;
    }
SWIGINTERN void std_vector_Sl_std_vector_Sl_fastjet_PseudoJet_Sg__Sg__append(std::vector< std::vector< fastjet::PseudoJet > > *self,std::vector< std::vector< fastjet::PseudoJet > >::value_type const &x){
      self->push_back(x);
    }
SWIGINTERN std::vector< std::vector< fastjet::PseudoJet > >::iterator std_vector_Sl_std_vector_Sl_fastjet_PseudoJet_Sg__Sg__erase__SWIG_0(std::vector< std::vector< fastjet::PseudoJet > > *self,std::vector< std::vector< fastjet::PseudoJet > >::iterator pos){ return self->erase(pos); }
SWIGINTERN std::vector< std::vector< fastjet::PseudoJet > >::iterator std_vector_Sl_std_vector_Sl_fastjet_PseudoJet_Sg__Sg__erase__SWIG_1(std::vector< std::vector< fastjet::PseudoJet > > *self,std::vector< std::vector< fastjet::PseudoJet > >::iterator first,std::vector< std::vector< fastjet::PseudoJet > >::iterator last){ return self->erase(first, last); }
SWIGINTERN std::vector< std::vector< fastjet::PseudoJet > >::iterator std_vector_Sl_std_vector_Sl_fastjet_PseudoJet_Sg__Sg__insert__SWIG_0(std::vector< std::vector< fastjet::PseudoJet > > *self,std::vector< std::vector< fastjet::PseudoJet > >::iterator pos,std::vector< std::vector< fastjet::PseudoJet > >::value_type const &x){ return self->insert(pos, x); }
SWIGINTERN void std_vector_Sl_std_vector_Sl_fastjet_PseudoJet_Sg__Sg__insert__SWIG_1(std::vector< std::vector< fastjet::PseudoJet > > *self,std::vector< std::vector< fastjet::PseudoJet > >::iterator pos,std::vector< std::vector< fastjet::PseudoJet > >::size_type n,std::vector< std::vector< fastjet::PseudoJet > >::value_type const &x){ self->insert(pos, n, x); }

      namespace swig {
	template <>  struct traits<std::vector< std::pair< double,double >, std::allocator< std::pair< double,double > > > > {
	  typedef pointer_category category;
	  static const char* type_name() {
	    return "std::vector<" "std::pair< double,double >" "," "std::allocator< std::pair< double,double > >" " >";
	  }
	};
      }
    
SWIGINTERN swig::SwigPyIterator *std_vector_Sl_std_pair_Sl_double_Sc_double_Sg__Sg__iterator(std::vector< std::pair< double,double > > *self,PyObject **PYTHON_SELF){
      return swig::make_output_iterator(self->begin(), self->begin(), self->end(), *PYTHON_SELF);
    }
SWIGINTERN bool std_vector_Sl_std_pair_Sl_double_Sc_double_Sg__Sg____nonzero__(std::vector< std::pair< double,double > > const *self){
      return !(self->empty());
    }
SWIGINTERN bool std_vector_Sl_std_pair_Sl_double_Sc_double_Sg__Sg____bool__(std::vector< std::pair< double,double > > const *self){
      return !(self->empty());
    }
SWIGINTERN std::vector< std::pair< double,double > >::size_type std_vector_Sl_std_pair_Sl_double_Sc_double_Sg__Sg____len__(std::vector< std::pair< double,double > > const *self){
      return self->size();
    }
SWIGINTERN std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > > *std_vector_Sl_std_pair_Sl_double_Sc_double_Sg__Sg____getslice__(std::vector< std::pair< double,double > > *self,std::vector< std::pair< double,double > >::difference_type i,std::vector< std::pair< double,double > >::difference_type j){
      return swig::getslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_std_pair_Sl_double_Sc_double_Sg__Sg____setslice____SWIG_0(std::vector< std::pair< double,double > > *self,std::vector< std::pair< double,double > >::difference_type i,std::vector< std::pair< double,double > >::difference_type j){
      swig::setslice(self, i, j, 1, std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > >());
    }
SWIGINTERN void std_vector_Sl_std_pair_Sl_double_Sc_double_Sg__Sg____setslice____SWIG_1(std::vector< std::pair< double,double > > *self,std::vector< std::pair< double,double > >::difference_type i,std::vector< std::pair< double,double > >::difference_type j,std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > > const &v){
      swig::setslice(self, i, j, 1, v);
    }
SWIGINTERN void std_vector_Sl_std_pair_Sl_double_Sc_double_Sg__Sg____delslice__(std::vector< std::pair< double,double > > *self,std::vector< std::pair< double,double > >::difference_type i,std::vector< std::pair< double,double > >::difference_type j){
      swig::delslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_std_pair_Sl_double_Sc_double_Sg__Sg____delitem____SWIG_0(std::vector< std::pair< double,double > > *self,std::vector< std::pair< double,double > >::difference_type i){
      swig::erase(self, swig::getpos(self, i));
    }
SWIGINTERN std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > > *std_vector_Sl_std_pair_Sl_double_Sc_double_Sg__Sg____getitem____SWIG_0(std::vector< std::pair< double,double > > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return NULL;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > >::difference_type id = i;
      std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > >::difference_type jd = j;
      return swig::getslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_std_pair_Sl_double_Sc_double_Sg__Sg____setitem____SWIG_0(std::vector< std::pair< double,double > > *self,PySliceObject *slice,std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > > const &v){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > >::difference_type id = i;
      std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > >::difference_type jd = j;
      swig::setslice(self, id, jd, step, v);
    }
SWIGINTERN void std_vector_Sl_std_pair_Sl_double_Sc_double_Sg__Sg____setitem____SWIG_1(std::vector< std::pair< double,double > > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > >::difference_type id = i;
      std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_std_pair_Sl_double_Sc_double_Sg__Sg____delitem____SWIG_1(std::vector< std::pair< double,double > > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > >::difference_type id = i;
      std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN std::vector< std::pair< double,double > >::value_type const &std_vector_Sl_std_pair_Sl_double_Sc_double_Sg__Sg____getitem____SWIG_1(std::vector< std::pair< double,double > > const *self,std::vector< std::pair< double,double > >::difference_type i){
      return *(swig::cgetpos(self, i));
    }
SWIGINTERN void std_vector_Sl_std_pair_Sl_double_Sc_double_Sg__Sg____setitem____SWIG_2(std::vector< std::pair< double,double > > *self,std::vector< std::pair< double,double > >::difference_type i,std::vector< std::pair< double,double > >::value_type const &x){
      *(swig::getpos(self,i)) = x;
    }
SWIGINTERN std::vector< std::pair< double,double > >::value_type std_vector_Sl_std_pair_Sl_double_Sc_double_Sg__Sg__pop(std::vector< std::pair< double,double > > *self){
      if (self->size() == 0)
	throw std::out_of_range("pop from empty container");
      std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > >::value_type x = self->back();
      self->pop_back();
      return x;
    }
SWIGINTERN void std_vector_Sl_std_pair_Sl_double_Sc_double_Sg__Sg__append(std::vector< std::pair< double,double > > *self,std::vector< std::pair< double,double > >::value_type const &x){
      self->push_back(x);
    }
SWIGINTERN std::vector< std::pair< double,double > >::iterator std_vector_Sl_std_pair_Sl_double_Sc_double_Sg__Sg__erase__SWIG_0(std::vector< std::pair< double,double > > *self,std::vector< std::pair< double,double > >::iterator pos){ return self->erase(pos); }
SWIGINTERN std::vector< std::pair< double,double > >::iterator std_vector_Sl_std_pair_Sl_double_Sc_double_Sg__Sg__erase__SWIG_1(std::vector< std::pair< double,double > > *self,std::vector< std::pair< double,double > >::iterator first,std::vector< std::pair< double,double > >::iterator last){ return self->erase(first, last); }
SWIGINTERN std::vector< std::pair< double,double > >::iterator std_vector_Sl_std_pair_Sl_double_Sc_double_Sg__Sg__insert__SWIG_0(std::vector< std::pair< double,double > > *self,std::vector< std::pair< double,double > >::iterator pos,std::vector< std::pair< double,double > >::value_type const &x){ return self->insert(pos, x); }
SWIGINTERN void std_vector_Sl_std_pair_Sl_double_Sc_double_Sg__Sg__insert__SWIG_1(std::vector< std::pair< double,double > > *self,std::vector< std::pair< double,double > >::iterator pos,std::vector< std::pair< double,double > >::size_type n,std::vector< std::pair< double,double > >::value_type const &x){ self->insert(pos, n, x); }

SWIGINTERN int
SWIG_AsVal_int (PyObject * obj, int *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < INT_MIN || v > INT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< int >(v);
    }
  }  
  return res;
}


SWIGINTERNINLINE PyObject*
  SWIG_From_int  (int value)
{
  return PyInt_FromLong((long) value);
}


namespace swig {
  template <> struct traits< int > {
    typedef value_category category;
    static const char* type_name() { return"int"; }
  };
  template <>  struct traits_asval< int > {
    typedef int value_type;
    static int asval(PyObject *obj, value_type *val) {
      return SWIG_AsVal_int (obj, val);
    }
  };
  template <>  struct traits_from< int > {
    typedef int value_type;
    static PyObject *from(const value_type& val) {
      return SWIG_From_int  (val);
    }
  };
}


      namespace swig {
	template <>  struct traits<std::vector< int, std::allocator< int > > > {
	  typedef pointer_category category;
	  static const char* type_name() {
	    return "std::vector<" "int" "," "std::allocator< int >" " >";
	  }
	};
      }
    
SWIGINTERN swig::SwigPyIterator *std_vector_Sl_int_Sg__iterator(std::vector< int > *self,PyObject **PYTHON_SELF){
      return swig::make_output_iterator(self->begin(), self->begin(), self->end(), *PYTHON_SELF);
    }
SWIGINTERN bool std_vector_Sl_int_Sg____nonzero__(std::vector< int > const *self){
      return !(self->empty());
    }
SWIGINTERN bool std_vector_Sl_int_Sg____bool__(std::vector< int > const *self){
      return !(self->empty());
    }
SWIGINTERN std::vector< int >::size_type std_vector_Sl_int_Sg____len__(std::vector< int > const *self){
      return self->size();
    }
SWIGINTERN std::vector< int,std::allocator< int > > *std_vector_Sl_int_Sg____getslice__(std::vector< int > *self,std::vector< int >::difference_type i,std::vector< int >::difference_type j){
      return swig::getslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_int_Sg____setslice____SWIG_0(std::vector< int > *self,std::vector< int >::difference_type i,std::vector< int >::difference_type j){
      swig::setslice(self, i, j, 1, std::vector< int,std::allocator< int > >());
    }
SWIGINTERN void std_vector_Sl_int_Sg____setslice____SWIG_1(std::vector< int > *self,std::vector< int >::difference_type i,std::vector< int >::difference_type j,std::vector< int,std::allocator< int > > const &v){
      swig::setslice(self, i, j, 1, v);
    }
SWIGINTERN void std_vector_Sl_int_Sg____delslice__(std::vector< int > *self,std::vector< int >::difference_type i,std::vector< int >::difference_type j){
      swig::delslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_int_Sg____delitem____SWIG_0(std::vector< int > *self,std::vector< int >::difference_type i){
      swig::erase(self, swig::getpos(self, i));
    }
SWIGINTERN std::vector< int,std::allocator< int > > *std_vector_Sl_int_Sg____getitem____SWIG_0(std::vector< int > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return NULL;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector< int,std::allocator< int > >::difference_type id = i;
      std::vector< int,std::allocator< int > >::difference_type jd = j;
      return swig::getslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_int_Sg____setitem____SWIG_0(std::vector< int > *self,PySliceObject *slice,std::vector< int,std::allocator< int > > const &v){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector< int,std::allocator< int > >::difference_type id = i;
      std::vector< int,std::allocator< int > >::difference_type jd = j;
      swig::setslice(self, id, jd, step, v);
    }
SWIGINTERN void std_vector_Sl_int_Sg____setitem____SWIG_1(std::vector< int > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector< int,std::allocator< int > >::difference_type id = i;
      std::vector< int,std::allocator< int > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_int_Sg____delitem____SWIG_1(std::vector< int > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector< int,std::allocator< int > >::difference_type id = i;
      std::vector< int,std::allocator< int > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN std::vector< int >::value_type const &std_vector_Sl_int_Sg____getitem____SWIG_1(std::vector< int > const *self,std::vector< int >::difference_type i){
      return *(swig::cgetpos(self, i));
    }
SWIGINTERN void std_vector_Sl_int_Sg____setitem____SWIG_2(std::vector< int > *self,std::vector< int >::difference_type i,std::vector< int >::value_type const &x){
      *(swig::getpos(self,i)) = x;
    }
SWIGINTERN std::vector< int >::value_type std_vector_Sl_int_Sg__pop(std::vector< int > *self){
      if (self->size() == 0)
	throw std::out_of_range("pop from empty container");
      std::vector< int,std::allocator< int > >::value_type x = self->back();
      self->pop_back();
      return x;
    }
SWIGINTERN void std_vector_Sl_int_Sg__append(std::vector< int > *self,std::vector< int >::value_type const &x){
      self->push_back(x);
    }
SWIGINTERN std::vector< int >::iterator std_vector_Sl_int_Sg__erase__SWIG_0(std::vector< int > *self,std::vector< int >::iterator pos){ return self->erase(pos); }
SWIGINTERN std::vector< int >::iterator std_vector_Sl_int_Sg__erase__SWIG_1(std::vector< int > *self,std::vector< int >::iterator first,std::vector< int >::iterator last){ return self->erase(first, last); }
SWIGINTERN std::vector< int >::iterator std_vector_Sl_int_Sg__insert__SWIG_0(std::vector< int > *self,std::vector< int >::iterator pos,std::vector< int >::value_type const &x){ return self->insert(pos, x); }
SWIGINTERN void std_vector_Sl_int_Sg__insert__SWIG_1(std::vector< int > *self,std::vector< int >::iterator pos,std::vector< int >::size_type n,std::vector< int >::value_type const &x){ self->insert(pos, n, x); }

SWIGINTERN swig_type_info*
SWIG_pchar_descriptor(void)
{
  static int init = 0;
  static swig_type_info* info = 0;
  if (!init) {
    info = SWIG_TypeQuery("_p_char");
    init = 1;
  }
  return info;
}


SWIGINTERNINLINE PyObject *
SWIG_FromCharPtrAndSize(const char* carray, size_t size)
{
  if (carray) {
    if (size > INT_MAX) {
      swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
      return pchar_descriptor ? 
	SWIG_InternalNewPointerObj(const_cast< char * >(carray), pchar_descriptor, 0) : SWIG_Py_Void();
    } else {
#if PY_VERSION_HEX >= 0x03000000
#if defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
      return PyBytes_FromStringAndSize(carray, static_cast< Py_ssize_t >(size));
#else
      return PyUnicode_DecodeUTF8(carray, static_cast< Py_ssize_t >(size), "surrogateescape");
#endif
#else
      return PyString_FromStringAndSize(carray, static_cast< Py_ssize_t >(size));
#endif
    }
  } else {
    return SWIG_Py_Void();
  }
}


SWIGINTERNINLINE PyObject *
SWIG_From_std_string  (const std::string& s)
{
  return SWIG_FromCharPtrAndSize(s.data(), s.size());
}


SWIGINTERNINLINE PyObject*
  SWIG_From_unsigned_SS_int  (unsigned int value)
{
  return PyInt_FromSize_t((size_t) value);
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_int (PyObject * obj, unsigned int *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > UINT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< unsigned int >(v);
    }
  }  
  return res;
}

SWIGINTERN std::string fastjet_contrib_piranha_GhostGridRectangle___str__(fastjet::contrib::piranha::GhostGridRectangle const *self){
  return self->description();
}
SWIGINTERN std::string fastjet_contrib_piranha_GhostGridRectangle___repr__(fastjet::contrib::piranha::GhostGridRectangle const *self){
  return self->description();
}
SWIGINTERN std::string fastjet_contrib_piranha_GhostGridDisk___str__(fastjet::contrib::piranha::GhostGridDisk const *self){
  return self->description();
}
SWIGINTERN std::string fastjet_contrib_piranha_GhostGridDisk___repr__(fastjet::contrib::piranha::GhostGridDisk const *self){
  return self->description();
}

SWIGINTERN int
SWIG_AsVal_bool (PyObject *obj, bool *val)
{
  int r;
  if (!PyBool_Check(obj))
    return SWIG_ERROR;
  r = PyObject_IsTrue(obj);
  if (r == -1)
    return SWIG_ERROR;
  if (val) *val = r ? true : false;
  return SWIG_OK;
}

SWIGINTERN std::string fastjet_contrib_piranha_IteratedVoronoiSubtractorBase_Sl_fastjet_contrib_piranha_DynamicVoronoiDisk_Sg____str__(fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > const *self){
  return self->description();
}
SWIGINTERN std::string fastjet_contrib_piranha_IteratedVoronoiSubtractorBase_Sl_fastjet_contrib_piranha_DynamicVoronoiDisk_Sg____repr__(fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > const *self){
  return self->description();
}
SWIGINTERN std::string fastjet_contrib_piranha_IteratedVoronoiSubtractorBase_Sl_fastjet_contrib_piranha_DynamicVoronoiCylinder_Sg____str__(fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > const *self){
  return self->description();
}
SWIGINTERN std::string fastjet_contrib_piranha_IteratedVoronoiSubtractorBase_Sl_fastjet_contrib_piranha_DynamicVoronoiCylinder_Sg____repr__(fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > const *self){
  return self->description();
}
SWIGINTERN std::string fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_TransverseMomentum_Sc_emd_DeltaR_Sg__Sg____str__(fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > > const *self){
  return self->description();
}
SWIGINTERN std::string fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_TransverseMomentum_Sc_emd_DeltaR_Sg__Sg____repr__(fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > > const *self){
  return self->description();
}
SWIGINTERN std::string fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_TransverseMomentum_Sc_emd_HadronicDot_Sg__Sg____str__(fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > > const *self){
  return self->description();
}
SWIGINTERN std::string fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_TransverseMomentum_Sc_emd_HadronicDot_Sg__Sg____repr__(fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > > const *self){
  return self->description();
}
SWIGINTERN std::string fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_TransverseMomentum_Sc_emd_HadronicDotMassive_Sg__Sg____str__(fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > > const *self){
  return self->description();
}
SWIGINTERN std::string fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_TransverseMomentum_Sc_emd_HadronicDotMassive_Sg__Sg____repr__(fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > > const *self){
  return self->description();
}
SWIGINTERN std::string fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_TransverseEnergy_Sc_emd_DeltaR_Sg__Sg____str__(fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > > const *self){
  return self->description();
}
SWIGINTERN std::string fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_TransverseEnergy_Sc_emd_DeltaR_Sg__Sg____repr__(fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > > const *self){
  return self->description();
}
SWIGINTERN std::string fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_TransverseEnergy_Sc_emd_HadronicDot_Sg__Sg____str__(fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > > const *self){
  return self->description();
}
SWIGINTERN std::string fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_TransverseEnergy_Sc_emd_HadronicDot_Sg__Sg____repr__(fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > > const *self){
  return self->description();
}
SWIGINTERN std::string fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_TransverseEnergy_Sc_emd_HadronicDotMassive_Sg__Sg____str__(fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > > const *self){
  return self->description();
}
SWIGINTERN std::string fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_TransverseEnergy_Sc_emd_HadronicDotMassive_Sg__Sg____repr__(fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > > const *self){
  return self->description();
}
SWIGINTERN std::string fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_Momentum_Sc_emd_EEDot_Sg__Sg____str__(fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > > const *self){
  return self->description();
}
SWIGINTERN std::string fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_Momentum_Sc_emd_EEDot_Sg__Sg____repr__(fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > > const *self){
  return self->description();
}
SWIGINTERN std::string fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_Momentum_Sc_emd_EEDotMassive_Sg__Sg____str__(fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > > const *self){
  return self->description();
}
SWIGINTERN std::string fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_Momentum_Sc_emd_EEDotMassive_Sg__Sg____repr__(fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > > const *self){
  return self->description();
}
SWIGINTERN std::string fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_Momentum_Sc_emd_EEArcLength_Sg__Sg____str__(fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > > const *self){
  return self->description();
}
SWIGINTERN std::string fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_Momentum_Sc_emd_EEArcLength_Sg__Sg____repr__(fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > > const *self){
  return self->description();
}
SWIGINTERN std::string fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_Momentum_Sc_emd_EEArcLengthMassive_Sg__Sg____str__(fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > > const *self){
  return self->description();
}
SWIGINTERN std::string fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_Momentum_Sc_emd_EEArcLengthMassive_Sg__Sg____repr__(fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > > const *self){
  return self->description();
}
SWIGINTERN std::string fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_Energy_Sc_emd_EEDot_Sg__Sg____str__(fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > > const *self){
  return self->description();
}
SWIGINTERN std::string fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_Energy_Sc_emd_EEDot_Sg__Sg____repr__(fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > > const *self){
  return self->description();
}
SWIGINTERN std::string fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_Energy_Sc_emd_EEDotMassive_Sg__Sg____str__(fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > > const *self){
  return self->description();
}
SWIGINTERN std::string fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_Energy_Sc_emd_EEDotMassive_Sg__Sg____repr__(fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > > const *self){
  return self->description();
}
SWIGINTERN std::string fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_Energy_Sc_emd_EEArcLength_Sg__Sg____str__(fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > > const *self){
  return self->description();
}
SWIGINTERN std::string fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_Energy_Sc_emd_EEArcLength_Sg__Sg____repr__(fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > > const *self){
  return self->description();
}
SWIGINTERN std::string fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_Energy_Sc_emd_EEArcLengthMassive_Sg__Sg____str__(fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > > const *self){
  return self->description();
}
SWIGINTERN std::string fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_Energy_Sc_emd_EEArcLengthMassive_Sg__Sg____repr__(fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > > const *self){
  return self->description();
}
SWIGINTERN std::string fastjet_contrib_piranha_RecursiveSafeSubtractor_Sl_emd_TransverseMomentum_Sg____str__(fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > const *self){
  return self->description();
}
SWIGINTERN std::string fastjet_contrib_piranha_RecursiveSafeSubtractor_Sl_emd_TransverseMomentum_Sg____repr__(fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > const *self){
  return self->description();
}
SWIGINTERN std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > fastjet_contrib_piranha_RecursiveSafeSubtractor_Sl_emd_TransverseMomentum_Sg__operator_Sp__SP___SWIG_0(fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > *self,fastjet::PseudoJet const &jet,int _=0){
    std::forward_list<fastjet::PseudoJet> result((*self)(jet));
    return std::vector<fastjet::PseudoJet>(result.begin(), result.end());
  }
SWIGINTERN std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > fastjet_contrib_piranha_RecursiveSafeSubtractor_Sl_emd_TransverseMomentum_Sg__operator_Sp__SP___SWIG_1(fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > *self,std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &pjs,int _=0){
    std::forward_list<fastjet::PseudoJet> result((*self)(pjs));
    return std::vector<fastjet::PseudoJet>(result.begin(), result.end());
  }
SWIGINTERN std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > fastjet_contrib_piranha_RecursiveSafeSubtractor_Sl_emd_TransverseMomentum_Sg__apply(fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > *self,double z,double f,int _=0){
    std::forward_list<fastjet::PseudoJet> result(self->apply(z, f));
    return std::vector<fastjet::PseudoJet>(result.begin(), result.end()); 
  }
SWIGINTERN std::string fastjet_contrib_piranha_RecursiveSafeSubtractor_Sl_emd_TransverseEnergy_Sg____str__(fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > const *self){
  return self->description();
}
SWIGINTERN std::string fastjet_contrib_piranha_RecursiveSafeSubtractor_Sl_emd_TransverseEnergy_Sg____repr__(fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > const *self){
  return self->description();
}
SWIGINTERN std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > fastjet_contrib_piranha_RecursiveSafeSubtractor_Sl_emd_TransverseEnergy_Sg__operator_Sp__SP___SWIG_0(fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > *self,fastjet::PseudoJet const &jet,int _=0){
    std::forward_list<fastjet::PseudoJet> result((*self)(jet));
    return std::vector<fastjet::PseudoJet>(result.begin(), result.end());
  }
SWIGINTERN std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > fastjet_contrib_piranha_RecursiveSafeSubtractor_Sl_emd_TransverseEnergy_Sg__operator_Sp__SP___SWIG_1(fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > *self,std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &pjs,int _=0){
    std::forward_list<fastjet::PseudoJet> result((*self)(pjs));
    return std::vector<fastjet::PseudoJet>(result.begin(), result.end());
  }
SWIGINTERN std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > fastjet_contrib_piranha_RecursiveSafeSubtractor_Sl_emd_TransverseEnergy_Sg__apply(fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > *self,double z,double f,int _=0){
    std::forward_list<fastjet::PseudoJet> result(self->apply(z, f));
    return std::vector<fastjet::PseudoJet>(result.begin(), result.end()); 
  }
SWIGINTERN std::string fastjet_contrib_piranha_RecursiveSafeSubtractor_Sl_emd_Energy_Sg____str__(fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > const *self){
  return self->description();
}
SWIGINTERN std::string fastjet_contrib_piranha_RecursiveSafeSubtractor_Sl_emd_Energy_Sg____repr__(fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > const *self){
  return self->description();
}
SWIGINTERN std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > fastjet_contrib_piranha_RecursiveSafeSubtractor_Sl_emd_Energy_Sg__operator_Sp__SP___SWIG_0(fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > *self,fastjet::PseudoJet const &jet,int _=0){
    std::forward_list<fastjet::PseudoJet> result((*self)(jet));
    return std::vector<fastjet::PseudoJet>(result.begin(), result.end());
  }
SWIGINTERN std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > fastjet_contrib_piranha_RecursiveSafeSubtractor_Sl_emd_Energy_Sg__operator_Sp__SP___SWIG_1(fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > *self,std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &pjs,int _=0){
    std::forward_list<fastjet::PseudoJet> result((*self)(pjs));
    return std::vector<fastjet::PseudoJet>(result.begin(), result.end());
  }
SWIGINTERN std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > fastjet_contrib_piranha_RecursiveSafeSubtractor_Sl_emd_Energy_Sg__apply(fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > *self,double z,double f,int _=0){
    std::forward_list<fastjet::PseudoJet> result(self->apply(z, f));
    return std::vector<fastjet::PseudoJet>(result.begin(), result.end()); 
  }
SWIGINTERN std::string fastjet_contrib_piranha_RecursiveSafeSubtractor_Sl_emd_Momentum_Sg____str__(fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > const *self){
  return self->description();
}
SWIGINTERN std::string fastjet_contrib_piranha_RecursiveSafeSubtractor_Sl_emd_Momentum_Sg____repr__(fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > const *self){
  return self->description();
}
SWIGINTERN std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > fastjet_contrib_piranha_RecursiveSafeSubtractor_Sl_emd_Momentum_Sg__operator_Sp__SP___SWIG_0(fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > *self,fastjet::PseudoJet const &jet,int _=0){
    std::forward_list<fastjet::PseudoJet> result((*self)(jet));
    return std::vector<fastjet::PseudoJet>(result.begin(), result.end());
  }
SWIGINTERN std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > fastjet_contrib_piranha_RecursiveSafeSubtractor_Sl_emd_Momentum_Sg__operator_Sp__SP___SWIG_1(fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > *self,std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &pjs,int _=0){
    std::forward_list<fastjet::PseudoJet> result((*self)(pjs));
    return std::vector<fastjet::PseudoJet>(result.begin(), result.end());
  }
SWIGINTERN std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > fastjet_contrib_piranha_RecursiveSafeSubtractor_Sl_emd_Momentum_Sg__apply(fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > *self,double z,double f,int _=0){
    std::forward_list<fastjet::PseudoJet> result(self->apply(z, f));
    return std::vector<fastjet::PseudoJet>(result.begin(), result.end()); 
  }
#ifdef __cplusplus
extern "C" {
#endif
SWIGINTERN PyObject *_wrap_delete_SwigPyIterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SwigPyIterator" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_value(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PyObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_value" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)((swig::SwigPyIterator const *)arg1)->value();
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_incr(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  size_t arg2 = (size_t) 1 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"n",  NULL 
  };
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "O|O:SwigPyIterator_incr", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_incr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  if (obj1) {
    ecode2 = SWIG_AsVal_size_t(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator_incr" "', argument " "2"" of type '" "size_t""'");
    } 
    arg2 = static_cast< size_t >(val2);
  }
  try {
    result = (swig::SwigPyIterator *)(arg1)->incr(arg2);
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_decr(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  size_t arg2 = (size_t) 1 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"n",  NULL 
  };
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "O|O:SwigPyIterator_decr", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_decr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  if (obj1) {
    ecode2 = SWIG_AsVal_size_t(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator_decr" "', argument " "2"" of type '" "size_t""'");
    } 
    arg2 = static_cast< size_t >(val2);
  }
  try {
    result = (swig::SwigPyIterator *)(arg1)->decr(arg2);
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_distance(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"x",  NULL 
  };
  ptrdiff_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:SwigPyIterator_distance", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_distance" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator_distance" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator_distance" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  try {
    result = ((swig::SwigPyIterator const *)arg1)->distance((swig::SwigPyIterator const &)*arg2);
  } catch(std::invalid_argument &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new std::invalid_argument(static_cast< const std::invalid_argument& >(_e))),SWIGTYPE_p_std__invalid_argument,SWIG_POINTER_OWN), "std::invalid_argument", SWIGTYPE_p_std__invalid_argument); SWIG_fail;
  }
  resultobj = SWIG_From_ptrdiff_t(static_cast< ptrdiff_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_equal(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"x",  NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:SwigPyIterator_equal", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_equal" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator_equal" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator_equal" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  try {
    result = (bool)((swig::SwigPyIterator const *)arg1)->equal((swig::SwigPyIterator const &)*arg2);
  } catch(std::invalid_argument &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new std::invalid_argument(static_cast< const std::invalid_argument& >(_e))),SWIGTYPE_p_std__invalid_argument,SWIG_POINTER_OWN), "std::invalid_argument", SWIGTYPE_p_std__invalid_argument); SWIG_fail;
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_copy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_copy" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  result = (swig::SwigPyIterator *)((swig::SwigPyIterator const *)arg1)->copy();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PyObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_next" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)(arg1)->next();
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___next__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PyObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___next__" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)(arg1)->__next__();
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_previous(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PyObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_previous" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)(arg1)->previous();
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_advance(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"n",  NULL 
  };
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:SwigPyIterator_advance", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_advance" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator_advance" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *)(arg1)->advance(arg2);
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"x",  NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:SwigPyIterator___eq__", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___eq__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator___eq__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator___eq__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  result = (bool)((swig::SwigPyIterator const *)arg1)->operator ==((swig::SwigPyIterator const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"x",  NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:SwigPyIterator___ne__", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___ne__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator___ne__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator___ne__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  result = (bool)((swig::SwigPyIterator const *)arg1)->operator !=((swig::SwigPyIterator const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___iadd__(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"n",  NULL 
  };
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:SwigPyIterator___iadd__", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___iadd__" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___iadd__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *) &(arg1)->operator +=(arg2);
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___isub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"n",  NULL 
  };
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:SwigPyIterator___isub__", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___isub__" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___isub__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *) &(arg1)->operator -=(arg2);
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___add__(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"n",  NULL 
  };
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:SwigPyIterator___add__", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___add__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___add__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *)((swig::SwigPyIterator const *)arg1)->operator +(arg2);
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___sub____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___sub__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___sub__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *)((swig::SwigPyIterator const *)arg1)->operator -(arg2);
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___sub____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  ptrdiff_t result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___sub__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator___sub__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator___sub__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  result = ((swig::SwigPyIterator const *)arg1)->operator -((swig::SwigPyIterator const &)*arg2);
  resultobj = SWIG_From_ptrdiff_t(static_cast< ptrdiff_t >(result));
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___sub__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "SwigPyIterator___sub__", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SwigPyIterator___sub____SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SwigPyIterator___sub____SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *SwigPyIterator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_swig__SwigPyIterator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_pairDouble__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  std::pair< double,double > *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (std::pair< double,double > *)new std::pair< double,double >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__pairT_double_double_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pairDouble__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  double arg2 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  std::pair< double,double > *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_pairDouble" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_pairDouble" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  result = (std::pair< double,double > *)new std::pair< double,double >(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__pairT_double_double_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pairDouble__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::pair< double,double > *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  std::pair< double,double > *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    std::pair< double,double > *ptr = (std::pair< double,double > *)0;
    res1 = swig::asptr(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_pairDouble" "', argument " "1"" of type '" "std::pair< double,double > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pairDouble" "', argument " "1"" of type '" "std::pair< double,double > const &""'"); 
    }
    arg1 = ptr;
  }
  result = (std::pair< double,double > *)new std::pair< double,double >((std::pair< double,double > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__pairT_double_double_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pairDouble(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_pairDouble", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_pairDouble__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::pair< double,double >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_pairDouble__SWIG_2(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_pairDouble__SWIG_1(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_pairDouble'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::pair< double,double >::pair()\n"
    "    std::pair< double,double >::pair(double,double)\n"
    "    std::pair< double,double >::pair(std::pair< double,double > const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_pairDouble_first_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::pair< double,double > *arg1 = (std::pair< double,double > *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "pairDouble_first_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__pairT_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pairDouble_first_set" "', argument " "1"" of type '" "std::pair< double,double > *""'"); 
  }
  arg1 = reinterpret_cast< std::pair< double,double > * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pairDouble_first_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->first = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pairDouble_first_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::pair< double,double > *arg1 = (std::pair< double,double > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__pairT_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pairDouble_first_get" "', argument " "1"" of type '" "std::pair< double,double > *""'"); 
  }
  arg1 = reinterpret_cast< std::pair< double,double > * >(argp1);
  result = (double) ((arg1)->first);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pairDouble_second_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::pair< double,double > *arg1 = (std::pair< double,double > *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "pairDouble_second_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__pairT_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pairDouble_second_set" "', argument " "1"" of type '" "std::pair< double,double > *""'"); 
  }
  arg1 = reinterpret_cast< std::pair< double,double > * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pairDouble_second_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->second = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pairDouble_second_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::pair< double,double > *arg1 = (std::pair< double,double > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__pairT_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pairDouble_second_get" "', argument " "1"" of type '" "std::pair< double,double > *""'"); 
  }
  arg1 = reinterpret_cast< std::pair< double,double > * >(argp1);
  result = (double) ((arg1)->second);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_pairDouble(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::pair< double,double > *arg1 = (std::pair< double,double > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__pairT_double_double_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_pairDouble" "', argument " "1"" of type '" "std::pair< double,double > *""'"); 
  }
  arg1 = reinterpret_cast< std::pair< double,double > * >(argp1);
  {
    try {
      delete arg1; 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *pairDouble_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_std__pairT_double_double_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *pairDouble_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_pairPairDouble__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  std::pair< std::pair< double,double >,std::pair< double,double > > *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (std::pair< std::pair< double,double >,std::pair< double,double > > *)new std::pair< std::pair< double,double >,std::pair< double,double > >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__pairT_std__pairT_double_double_t_std__pairT_double_double_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pairPairDouble__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::pair< double,double > arg1 ;
  std::pair< double,double > arg2 ;
  std::pair< std::pair< double,double >,std::pair< double,double > > *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  {
    std::pair< double,double > *ptr = (std::pair< double,double > *)0;
    int res = swig::asptr(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "new_pairPairDouble" "', argument " "1"" of type '" "std::pair< double,double >""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::pair< double,double > *ptr = (std::pair< double,double > *)0;
    int res = swig::asptr(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "new_pairPairDouble" "', argument " "2"" of type '" "std::pair< double,double >""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (std::pair< std::pair< double,double >,std::pair< double,double > > *)new std::pair< std::pair< double,double >,std::pair< double,double > >(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__pairT_std__pairT_double_double_t_std__pairT_double_double_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pairPairDouble__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::pair< std::pair< double,double >,std::pair< double,double > > *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  std::pair< std::pair< double,double >,std::pair< double,double > > *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    std::pair< std::pair< double,double >,std::pair< double,double > > *ptr = (std::pair< std::pair< double,double >,std::pair< double,double > > *)0;
    res1 = swig::asptr(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_pairPairDouble" "', argument " "1"" of type '" "std::pair< std::pair< double,double >,std::pair< double,double > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pairPairDouble" "', argument " "1"" of type '" "std::pair< std::pair< double,double >,std::pair< double,double > > const &""'"); 
    }
    arg1 = ptr;
  }
  result = (std::pair< std::pair< double,double >,std::pair< double,double > > *)new std::pair< std::pair< double,double >,std::pair< double,double > >((std::pair< std::pair< double,double >,std::pair< double,double > > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__pairT_std__pairT_double_double_t_std__pairT_double_double_t_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pairPairDouble(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_pairPairDouble", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_pairPairDouble__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::pair< std::pair< double,double >,std::pair< double,double > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_pairPairDouble__SWIG_2(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::pair< double,double >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = swig::asptr(argv[1], (std::pair< double,double >**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_pairPairDouble__SWIG_1(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_pairPairDouble'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::pair< std::pair< double,double >,std::pair< double,double > >::pair()\n"
    "    std::pair< std::pair< double,double >,std::pair< double,double > >::pair(std::pair< double,double >,std::pair< double,double >)\n"
    "    std::pair< std::pair< double,double >,std::pair< double,double > >::pair(std::pair< std::pair< double,double >,std::pair< double,double > > const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_pairPairDouble_first_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::pair< std::pair< double,double >,std::pair< double,double > > *arg1 = (std::pair< std::pair< double,double >,std::pair< double,double > > *) 0 ;
  std::pair< double,double > *arg2 = (std::pair< double,double > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "pairPairDouble_first_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__pairT_std__pairT_double_double_t_std__pairT_double_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pairPairDouble_first_set" "', argument " "1"" of type '" "std::pair< std::pair< double,double >,std::pair< double,double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::pair< std::pair< double,double >,std::pair< double,double > > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_std__pairT_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pairPairDouble_first_set" "', argument " "2"" of type '" "std::pair< double,double > *""'"); 
  }
  arg2 = reinterpret_cast< std::pair< double,double > * >(argp2);
  if (arg1) (arg1)->first = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pairPairDouble_first_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::pair< std::pair< double,double >,std::pair< double,double > > *arg1 = (std::pair< std::pair< double,double >,std::pair< double,double > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::pair< double,double > *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__pairT_std__pairT_double_double_t_std__pairT_double_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pairPairDouble_first_get" "', argument " "1"" of type '" "std::pair< std::pair< double,double >,std::pair< double,double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::pair< std::pair< double,double >,std::pair< double,double > > * >(argp1);
  result = (std::pair< double,double > *)& ((arg1)->first);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__pairT_double_double_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pairPairDouble_second_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::pair< std::pair< double,double >,std::pair< double,double > > *arg1 = (std::pair< std::pair< double,double >,std::pair< double,double > > *) 0 ;
  std::pair< double,double > *arg2 = (std::pair< double,double > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "pairPairDouble_second_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__pairT_std__pairT_double_double_t_std__pairT_double_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pairPairDouble_second_set" "', argument " "1"" of type '" "std::pair< std::pair< double,double >,std::pair< double,double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::pair< std::pair< double,double >,std::pair< double,double > > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_std__pairT_double_double_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pairPairDouble_second_set" "', argument " "2"" of type '" "std::pair< double,double > *""'"); 
  }
  arg2 = reinterpret_cast< std::pair< double,double > * >(argp2);
  if (arg1) (arg1)->second = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pairPairDouble_second_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::pair< std::pair< double,double >,std::pair< double,double > > *arg1 = (std::pair< std::pair< double,double >,std::pair< double,double > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::pair< double,double > *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__pairT_std__pairT_double_double_t_std__pairT_double_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pairPairDouble_second_get" "', argument " "1"" of type '" "std::pair< std::pair< double,double >,std::pair< double,double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::pair< std::pair< double,double >,std::pair< double,double > > * >(argp1);
  result = (std::pair< double,double > *)& ((arg1)->second);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__pairT_double_double_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_pairPairDouble(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::pair< std::pair< double,double >,std::pair< double,double > > *arg1 = (std::pair< std::pair< double,double >,std::pair< double,double > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__pairT_std__pairT_double_double_t_std__pairT_double_double_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_pairPairDouble" "', argument " "1"" of type '" "std::pair< std::pair< double,double >,std::pair< double,double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::pair< std::pair< double,double >,std::pair< double,double > > * >(argp1);
  {
    try {
      delete arg1; 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *pairPairDouble_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_std__pairT_std__pairT_double_double_t_std__pairT_double_double_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *pairPairDouble_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_vectorVectorDouble_iterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::vector< double > > *arg1 = (std::vector< std::vector< double > > *) 0 ;
  PyObject **arg2 = (PyObject **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  swig::SwigPyIterator *result = 0 ;
  
  arg2 = &swig_obj[0];
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorDouble_iterator" "', argument " "1"" of type '" "std::vector< std::vector< double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< double > > * >(argp1);
  result = (swig::SwigPyIterator *)std_vector_Sl_std_vector_Sl_double_Sg__Sg__iterator(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorDouble___nonzero__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::vector< double > > *arg1 = (std::vector< std::vector< double > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorDouble___nonzero__" "', argument " "1"" of type '" "std::vector< std::vector< double > > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< double > > * >(argp1);
  result = (bool)std_vector_Sl_std_vector_Sl_double_Sg__Sg____nonzero__((std::vector< std::vector< double > > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorDouble___bool__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::vector< double > > *arg1 = (std::vector< std::vector< double > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorDouble___bool__" "', argument " "1"" of type '" "std::vector< std::vector< double > > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< double > > * >(argp1);
  result = (bool)std_vector_Sl_std_vector_Sl_double_Sg__Sg____bool__((std::vector< std::vector< double > > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorDouble___len__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::vector< double > > *arg1 = (std::vector< std::vector< double > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< std::vector< double > >::size_type result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorDouble___len__" "', argument " "1"" of type '" "std::vector< std::vector< double > > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< double > > * >(argp1);
  result = std_vector_Sl_std_vector_Sl_double_Sg__Sg____len__((std::vector< std::vector< double > > const *)arg1);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorDouble___getslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< std::vector< double > > *arg1 = (std::vector< std::vector< double > > *) 0 ;
  std::vector< std::vector< double > >::difference_type arg2 ;
  std::vector< std::vector< double > >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"i",  (char *)"j",  NULL 
  };
  std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:vectorVectorDouble___getslice__", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorDouble___getslice__" "', argument " "1"" of type '" "std::vector< std::vector< double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< double > > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorVectorDouble___getslice__" "', argument " "2"" of type '" "std::vector< std::vector< double > >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< std::vector< double > >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorVectorDouble___getslice__" "', argument " "3"" of type '" "std::vector< std::vector< double > >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< std::vector< double > >::difference_type >(val3);
  try {
    result = (std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > *)std_vector_Sl_std_vector_Sl_double_Sg__Sg____getslice__(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorDouble___setslice____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::vector< double > > *arg1 = (std::vector< std::vector< double > > *) 0 ;
  std::vector< std::vector< double > >::difference_type arg2 ;
  std::vector< std::vector< double > >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorDouble___setslice__" "', argument " "1"" of type '" "std::vector< std::vector< double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< double > > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorVectorDouble___setslice__" "', argument " "2"" of type '" "std::vector< std::vector< double > >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< std::vector< double > >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorVectorDouble___setslice__" "', argument " "3"" of type '" "std::vector< std::vector< double > >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< std::vector< double > >::difference_type >(val3);
  try {
    std_vector_Sl_std_vector_Sl_double_Sg__Sg____setslice____SWIG_0(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorDouble___setslice____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::vector< double > > *arg1 = (std::vector< std::vector< double > > *) 0 ;
  std::vector< std::vector< double > >::difference_type arg2 ;
  std::vector< std::vector< double > >::difference_type arg3 ;
  std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorDouble___setslice__" "', argument " "1"" of type '" "std::vector< std::vector< double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< double > > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorVectorDouble___setslice__" "', argument " "2"" of type '" "std::vector< std::vector< double > >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< std::vector< double > >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorVectorDouble___setslice__" "', argument " "3"" of type '" "std::vector< std::vector< double > >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< std::vector< double > >::difference_type >(val3);
  {
    std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > *ptr = (std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > *)0;
    res4 = swig::asptr(swig_obj[3], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "vectorVectorDouble___setslice__" "', argument " "4"" of type '" "std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorVectorDouble___setslice__" "', argument " "4"" of type '" "std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > const &""'"); 
    }
    arg4 = ptr;
  }
  try {
    std_vector_Sl_std_vector_Sl_double_Sg__Sg____setslice____SWIG_1(arg1,arg2,arg3,(std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > const &)*arg4);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res4)) delete arg4;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) delete arg4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorDouble___setslice__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectorVectorDouble___setslice__", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_vectorVectorDouble___setslice____SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = swig::asptr(argv[3], (std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > >**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_vectorVectorDouble___setslice____SWIG_1(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectorVectorDouble___setslice__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< std::vector< double > >::__setslice__(std::vector< std::vector< double > >::difference_type,std::vector< std::vector< double > >::difference_type)\n"
    "    std::vector< std::vector< double > >::__setslice__(std::vector< std::vector< double > >::difference_type,std::vector< std::vector< double > >::difference_type,std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorVectorDouble___delslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< std::vector< double > > *arg1 = (std::vector< std::vector< double > > *) 0 ;
  std::vector< std::vector< double > >::difference_type arg2 ;
  std::vector< std::vector< double > >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"i",  (char *)"j",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:vectorVectorDouble___delslice__", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorDouble___delslice__" "', argument " "1"" of type '" "std::vector< std::vector< double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< double > > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorVectorDouble___delslice__" "', argument " "2"" of type '" "std::vector< std::vector< double > >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< std::vector< double > >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorVectorDouble___delslice__" "', argument " "3"" of type '" "std::vector< std::vector< double > >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< std::vector< double > >::difference_type >(val3);
  try {
    std_vector_Sl_std_vector_Sl_double_Sg__Sg____delslice__(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorDouble___delitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::vector< double > > *arg1 = (std::vector< std::vector< double > > *) 0 ;
  std::vector< std::vector< double > >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorDouble___delitem__" "', argument " "1"" of type '" "std::vector< std::vector< double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< double > > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorVectorDouble___delitem__" "', argument " "2"" of type '" "std::vector< std::vector< double > >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< std::vector< double > >::difference_type >(val2);
  try {
    std_vector_Sl_std_vector_Sl_double_Sg__Sg____delitem____SWIG_0(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorDouble___getitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::vector< double > > *arg1 = (std::vector< std::vector< double > > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorDouble___getitem__" "', argument " "1"" of type '" "std::vector< std::vector< double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< double > > * >(argp1);
  {
    if (!PySlice_Check(swig_obj[1])) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorVectorDouble___getitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) swig_obj[1];
  }
  try {
    result = (std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > *)std_vector_Sl_std_vector_Sl_double_Sg__Sg____getitem____SWIG_0(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorDouble___setitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::vector< double > > *arg1 = (std::vector< std::vector< double > > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorDouble___setitem__" "', argument " "1"" of type '" "std::vector< std::vector< double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< double > > * >(argp1);
  {
    if (!PySlice_Check(swig_obj[1])) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorVectorDouble___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) swig_obj[1];
  }
  {
    std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > *ptr = (std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > *)0;
    res3 = swig::asptr(swig_obj[2], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "vectorVectorDouble___setitem__" "', argument " "3"" of type '" "std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorVectorDouble___setitem__" "', argument " "3"" of type '" "std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > const &""'"); 
    }
    arg3 = ptr;
  }
  try {
    std_vector_Sl_std_vector_Sl_double_Sg__Sg____setitem____SWIG_0(arg1,arg2,(std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorDouble___setitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::vector< double > > *arg1 = (std::vector< std::vector< double > > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorDouble___setitem__" "', argument " "1"" of type '" "std::vector< std::vector< double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< double > > * >(argp1);
  {
    if (!PySlice_Check(swig_obj[1])) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorVectorDouble___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) swig_obj[1];
  }
  try {
    std_vector_Sl_std_vector_Sl_double_Sg__Sg____setitem____SWIG_1(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorDouble___delitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::vector< double > > *arg1 = (std::vector< std::vector< double > > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorDouble___delitem__" "', argument " "1"" of type '" "std::vector< std::vector< double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< double > > * >(argp1);
  {
    if (!PySlice_Check(swig_obj[1])) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorVectorDouble___delitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) swig_obj[1];
  }
  try {
    std_vector_Sl_std_vector_Sl_double_Sg__Sg____delitem____SWIG_1(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorDouble___delitem__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectorVectorDouble___delitem__", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_vectorVectorDouble___delitem____SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_vectorVectorDouble___delitem____SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectorVectorDouble___delitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< std::vector< double > >::__delitem__(std::vector< std::vector< double > >::difference_type)\n"
    "    std::vector< std::vector< double > >::__delitem__(PySliceObject *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorVectorDouble___getitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::vector< double > > *arg1 = (std::vector< std::vector< double > > *) 0 ;
  std::vector< std::vector< double > >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  std::vector< std::vector< double > >::value_type *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorDouble___getitem__" "', argument " "1"" of type '" "std::vector< std::vector< double > > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< double > > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorVectorDouble___getitem__" "', argument " "2"" of type '" "std::vector< std::vector< double > >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< std::vector< double > >::difference_type >(val2);
  try {
    result = (std::vector< std::vector< double > >::value_type *) &std_vector_Sl_std_vector_Sl_double_Sg__Sg____getitem____SWIG_1((std::vector< std::vector< double > > const *)arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  resultobj = swig::from(static_cast< std::vector< double,std::allocator< double > > >(*result));
  (void)swig::container_owner<swig::traits<std::vector< std::vector< double > >::value_type>::category>::back_reference(resultobj, swig_obj[0]);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorDouble___getitem__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectorVectorDouble___getitem__", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_vectorVectorDouble___getitem____SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_vectorVectorDouble___getitem____SWIG_1(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectorVectorDouble___getitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< std::vector< double > >::__getitem__(PySliceObject *)\n"
    "    std::vector< std::vector< double > >::__getitem__(std::vector< std::vector< double > >::difference_type) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorVectorDouble___setitem____SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::vector< double > > *arg1 = (std::vector< std::vector< double > > *) 0 ;
  std::vector< std::vector< double > >::difference_type arg2 ;
  std::vector< std::vector< double > >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorDouble___setitem__" "', argument " "1"" of type '" "std::vector< std::vector< double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< double > > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorVectorDouble___setitem__" "', argument " "2"" of type '" "std::vector< std::vector< double > >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< std::vector< double > >::difference_type >(val2);
  {
    std::vector< double,std::allocator< double > > *ptr = (std::vector< double,std::allocator< double > > *)0;
    res3 = swig::asptr(swig_obj[2], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "vectorVectorDouble___setitem__" "', argument " "3"" of type '" "std::vector< std::vector< double > >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorVectorDouble___setitem__" "', argument " "3"" of type '" "std::vector< std::vector< double > >::value_type const &""'"); 
    }
    arg3 = ptr;
  }
  try {
    std_vector_Sl_std_vector_Sl_double_Sg__Sg____setitem____SWIG_2(arg1,arg2,(std::vector< double,std::allocator< double > > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorDouble___setitem__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectorVectorDouble___setitem__", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_vectorVectorDouble___setitem____SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        int res = swig::asptr(argv[2], (std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > >**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_vectorVectorDouble___setitem____SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = swig::asptr(argv[2], (std::vector< double,std::allocator< double > >**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_vectorVectorDouble___setitem____SWIG_2(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectorVectorDouble___setitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< std::vector< double > >::__setitem__(PySliceObject *,std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > const &)\n"
    "    std::vector< std::vector< double > >::__setitem__(PySliceObject *)\n"
    "    std::vector< std::vector< double > >::__setitem__(std::vector< std::vector< double > >::difference_type,std::vector< std::vector< double > >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorVectorDouble_pop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::vector< double > > *arg1 = (std::vector< std::vector< double > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< std::vector< double > >::value_type result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorDouble_pop" "', argument " "1"" of type '" "std::vector< std::vector< double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< double > > * >(argp1);
  try {
    result = std_vector_Sl_std_vector_Sl_double_Sg__Sg__pop(arg1);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  resultobj = swig::from(static_cast< std::vector< double,std::allocator< double > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorDouble_append(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< std::vector< double > > *arg1 = (std::vector< std::vector< double > > *) 0 ;
  std::vector< std::vector< double > >::value_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"x",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:vectorVectorDouble_append", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorDouble_append" "', argument " "1"" of type '" "std::vector< std::vector< double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< double > > * >(argp1);
  {
    std::vector< double,std::allocator< double > > *ptr = (std::vector< double,std::allocator< double > > *)0;
    res2 = swig::asptr(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vectorVectorDouble_append" "', argument " "2"" of type '" "std::vector< std::vector< double > >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorVectorDouble_append" "', argument " "2"" of type '" "std::vector< std::vector< double > >::value_type const &""'"); 
    }
    arg2 = ptr;
  }
  std_vector_Sl_std_vector_Sl_double_Sg__Sg__append(arg1,(std::vector< double,std::allocator< double > > const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_vectorVectorDouble__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  std::vector< std::vector< double > > *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (std::vector< std::vector< double > > *)new std::vector< std::vector< double > >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_vectorVectorDouble__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::vector< double,std::allocator< double > > > *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  std::vector< std::vector< double > > *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > *ptr = (std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > *)0;
    res1 = swig::asptr(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_vectorVectorDouble" "', argument " "1"" of type '" "std::vector< std::vector< double,std::allocator< double > > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_vectorVectorDouble" "', argument " "1"" of type '" "std::vector< std::vector< double,std::allocator< double > > > const &""'"); 
    }
    arg1 = ptr;
  }
  result = (std::vector< std::vector< double > > *)new std::vector< std::vector< double > >((std::vector< std::vector< double,std::allocator< double > > > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorDouble_empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::vector< double > > *arg1 = (std::vector< std::vector< double > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorDouble_empty" "', argument " "1"" of type '" "std::vector< std::vector< double > > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< double > > * >(argp1);
  result = (bool)((std::vector< std::vector< double > > const *)arg1)->empty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorDouble_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::vector< double > > *arg1 = (std::vector< std::vector< double > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< std::vector< double > >::size_type result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorDouble_size" "', argument " "1"" of type '" "std::vector< std::vector< double > > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< double > > * >(argp1);
  result = ((std::vector< std::vector< double > > const *)arg1)->size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorDouble_swap(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< std::vector< double > > *arg1 = (std::vector< std::vector< double > > *) 0 ;
  std::vector< std::vector< double,std::allocator< double > > > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"v",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:vectorVectorDouble_swap", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorDouble_swap" "', argument " "1"" of type '" "std::vector< std::vector< double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< double > > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vectorVectorDouble_swap" "', argument " "2"" of type '" "std::vector< std::vector< double,std::allocator< double > > > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorVectorDouble_swap" "', argument " "2"" of type '" "std::vector< std::vector< double,std::allocator< double > > > &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< std::vector< double,std::allocator< double > > > * >(argp2);
  (arg1)->swap(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorDouble_begin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::vector< double > > *arg1 = (std::vector< std::vector< double > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< std::vector< double > >::iterator result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorDouble_begin" "', argument " "1"" of type '" "std::vector< std::vector< double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< double > > * >(argp1);
  result = (arg1)->begin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< std::vector< double > >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorDouble_end(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::vector< double > > *arg1 = (std::vector< std::vector< double > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< std::vector< double > >::iterator result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorDouble_end" "', argument " "1"" of type '" "std::vector< std::vector< double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< double > > * >(argp1);
  result = (arg1)->end();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< std::vector< double > >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorDouble_rbegin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::vector< double > > *arg1 = (std::vector< std::vector< double > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< std::vector< double > >::reverse_iterator result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorDouble_rbegin" "', argument " "1"" of type '" "std::vector< std::vector< double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< double > > * >(argp1);
  result = (arg1)->rbegin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< std::vector< double > >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorDouble_rend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::vector< double > > *arg1 = (std::vector< std::vector< double > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< std::vector< double > >::reverse_iterator result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorDouble_rend" "', argument " "1"" of type '" "std::vector< std::vector< double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< double > > * >(argp1);
  result = (arg1)->rend();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< std::vector< double > >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorDouble_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::vector< double > > *arg1 = (std::vector< std::vector< double > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorDouble_clear" "', argument " "1"" of type '" "std::vector< std::vector< double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< double > > * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorDouble_get_allocator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::vector< double > > *arg1 = (std::vector< std::vector< double > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  SwigValueWrapper< std::allocator< std::vector< double,std::allocator< double > > > > result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorDouble_get_allocator" "', argument " "1"" of type '" "std::vector< std::vector< double > > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< double > > * >(argp1);
  result = ((std::vector< std::vector< double > > const *)arg1)->get_allocator();
  resultobj = SWIG_NewPointerObj((new std::vector< std::vector< double > >::allocator_type(static_cast< const std::vector< std::vector< double > >::allocator_type& >(result))), SWIGTYPE_p_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_vectorVectorDouble__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::vector< double > >::size_type arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  std::vector< std::vector< double > > *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_vectorVectorDouble" "', argument " "1"" of type '" "std::vector< std::vector< double > >::size_type""'");
  } 
  arg1 = static_cast< std::vector< std::vector< double > >::size_type >(val1);
  result = (std::vector< std::vector< double > > *)new std::vector< std::vector< double > >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorDouble_pop_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::vector< double > > *arg1 = (std::vector< std::vector< double > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorDouble_pop_back" "', argument " "1"" of type '" "std::vector< std::vector< double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< double > > * >(argp1);
  (arg1)->pop_back();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorDouble_resize__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::vector< double > > *arg1 = (std::vector< std::vector< double > > *) 0 ;
  std::vector< std::vector< double > >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorDouble_resize" "', argument " "1"" of type '" "std::vector< std::vector< double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< double > > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorVectorDouble_resize" "', argument " "2"" of type '" "std::vector< std::vector< double > >::size_type""'");
  } 
  arg2 = static_cast< std::vector< std::vector< double > >::size_type >(val2);
  (arg1)->resize(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorDouble_erase__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::vector< double > > *arg1 = (std::vector< std::vector< double > > *) 0 ;
  std::vector< std::vector< double > >::iterator arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  std::vector< std::vector< double > >::iterator result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorDouble_erase" "', argument " "1"" of type '" "std::vector< std::vector< double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< double > > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorVectorDouble_erase" "', argument " "2"" of type '" "std::vector< std::vector< double > >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< std::vector< double > >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< std::vector< double > >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorVectorDouble_erase" "', argument " "2"" of type '" "std::vector< std::vector< double > >::iterator""'");
    }
  }
  result = std_vector_Sl_std_vector_Sl_double_Sg__Sg__erase__SWIG_0(arg1,arg2);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< std::vector< double > >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorDouble_erase__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::vector< double > > *arg1 = (std::vector< std::vector< double > > *) 0 ;
  std::vector< std::vector< double > >::iterator arg2 ;
  std::vector< std::vector< double > >::iterator arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  swig::SwigPyIterator *iter3 = 0 ;
  int res3 ;
  std::vector< std::vector< double > >::iterator result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorDouble_erase" "', argument " "1"" of type '" "std::vector< std::vector< double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< double > > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorVectorDouble_erase" "', argument " "2"" of type '" "std::vector< std::vector< double > >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< std::vector< double > >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< std::vector< double > >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorVectorDouble_erase" "', argument " "2"" of type '" "std::vector< std::vector< double > >::iterator""'");
    }
  }
  res3 = SWIG_ConvertPtr(swig_obj[2], SWIG_as_voidptrptr(&iter3), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res3) || !iter3) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorVectorDouble_erase" "', argument " "3"" of type '" "std::vector< std::vector< double > >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< std::vector< double > >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< std::vector< double > >::iterator > *>(iter3);
    if (iter_t) {
      arg3 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorVectorDouble_erase" "', argument " "3"" of type '" "std::vector< std::vector< double > >::iterator""'");
    }
  }
  result = std_vector_Sl_std_vector_Sl_double_Sg__Sg__erase__SWIG_1(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< std::vector< double > >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorDouble_erase(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectorVectorDouble_erase", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< std::vector< double > >::iterator > *>(iter) != 0));
      if (_v) {
        return _wrap_vectorVectorDouble_erase__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< std::vector< double > >::iterator > *>(iter) != 0));
      if (_v) {
        swig::SwigPyIterator *iter = 0;
        int res = SWIG_ConvertPtr(argv[2], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
        _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< std::vector< double > >::iterator > *>(iter) != 0));
        if (_v) {
          return _wrap_vectorVectorDouble_erase__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectorVectorDouble_erase'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< std::vector< double > >::erase(std::vector< std::vector< double > >::iterator)\n"
    "    std::vector< std::vector< double > >::erase(std::vector< std::vector< double > >::iterator,std::vector< std::vector< double > >::iterator)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_vectorVectorDouble__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::vector< double > >::size_type arg1 ;
  std::vector< std::vector< double > >::value_type *arg2 = 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  std::vector< std::vector< double > > *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_vectorVectorDouble" "', argument " "1"" of type '" "std::vector< std::vector< double > >::size_type""'");
  } 
  arg1 = static_cast< std::vector< std::vector< double > >::size_type >(val1);
  {
    std::vector< double,std::allocator< double > > *ptr = (std::vector< double,std::allocator< double > > *)0;
    res2 = swig::asptr(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_vectorVectorDouble" "', argument " "2"" of type '" "std::vector< std::vector< double > >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_vectorVectorDouble" "', argument " "2"" of type '" "std::vector< std::vector< double > >::value_type const &""'"); 
    }
    arg2 = ptr;
  }
  result = (std::vector< std::vector< double > > *)new std::vector< std::vector< double > >(arg1,(std::vector< std::vector< double > >::value_type const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_vectorVectorDouble(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_vectorVectorDouble", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_vectorVectorDouble__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_vectorVectorDouble__SWIG_2(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_vectorVectorDouble__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = swig::asptr(argv[1], (std::vector< double,std::allocator< double > >**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_vectorVectorDouble__SWIG_3(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_vectorVectorDouble'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< std::vector< double > >::vector()\n"
    "    std::vector< std::vector< double > >::vector(std::vector< std::vector< double,std::allocator< double > > > const &)\n"
    "    std::vector< std::vector< double > >::vector(std::vector< std::vector< double > >::size_type)\n"
    "    std::vector< std::vector< double > >::vector(std::vector< std::vector< double > >::size_type,std::vector< std::vector< double > >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorVectorDouble_push_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< std::vector< double > > *arg1 = (std::vector< std::vector< double > > *) 0 ;
  std::vector< std::vector< double > >::value_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"x",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:vectorVectorDouble_push_back", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorDouble_push_back" "', argument " "1"" of type '" "std::vector< std::vector< double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< double > > * >(argp1);
  {
    std::vector< double,std::allocator< double > > *ptr = (std::vector< double,std::allocator< double > > *)0;
    res2 = swig::asptr(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vectorVectorDouble_push_back" "', argument " "2"" of type '" "std::vector< std::vector< double > >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorVectorDouble_push_back" "', argument " "2"" of type '" "std::vector< std::vector< double > >::value_type const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->push_back((std::vector< std::vector< double > >::value_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorDouble_front(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::vector< double > > *arg1 = (std::vector< std::vector< double > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< std::vector< double > >::value_type *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorDouble_front" "', argument " "1"" of type '" "std::vector< std::vector< double > > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< double > > * >(argp1);
  result = (std::vector< std::vector< double > >::value_type *) &((std::vector< std::vector< double > > const *)arg1)->front();
  resultobj = swig::from(static_cast< std::vector< double,std::allocator< double > > >(*result));
  (void)swig::container_owner<swig::traits<std::vector< std::vector< double > >::value_type>::category>::back_reference(resultobj, swig_obj[0]);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorDouble_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::vector< double > > *arg1 = (std::vector< std::vector< double > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< std::vector< double > >::value_type *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorDouble_back" "', argument " "1"" of type '" "std::vector< std::vector< double > > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< double > > * >(argp1);
  result = (std::vector< std::vector< double > >::value_type *) &((std::vector< std::vector< double > > const *)arg1)->back();
  resultobj = swig::from(static_cast< std::vector< double,std::allocator< double > > >(*result));
  (void)swig::container_owner<swig::traits<std::vector< std::vector< double > >::value_type>::category>::back_reference(resultobj, swig_obj[0]);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorDouble_assign(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< std::vector< double > > *arg1 = (std::vector< std::vector< double > > *) 0 ;
  std::vector< std::vector< double > >::size_type arg2 ;
  std::vector< std::vector< double > >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"n",  (char *)"x",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:vectorVectorDouble_assign", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorDouble_assign" "', argument " "1"" of type '" "std::vector< std::vector< double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< double > > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorVectorDouble_assign" "', argument " "2"" of type '" "std::vector< std::vector< double > >::size_type""'");
  } 
  arg2 = static_cast< std::vector< std::vector< double > >::size_type >(val2);
  {
    std::vector< double,std::allocator< double > > *ptr = (std::vector< double,std::allocator< double > > *)0;
    res3 = swig::asptr(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "vectorVectorDouble_assign" "', argument " "3"" of type '" "std::vector< std::vector< double > >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorVectorDouble_assign" "', argument " "3"" of type '" "std::vector< std::vector< double > >::value_type const &""'"); 
    }
    arg3 = ptr;
  }
  (arg1)->assign(arg2,(std::vector< std::vector< double > >::value_type const &)*arg3);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorDouble_resize__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::vector< double > > *arg1 = (std::vector< std::vector< double > > *) 0 ;
  std::vector< std::vector< double > >::size_type arg2 ;
  std::vector< std::vector< double > >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorDouble_resize" "', argument " "1"" of type '" "std::vector< std::vector< double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< double > > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorVectorDouble_resize" "', argument " "2"" of type '" "std::vector< std::vector< double > >::size_type""'");
  } 
  arg2 = static_cast< std::vector< std::vector< double > >::size_type >(val2);
  {
    std::vector< double,std::allocator< double > > *ptr = (std::vector< double,std::allocator< double > > *)0;
    res3 = swig::asptr(swig_obj[2], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "vectorVectorDouble_resize" "', argument " "3"" of type '" "std::vector< std::vector< double > >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorVectorDouble_resize" "', argument " "3"" of type '" "std::vector< std::vector< double > >::value_type const &""'"); 
    }
    arg3 = ptr;
  }
  (arg1)->resize(arg2,(std::vector< std::vector< double > >::value_type const &)*arg3);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorDouble_resize(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectorVectorDouble_resize", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_vectorVectorDouble_resize__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = swig::asptr(argv[2], (std::vector< double,std::allocator< double > >**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_vectorVectorDouble_resize__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectorVectorDouble_resize'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< std::vector< double > >::resize(std::vector< std::vector< double > >::size_type)\n"
    "    std::vector< std::vector< double > >::resize(std::vector< std::vector< double > >::size_type,std::vector< std::vector< double > >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorVectorDouble_insert__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::vector< double > > *arg1 = (std::vector< std::vector< double > > *) 0 ;
  std::vector< std::vector< double > >::iterator arg2 ;
  std::vector< std::vector< double > >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  int res3 = SWIG_OLDOBJ ;
  std::vector< std::vector< double > >::iterator result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorDouble_insert" "', argument " "1"" of type '" "std::vector< std::vector< double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< double > > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorVectorDouble_insert" "', argument " "2"" of type '" "std::vector< std::vector< double > >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< std::vector< double > >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< std::vector< double > >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorVectorDouble_insert" "', argument " "2"" of type '" "std::vector< std::vector< double > >::iterator""'");
    }
  }
  {
    std::vector< double,std::allocator< double > > *ptr = (std::vector< double,std::allocator< double > > *)0;
    res3 = swig::asptr(swig_obj[2], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "vectorVectorDouble_insert" "', argument " "3"" of type '" "std::vector< std::vector< double > >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorVectorDouble_insert" "', argument " "3"" of type '" "std::vector< std::vector< double > >::value_type const &""'"); 
    }
    arg3 = ptr;
  }
  result = std_vector_Sl_std_vector_Sl_double_Sg__Sg__insert__SWIG_0(arg1,arg2,(std::vector< double,std::allocator< double > > const &)*arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< std::vector< double > >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorDouble_insert__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::vector< double > > *arg1 = (std::vector< std::vector< double > > *) 0 ;
  std::vector< std::vector< double > >::iterator arg2 ;
  std::vector< std::vector< double > >::size_type arg3 ;
  std::vector< std::vector< double > >::value_type *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  size_t val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorDouble_insert" "', argument " "1"" of type '" "std::vector< std::vector< double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< double > > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorVectorDouble_insert" "', argument " "2"" of type '" "std::vector< std::vector< double > >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< std::vector< double > >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< std::vector< double > >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorVectorDouble_insert" "', argument " "2"" of type '" "std::vector< std::vector< double > >::iterator""'");
    }
  }
  ecode3 = SWIG_AsVal_size_t(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorVectorDouble_insert" "', argument " "3"" of type '" "std::vector< std::vector< double > >::size_type""'");
  } 
  arg3 = static_cast< std::vector< std::vector< double > >::size_type >(val3);
  {
    std::vector< double,std::allocator< double > > *ptr = (std::vector< double,std::allocator< double > > *)0;
    res4 = swig::asptr(swig_obj[3], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "vectorVectorDouble_insert" "', argument " "4"" of type '" "std::vector< std::vector< double > >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorVectorDouble_insert" "', argument " "4"" of type '" "std::vector< std::vector< double > >::value_type const &""'"); 
    }
    arg4 = ptr;
  }
  std_vector_Sl_std_vector_Sl_double_Sg__Sg__insert__SWIG_1(arg1,arg2,arg3,(std::vector< double,std::allocator< double > > const &)*arg4);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res4)) delete arg4;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) delete arg4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorDouble_insert(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectorVectorDouble_insert", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< std::vector< double > >::iterator > *>(iter) != 0));
      if (_v) {
        int res = swig::asptr(argv[2], (std::vector< double,std::allocator< double > >**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_vectorVectorDouble_insert__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< std::vector< double > >::iterator > *>(iter) != 0));
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = swig::asptr(argv[3], (std::vector< double,std::allocator< double > >**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_vectorVectorDouble_insert__SWIG_1(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectorVectorDouble_insert'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< std::vector< double > >::insert(std::vector< std::vector< double > >::iterator,std::vector< std::vector< double > >::value_type const &)\n"
    "    std::vector< std::vector< double > >::insert(std::vector< std::vector< double > >::iterator,std::vector< std::vector< double > >::size_type,std::vector< std::vector< double > >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorVectorDouble_reserve(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< std::vector< double > > *arg1 = (std::vector< std::vector< double > > *) 0 ;
  std::vector< std::vector< double > >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"n",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:vectorVectorDouble_reserve", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorDouble_reserve" "', argument " "1"" of type '" "std::vector< std::vector< double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< double > > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorVectorDouble_reserve" "', argument " "2"" of type '" "std::vector< std::vector< double > >::size_type""'");
  } 
  arg2 = static_cast< std::vector< std::vector< double > >::size_type >(val2);
  (arg1)->reserve(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorDouble_capacity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::vector< double > > *arg1 = (std::vector< std::vector< double > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< std::vector< double > >::size_type result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorDouble_capacity" "', argument " "1"" of type '" "std::vector< std::vector< double > > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< double > > * >(argp1);
  result = ((std::vector< std::vector< double > > const *)arg1)->capacity();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_vectorVectorDouble(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::vector< double > > *arg1 = (std::vector< std::vector< double > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_vectorVectorDouble" "', argument " "1"" of type '" "std::vector< std::vector< double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< double > > * >(argp1);
  {
    try {
      delete arg1; 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *vectorVectorDouble_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *vectorVectorDouble_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_vectorSubtractionHistory_iterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< fastjet::contrib::piranha::SubtractionHistory > *arg1 = (std::vector< fastjet::contrib::piranha::SubtractionHistory > *) 0 ;
  PyObject **arg2 = (PyObject **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  swig::SwigPyIterator *result = 0 ;
  
  arg2 = &swig_obj[0];
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorSubtractionHistory_iterator" "', argument " "1"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory > * >(argp1);
  result = (swig::SwigPyIterator *)std_vector_Sl_fastjet_contrib_piranha_SubtractionHistory_Sg__iterator(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorSubtractionHistory___nonzero__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< fastjet::contrib::piranha::SubtractionHistory > *arg1 = (std::vector< fastjet::contrib::piranha::SubtractionHistory > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorSubtractionHistory___nonzero__" "', argument " "1"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory > * >(argp1);
  result = (bool)std_vector_Sl_fastjet_contrib_piranha_SubtractionHistory_Sg____nonzero__((std::vector< fastjet::contrib::piranha::SubtractionHistory > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorSubtractionHistory___bool__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< fastjet::contrib::piranha::SubtractionHistory > *arg1 = (std::vector< fastjet::contrib::piranha::SubtractionHistory > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorSubtractionHistory___bool__" "', argument " "1"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory > * >(argp1);
  result = (bool)std_vector_Sl_fastjet_contrib_piranha_SubtractionHistory_Sg____bool__((std::vector< fastjet::contrib::piranha::SubtractionHistory > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorSubtractionHistory___len__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< fastjet::contrib::piranha::SubtractionHistory > *arg1 = (std::vector< fastjet::contrib::piranha::SubtractionHistory > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory >::size_type result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorSubtractionHistory___len__" "', argument " "1"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory > * >(argp1);
  result = std_vector_Sl_fastjet_contrib_piranha_SubtractionHistory_Sg____len__((std::vector< fastjet::contrib::piranha::SubtractionHistory > const *)arg1);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorSubtractionHistory___getslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< fastjet::contrib::piranha::SubtractionHistory > *arg1 = (std::vector< fastjet::contrib::piranha::SubtractionHistory > *) 0 ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory >::difference_type arg2 ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"i",  (char *)"j",  NULL 
  };
  std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > > *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:vectorSubtractionHistory___getslice__", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorSubtractionHistory___getslice__" "', argument " "1"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorSubtractionHistory___getslice__" "', argument " "2"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorSubtractionHistory___getslice__" "', argument " "3"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory >::difference_type >(val3);
  try {
    result = (std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > > *)std_vector_Sl_fastjet_contrib_piranha_SubtractionHistory_Sg____getslice__(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorSubtractionHistory___setslice____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< fastjet::contrib::piranha::SubtractionHistory > *arg1 = (std::vector< fastjet::contrib::piranha::SubtractionHistory > *) 0 ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory >::difference_type arg2 ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorSubtractionHistory___setslice__" "', argument " "1"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorSubtractionHistory___setslice__" "', argument " "2"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorSubtractionHistory___setslice__" "', argument " "3"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory >::difference_type >(val3);
  try {
    std_vector_Sl_fastjet_contrib_piranha_SubtractionHistory_Sg____setslice____SWIG_0(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorSubtractionHistory___setslice____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< fastjet::contrib::piranha::SubtractionHistory > *arg1 = (std::vector< fastjet::contrib::piranha::SubtractionHistory > *) 0 ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory >::difference_type arg2 ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory >::difference_type arg3 ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > > *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorSubtractionHistory___setslice__" "', argument " "1"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorSubtractionHistory___setslice__" "', argument " "2"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorSubtractionHistory___setslice__" "', argument " "3"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory >::difference_type >(val3);
  {
    std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > > *ptr = (std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > > *)0;
    res4 = swig::asptr(swig_obj[3], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "vectorSubtractionHistory___setslice__" "', argument " "4"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorSubtractionHistory___setslice__" "', argument " "4"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > > const &""'"); 
    }
    arg4 = ptr;
  }
  try {
    std_vector_Sl_fastjet_contrib_piranha_SubtractionHistory_Sg____setslice____SWIG_1(arg1,arg2,arg3,(std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > > const &)*arg4);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res4)) delete arg4;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) delete arg4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorSubtractionHistory___setslice__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectorSubtractionHistory___setslice__", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_vectorSubtractionHistory___setslice____SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = swig::asptr(argv[3], (std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > >**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_vectorSubtractionHistory___setslice____SWIG_1(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectorSubtractionHistory___setslice__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< fastjet::contrib::piranha::SubtractionHistory >::__setslice__(std::vector< fastjet::contrib::piranha::SubtractionHistory >::difference_type,std::vector< fastjet::contrib::piranha::SubtractionHistory >::difference_type)\n"
    "    std::vector< fastjet::contrib::piranha::SubtractionHistory >::__setslice__(std::vector< fastjet::contrib::piranha::SubtractionHistory >::difference_type,std::vector< fastjet::contrib::piranha::SubtractionHistory >::difference_type,std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > > const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorSubtractionHistory___delslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< fastjet::contrib::piranha::SubtractionHistory > *arg1 = (std::vector< fastjet::contrib::piranha::SubtractionHistory > *) 0 ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory >::difference_type arg2 ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"i",  (char *)"j",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:vectorSubtractionHistory___delslice__", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorSubtractionHistory___delslice__" "', argument " "1"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorSubtractionHistory___delslice__" "', argument " "2"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorSubtractionHistory___delslice__" "', argument " "3"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory >::difference_type >(val3);
  try {
    std_vector_Sl_fastjet_contrib_piranha_SubtractionHistory_Sg____delslice__(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorSubtractionHistory___delitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< fastjet::contrib::piranha::SubtractionHistory > *arg1 = (std::vector< fastjet::contrib::piranha::SubtractionHistory > *) 0 ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorSubtractionHistory___delitem__" "', argument " "1"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorSubtractionHistory___delitem__" "', argument " "2"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory >::difference_type >(val2);
  try {
    std_vector_Sl_fastjet_contrib_piranha_SubtractionHistory_Sg____delitem____SWIG_0(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorSubtractionHistory___getitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< fastjet::contrib::piranha::SubtractionHistory > *arg1 = (std::vector< fastjet::contrib::piranha::SubtractionHistory > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > > *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorSubtractionHistory___getitem__" "', argument " "1"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory > * >(argp1);
  {
    if (!PySlice_Check(swig_obj[1])) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorSubtractionHistory___getitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) swig_obj[1];
  }
  try {
    result = (std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > > *)std_vector_Sl_fastjet_contrib_piranha_SubtractionHistory_Sg____getitem____SWIG_0(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorSubtractionHistory___setitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< fastjet::contrib::piranha::SubtractionHistory > *arg1 = (std::vector< fastjet::contrib::piranha::SubtractionHistory > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorSubtractionHistory___setitem__" "', argument " "1"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory > * >(argp1);
  {
    if (!PySlice_Check(swig_obj[1])) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorSubtractionHistory___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) swig_obj[1];
  }
  {
    std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > > *ptr = (std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > > *)0;
    res3 = swig::asptr(swig_obj[2], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "vectorSubtractionHistory___setitem__" "', argument " "3"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorSubtractionHistory___setitem__" "', argument " "3"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > > const &""'"); 
    }
    arg3 = ptr;
  }
  try {
    std_vector_Sl_fastjet_contrib_piranha_SubtractionHistory_Sg____setitem____SWIG_0(arg1,arg2,(std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorSubtractionHistory___setitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< fastjet::contrib::piranha::SubtractionHistory > *arg1 = (std::vector< fastjet::contrib::piranha::SubtractionHistory > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorSubtractionHistory___setitem__" "', argument " "1"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory > * >(argp1);
  {
    if (!PySlice_Check(swig_obj[1])) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorSubtractionHistory___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) swig_obj[1];
  }
  try {
    std_vector_Sl_fastjet_contrib_piranha_SubtractionHistory_Sg____setitem____SWIG_1(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorSubtractionHistory___delitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< fastjet::contrib::piranha::SubtractionHistory > *arg1 = (std::vector< fastjet::contrib::piranha::SubtractionHistory > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorSubtractionHistory___delitem__" "', argument " "1"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory > * >(argp1);
  {
    if (!PySlice_Check(swig_obj[1])) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorSubtractionHistory___delitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) swig_obj[1];
  }
  try {
    std_vector_Sl_fastjet_contrib_piranha_SubtractionHistory_Sg____delitem____SWIG_1(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorSubtractionHistory___delitem__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectorSubtractionHistory___delitem__", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_vectorSubtractionHistory___delitem____SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_vectorSubtractionHistory___delitem____SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectorSubtractionHistory___delitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< fastjet::contrib::piranha::SubtractionHistory >::__delitem__(std::vector< fastjet::contrib::piranha::SubtractionHistory >::difference_type)\n"
    "    std::vector< fastjet::contrib::piranha::SubtractionHistory >::__delitem__(PySliceObject *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorSubtractionHistory___getitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< fastjet::contrib::piranha::SubtractionHistory > *arg1 = (std::vector< fastjet::contrib::piranha::SubtractionHistory > *) 0 ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorSubtractionHistory___getitem__" "', argument " "1"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorSubtractionHistory___getitem__" "', argument " "2"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory >::difference_type >(val2);
  try {
    result = (std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type *) &std_vector_Sl_fastjet_contrib_piranha_SubtractionHistory_Sg____getitem____SWIG_1((std::vector< fastjet::contrib::piranha::SubtractionHistory > const *)arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__SubtractionHistory, 0 |  0 );
  (void)swig::container_owner<swig::traits<std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type>::category>::back_reference(resultobj, swig_obj[0]);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorSubtractionHistory___getitem__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectorSubtractionHistory___getitem__", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_vectorSubtractionHistory___getitem____SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_vectorSubtractionHistory___getitem____SWIG_1(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectorSubtractionHistory___getitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< fastjet::contrib::piranha::SubtractionHistory >::__getitem__(PySliceObject *)\n"
    "    std::vector< fastjet::contrib::piranha::SubtractionHistory >::__getitem__(std::vector< fastjet::contrib::piranha::SubtractionHistory >::difference_type) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorSubtractionHistory___setitem____SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< fastjet::contrib::piranha::SubtractionHistory > *arg1 = (std::vector< fastjet::contrib::piranha::SubtractionHistory > *) 0 ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory >::difference_type arg2 ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorSubtractionHistory___setitem__" "', argument " "1"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorSubtractionHistory___setitem__" "', argument " "2"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory >::difference_type >(val2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_fastjet__contrib__piranha__SubtractionHistory,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "vectorSubtractionHistory___setitem__" "', argument " "3"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorSubtractionHistory___setitem__" "', argument " "3"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type const &""'"); 
  }
  arg3 = reinterpret_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type * >(argp3);
  try {
    std_vector_Sl_fastjet_contrib_piranha_SubtractionHistory_Sg____setitem____SWIG_2(arg1,arg2,(fastjet::contrib::piranha::SubtractionHistory const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorSubtractionHistory___setitem__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectorSubtractionHistory___setitem__", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_vectorSubtractionHistory___setitem____SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        int res = swig::asptr(argv[2], (std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > >**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_vectorSubtractionHistory___setitem____SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_fastjet__contrib__piranha__SubtractionHistory, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_vectorSubtractionHistory___setitem____SWIG_2(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectorSubtractionHistory___setitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< fastjet::contrib::piranha::SubtractionHistory >::__setitem__(PySliceObject *,std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > > const &)\n"
    "    std::vector< fastjet::contrib::piranha::SubtractionHistory >::__setitem__(PySliceObject *)\n"
    "    std::vector< fastjet::contrib::piranha::SubtractionHistory >::__setitem__(std::vector< fastjet::contrib::piranha::SubtractionHistory >::difference_type,std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorSubtractionHistory_pop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< fastjet::contrib::piranha::SubtractionHistory > *arg1 = (std::vector< fastjet::contrib::piranha::SubtractionHistory > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorSubtractionHistory_pop" "', argument " "1"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory > * >(argp1);
  try {
    result = std_vector_Sl_fastjet_contrib_piranha_SubtractionHistory_Sg__pop(arg1);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  resultobj = SWIG_NewPointerObj((new std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type(static_cast< const std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type& >(result))), SWIGTYPE_p_fastjet__contrib__piranha__SubtractionHistory, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorSubtractionHistory_append(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< fastjet::contrib::piranha::SubtractionHistory > *arg1 = (std::vector< fastjet::contrib::piranha::SubtractionHistory > *) 0 ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"x",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:vectorSubtractionHistory_append", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorSubtractionHistory_append" "', argument " "1"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_fastjet__contrib__piranha__SubtractionHistory,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vectorSubtractionHistory_append" "', argument " "2"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorSubtractionHistory_append" "', argument " "2"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type const &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type * >(argp2);
  std_vector_Sl_fastjet_contrib_piranha_SubtractionHistory_Sg__append(arg1,(fastjet::contrib::piranha::SubtractionHistory const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_vectorSubtractionHistory__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  std::vector< fastjet::contrib::piranha::SubtractionHistory > *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (std::vector< fastjet::contrib::piranha::SubtractionHistory > *)new std::vector< fastjet::contrib::piranha::SubtractionHistory >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_vectorSubtractionHistory__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< fastjet::contrib::piranha::SubtractionHistory > *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory > *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > > *ptr = (std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > > *)0;
    res1 = swig::asptr(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_vectorSubtractionHistory" "', argument " "1"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_vectorSubtractionHistory" "', argument " "1"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory > const &""'"); 
    }
    arg1 = ptr;
  }
  result = (std::vector< fastjet::contrib::piranha::SubtractionHistory > *)new std::vector< fastjet::contrib::piranha::SubtractionHistory >((std::vector< fastjet::contrib::piranha::SubtractionHistory > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorSubtractionHistory_empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< fastjet::contrib::piranha::SubtractionHistory > *arg1 = (std::vector< fastjet::contrib::piranha::SubtractionHistory > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorSubtractionHistory_empty" "', argument " "1"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory > * >(argp1);
  result = (bool)((std::vector< fastjet::contrib::piranha::SubtractionHistory > const *)arg1)->empty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorSubtractionHistory_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< fastjet::contrib::piranha::SubtractionHistory > *arg1 = (std::vector< fastjet::contrib::piranha::SubtractionHistory > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory >::size_type result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorSubtractionHistory_size" "', argument " "1"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory > * >(argp1);
  result = ((std::vector< fastjet::contrib::piranha::SubtractionHistory > const *)arg1)->size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorSubtractionHistory_swap(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< fastjet::contrib::piranha::SubtractionHistory > *arg1 = (std::vector< fastjet::contrib::piranha::SubtractionHistory > *) 0 ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"v",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:vectorSubtractionHistory_swap", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorSubtractionHistory_swap" "', argument " "1"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vectorSubtractionHistory_swap" "', argument " "2"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorSubtractionHistory_swap" "', argument " "2"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory > &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory > * >(argp2);
  (arg1)->swap(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorSubtractionHistory_begin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< fastjet::contrib::piranha::SubtractionHistory > *arg1 = (std::vector< fastjet::contrib::piranha::SubtractionHistory > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorSubtractionHistory_begin" "', argument " "1"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory > * >(argp1);
  result = (arg1)->begin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorSubtractionHistory_end(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< fastjet::contrib::piranha::SubtractionHistory > *arg1 = (std::vector< fastjet::contrib::piranha::SubtractionHistory > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorSubtractionHistory_end" "', argument " "1"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory > * >(argp1);
  result = (arg1)->end();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorSubtractionHistory_rbegin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< fastjet::contrib::piranha::SubtractionHistory > *arg1 = (std::vector< fastjet::contrib::piranha::SubtractionHistory > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory >::reverse_iterator result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorSubtractionHistory_rbegin" "', argument " "1"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory > * >(argp1);
  result = (arg1)->rbegin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< fastjet::contrib::piranha::SubtractionHistory >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorSubtractionHistory_rend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< fastjet::contrib::piranha::SubtractionHistory > *arg1 = (std::vector< fastjet::contrib::piranha::SubtractionHistory > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory >::reverse_iterator result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorSubtractionHistory_rend" "', argument " "1"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory > * >(argp1);
  result = (arg1)->rend();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< fastjet::contrib::piranha::SubtractionHistory >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorSubtractionHistory_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< fastjet::contrib::piranha::SubtractionHistory > *arg1 = (std::vector< fastjet::contrib::piranha::SubtractionHistory > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorSubtractionHistory_clear" "', argument " "1"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory > * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorSubtractionHistory_get_allocator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< fastjet::contrib::piranha::SubtractionHistory > *arg1 = (std::vector< fastjet::contrib::piranha::SubtractionHistory > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  SwigValueWrapper< std::allocator< fastjet::contrib::piranha::SubtractionHistory > > result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorSubtractionHistory_get_allocator" "', argument " "1"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory > * >(argp1);
  result = ((std::vector< fastjet::contrib::piranha::SubtractionHistory > const *)arg1)->get_allocator();
  resultobj = SWIG_NewPointerObj((new std::vector< fastjet::contrib::piranha::SubtractionHistory >::allocator_type(static_cast< const std::vector< fastjet::contrib::piranha::SubtractionHistory >::allocator_type& >(result))), SWIGTYPE_p_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_vectorSubtractionHistory__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< fastjet::contrib::piranha::SubtractionHistory >::size_type arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory > *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_vectorSubtractionHistory" "', argument " "1"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory >::size_type""'");
  } 
  arg1 = static_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory >::size_type >(val1);
  result = (std::vector< fastjet::contrib::piranha::SubtractionHistory > *)new std::vector< fastjet::contrib::piranha::SubtractionHistory >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorSubtractionHistory_pop_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< fastjet::contrib::piranha::SubtractionHistory > *arg1 = (std::vector< fastjet::contrib::piranha::SubtractionHistory > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorSubtractionHistory_pop_back" "', argument " "1"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory > * >(argp1);
  (arg1)->pop_back();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorSubtractionHistory_resize__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< fastjet::contrib::piranha::SubtractionHistory > *arg1 = (std::vector< fastjet::contrib::piranha::SubtractionHistory > *) 0 ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorSubtractionHistory_resize" "', argument " "1"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorSubtractionHistory_resize" "', argument " "2"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory >::size_type""'");
  } 
  arg2 = static_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory >::size_type >(val2);
  (arg1)->resize(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorSubtractionHistory_erase__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< fastjet::contrib::piranha::SubtractionHistory > *arg1 = (std::vector< fastjet::contrib::piranha::SubtractionHistory > *) 0 ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorSubtractionHistory_erase" "', argument " "1"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorSubtractionHistory_erase" "', argument " "2"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorSubtractionHistory_erase" "', argument " "2"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator""'");
    }
  }
  result = std_vector_Sl_fastjet_contrib_piranha_SubtractionHistory_Sg__erase__SWIG_0(arg1,arg2);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorSubtractionHistory_erase__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< fastjet::contrib::piranha::SubtractionHistory > *arg1 = (std::vector< fastjet::contrib::piranha::SubtractionHistory > *) 0 ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator arg2 ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  swig::SwigPyIterator *iter3 = 0 ;
  int res3 ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorSubtractionHistory_erase" "', argument " "1"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorSubtractionHistory_erase" "', argument " "2"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorSubtractionHistory_erase" "', argument " "2"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator""'");
    }
  }
  res3 = SWIG_ConvertPtr(swig_obj[2], SWIG_as_voidptrptr(&iter3), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res3) || !iter3) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorSubtractionHistory_erase" "', argument " "3"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator > *>(iter3);
    if (iter_t) {
      arg3 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorSubtractionHistory_erase" "', argument " "3"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator""'");
    }
  }
  result = std_vector_Sl_fastjet_contrib_piranha_SubtractionHistory_Sg__erase__SWIG_1(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorSubtractionHistory_erase(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectorSubtractionHistory_erase", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator > *>(iter) != 0));
      if (_v) {
        return _wrap_vectorSubtractionHistory_erase__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator > *>(iter) != 0));
      if (_v) {
        swig::SwigPyIterator *iter = 0;
        int res = SWIG_ConvertPtr(argv[2], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
        _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator > *>(iter) != 0));
        if (_v) {
          return _wrap_vectorSubtractionHistory_erase__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectorSubtractionHistory_erase'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< fastjet::contrib::piranha::SubtractionHistory >::erase(std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator)\n"
    "    std::vector< fastjet::contrib::piranha::SubtractionHistory >::erase(std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator,std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_vectorSubtractionHistory__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< fastjet::contrib::piranha::SubtractionHistory >::size_type arg1 ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type *arg2 = 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory > *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_vectorSubtractionHistory" "', argument " "1"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory >::size_type""'");
  } 
  arg1 = static_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory >::size_type >(val1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_fastjet__contrib__piranha__SubtractionHistory,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_vectorSubtractionHistory" "', argument " "2"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_vectorSubtractionHistory" "', argument " "2"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type const &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type * >(argp2);
  result = (std::vector< fastjet::contrib::piranha::SubtractionHistory > *)new std::vector< fastjet::contrib::piranha::SubtractionHistory >(arg1,(std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_vectorSubtractionHistory(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_vectorSubtractionHistory", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_vectorSubtractionHistory__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_vectorSubtractionHistory__SWIG_2(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_vectorSubtractionHistory__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_fastjet__contrib__piranha__SubtractionHistory, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_vectorSubtractionHistory__SWIG_3(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_vectorSubtractionHistory'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< fastjet::contrib::piranha::SubtractionHistory >::vector()\n"
    "    std::vector< fastjet::contrib::piranha::SubtractionHistory >::vector(std::vector< fastjet::contrib::piranha::SubtractionHistory > const &)\n"
    "    std::vector< fastjet::contrib::piranha::SubtractionHistory >::vector(std::vector< fastjet::contrib::piranha::SubtractionHistory >::size_type)\n"
    "    std::vector< fastjet::contrib::piranha::SubtractionHistory >::vector(std::vector< fastjet::contrib::piranha::SubtractionHistory >::size_type,std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorSubtractionHistory_push_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< fastjet::contrib::piranha::SubtractionHistory > *arg1 = (std::vector< fastjet::contrib::piranha::SubtractionHistory > *) 0 ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"x",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:vectorSubtractionHistory_push_back", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorSubtractionHistory_push_back" "', argument " "1"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_fastjet__contrib__piranha__SubtractionHistory,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vectorSubtractionHistory_push_back" "', argument " "2"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorSubtractionHistory_push_back" "', argument " "2"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type const &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type * >(argp2);
  (arg1)->push_back((std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorSubtractionHistory_front(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< fastjet::contrib::piranha::SubtractionHistory > *arg1 = (std::vector< fastjet::contrib::piranha::SubtractionHistory > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorSubtractionHistory_front" "', argument " "1"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory > * >(argp1);
  result = (std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type *) &((std::vector< fastjet::contrib::piranha::SubtractionHistory > const *)arg1)->front();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__SubtractionHistory, 0 |  0 );
  (void)swig::container_owner<swig::traits<std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type>::category>::back_reference(resultobj, swig_obj[0]);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorSubtractionHistory_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< fastjet::contrib::piranha::SubtractionHistory > *arg1 = (std::vector< fastjet::contrib::piranha::SubtractionHistory > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorSubtractionHistory_back" "', argument " "1"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory > * >(argp1);
  result = (std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type *) &((std::vector< fastjet::contrib::piranha::SubtractionHistory > const *)arg1)->back();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__SubtractionHistory, 0 |  0 );
  (void)swig::container_owner<swig::traits<std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type>::category>::back_reference(resultobj, swig_obj[0]);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorSubtractionHistory_assign(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< fastjet::contrib::piranha::SubtractionHistory > *arg1 = (std::vector< fastjet::contrib::piranha::SubtractionHistory > *) 0 ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory >::size_type arg2 ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"n",  (char *)"x",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:vectorSubtractionHistory_assign", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorSubtractionHistory_assign" "', argument " "1"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorSubtractionHistory_assign" "', argument " "2"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory >::size_type""'");
  } 
  arg2 = static_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory >::size_type >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_fastjet__contrib__piranha__SubtractionHistory,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "vectorSubtractionHistory_assign" "', argument " "3"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorSubtractionHistory_assign" "', argument " "3"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type const &""'"); 
  }
  arg3 = reinterpret_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type * >(argp3);
  (arg1)->assign(arg2,(std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorSubtractionHistory_resize__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< fastjet::contrib::piranha::SubtractionHistory > *arg1 = (std::vector< fastjet::contrib::piranha::SubtractionHistory > *) 0 ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory >::size_type arg2 ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorSubtractionHistory_resize" "', argument " "1"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorSubtractionHistory_resize" "', argument " "2"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory >::size_type""'");
  } 
  arg2 = static_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory >::size_type >(val2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_fastjet__contrib__piranha__SubtractionHistory,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "vectorSubtractionHistory_resize" "', argument " "3"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorSubtractionHistory_resize" "', argument " "3"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type const &""'"); 
  }
  arg3 = reinterpret_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type * >(argp3);
  (arg1)->resize(arg2,(std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorSubtractionHistory_resize(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectorSubtractionHistory_resize", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_vectorSubtractionHistory_resize__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_fastjet__contrib__piranha__SubtractionHistory, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_vectorSubtractionHistory_resize__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectorSubtractionHistory_resize'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< fastjet::contrib::piranha::SubtractionHistory >::resize(std::vector< fastjet::contrib::piranha::SubtractionHistory >::size_type)\n"
    "    std::vector< fastjet::contrib::piranha::SubtractionHistory >::resize(std::vector< fastjet::contrib::piranha::SubtractionHistory >::size_type,std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorSubtractionHistory_insert__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< fastjet::contrib::piranha::SubtractionHistory > *arg1 = (std::vector< fastjet::contrib::piranha::SubtractionHistory > *) 0 ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator arg2 ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorSubtractionHistory_insert" "', argument " "1"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorSubtractionHistory_insert" "', argument " "2"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorSubtractionHistory_insert" "', argument " "2"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator""'");
    }
  }
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_fastjet__contrib__piranha__SubtractionHistory,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "vectorSubtractionHistory_insert" "', argument " "3"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorSubtractionHistory_insert" "', argument " "3"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type const &""'"); 
  }
  arg3 = reinterpret_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type * >(argp3);
  result = std_vector_Sl_fastjet_contrib_piranha_SubtractionHistory_Sg__insert__SWIG_0(arg1,arg2,(fastjet::contrib::piranha::SubtractionHistory const &)*arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorSubtractionHistory_insert__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< fastjet::contrib::piranha::SubtractionHistory > *arg1 = (std::vector< fastjet::contrib::piranha::SubtractionHistory > *) 0 ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator arg2 ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory >::size_type arg3 ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  size_t val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorSubtractionHistory_insert" "', argument " "1"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorSubtractionHistory_insert" "', argument " "2"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorSubtractionHistory_insert" "', argument " "2"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator""'");
    }
  }
  ecode3 = SWIG_AsVal_size_t(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorSubtractionHistory_insert" "', argument " "3"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory >::size_type""'");
  } 
  arg3 = static_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory >::size_type >(val3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_fastjet__contrib__piranha__SubtractionHistory,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "vectorSubtractionHistory_insert" "', argument " "4"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorSubtractionHistory_insert" "', argument " "4"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type const &""'"); 
  }
  arg4 = reinterpret_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type * >(argp4);
  std_vector_Sl_fastjet_contrib_piranha_SubtractionHistory_Sg__insert__SWIG_1(arg1,arg2,arg3,(fastjet::contrib::piranha::SubtractionHistory const &)*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorSubtractionHistory_insert(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectorSubtractionHistory_insert", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator > *>(iter) != 0));
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_fastjet__contrib__piranha__SubtractionHistory, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_vectorSubtractionHistory_insert__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator > *>(iter) != 0));
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_fastjet__contrib__piranha__SubtractionHistory, SWIG_POINTER_NO_NULL | 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_vectorSubtractionHistory_insert__SWIG_1(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectorSubtractionHistory_insert'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< fastjet::contrib::piranha::SubtractionHistory >::insert(std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator,std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type const &)\n"
    "    std::vector< fastjet::contrib::piranha::SubtractionHistory >::insert(std::vector< fastjet::contrib::piranha::SubtractionHistory >::iterator,std::vector< fastjet::contrib::piranha::SubtractionHistory >::size_type,std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorSubtractionHistory_reserve(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< fastjet::contrib::piranha::SubtractionHistory > *arg1 = (std::vector< fastjet::contrib::piranha::SubtractionHistory > *) 0 ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"n",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:vectorSubtractionHistory_reserve", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorSubtractionHistory_reserve" "', argument " "1"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorSubtractionHistory_reserve" "', argument " "2"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory >::size_type""'");
  } 
  arg2 = static_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory >::size_type >(val2);
  (arg1)->reserve(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorSubtractionHistory_capacity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< fastjet::contrib::piranha::SubtractionHistory > *arg1 = (std::vector< fastjet::contrib::piranha::SubtractionHistory > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory >::size_type result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorSubtractionHistory_capacity" "', argument " "1"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory > * >(argp1);
  result = ((std::vector< fastjet::contrib::piranha::SubtractionHistory > const *)arg1)->capacity();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_vectorSubtractionHistory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< fastjet::contrib::piranha::SubtractionHistory > *arg1 = (std::vector< fastjet::contrib::piranha::SubtractionHistory > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_vectorSubtractionHistory" "', argument " "1"" of type '" "std::vector< fastjet::contrib::piranha::SubtractionHistory > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory > * >(argp1);
  {
    try {
      delete arg1; 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *vectorSubtractionHistory_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *vectorSubtractionHistory_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_vectorVectorPseudoJet_iterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::vector< fastjet::PseudoJet > > *arg1 = (std::vector< std::vector< fastjet::PseudoJet > > *) 0 ;
  PyObject **arg2 = (PyObject **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  swig::SwigPyIterator *result = 0 ;
  
  arg2 = &swig_obj[0];
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorPseudoJet_iterator" "', argument " "1"" of type '" "std::vector< std::vector< fastjet::PseudoJet > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< fastjet::PseudoJet > > * >(argp1);
  result = (swig::SwigPyIterator *)std_vector_Sl_std_vector_Sl_fastjet_PseudoJet_Sg__Sg__iterator(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorPseudoJet___nonzero__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::vector< fastjet::PseudoJet > > *arg1 = (std::vector< std::vector< fastjet::PseudoJet > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorPseudoJet___nonzero__" "', argument " "1"" of type '" "std::vector< std::vector< fastjet::PseudoJet > > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< fastjet::PseudoJet > > * >(argp1);
  result = (bool)std_vector_Sl_std_vector_Sl_fastjet_PseudoJet_Sg__Sg____nonzero__((std::vector< std::vector< fastjet::PseudoJet > > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorPseudoJet___bool__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::vector< fastjet::PseudoJet > > *arg1 = (std::vector< std::vector< fastjet::PseudoJet > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorPseudoJet___bool__" "', argument " "1"" of type '" "std::vector< std::vector< fastjet::PseudoJet > > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< fastjet::PseudoJet > > * >(argp1);
  result = (bool)std_vector_Sl_std_vector_Sl_fastjet_PseudoJet_Sg__Sg____bool__((std::vector< std::vector< fastjet::PseudoJet > > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorPseudoJet___len__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::vector< fastjet::PseudoJet > > *arg1 = (std::vector< std::vector< fastjet::PseudoJet > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< std::vector< fastjet::PseudoJet > >::size_type result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorPseudoJet___len__" "', argument " "1"" of type '" "std::vector< std::vector< fastjet::PseudoJet > > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< fastjet::PseudoJet > > * >(argp1);
  result = std_vector_Sl_std_vector_Sl_fastjet_PseudoJet_Sg__Sg____len__((std::vector< std::vector< fastjet::PseudoJet > > const *)arg1);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorPseudoJet___getslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< std::vector< fastjet::PseudoJet > > *arg1 = (std::vector< std::vector< fastjet::PseudoJet > > *) 0 ;
  std::vector< std::vector< fastjet::PseudoJet > >::difference_type arg2 ;
  std::vector< std::vector< fastjet::PseudoJet > >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"i",  (char *)"j",  NULL 
  };
  std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > > *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:vectorVectorPseudoJet___getslice__", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorPseudoJet___getslice__" "', argument " "1"" of type '" "std::vector< std::vector< fastjet::PseudoJet > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< fastjet::PseudoJet > > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorVectorPseudoJet___getslice__" "', argument " "2"" of type '" "std::vector< std::vector< fastjet::PseudoJet > >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< std::vector< fastjet::PseudoJet > >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorVectorPseudoJet___getslice__" "', argument " "3"" of type '" "std::vector< std::vector< fastjet::PseudoJet > >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< std::vector< fastjet::PseudoJet > >::difference_type >(val3);
  try {
    result = (std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > > *)std_vector_Sl_std_vector_Sl_fastjet_PseudoJet_Sg__Sg____getslice__(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorPseudoJet___setslice____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::vector< fastjet::PseudoJet > > *arg1 = (std::vector< std::vector< fastjet::PseudoJet > > *) 0 ;
  std::vector< std::vector< fastjet::PseudoJet > >::difference_type arg2 ;
  std::vector< std::vector< fastjet::PseudoJet > >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorPseudoJet___setslice__" "', argument " "1"" of type '" "std::vector< std::vector< fastjet::PseudoJet > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< fastjet::PseudoJet > > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorVectorPseudoJet___setslice__" "', argument " "2"" of type '" "std::vector< std::vector< fastjet::PseudoJet > >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< std::vector< fastjet::PseudoJet > >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorVectorPseudoJet___setslice__" "', argument " "3"" of type '" "std::vector< std::vector< fastjet::PseudoJet > >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< std::vector< fastjet::PseudoJet > >::difference_type >(val3);
  try {
    std_vector_Sl_std_vector_Sl_fastjet_PseudoJet_Sg__Sg____setslice____SWIG_0(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorPseudoJet___setslice____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::vector< fastjet::PseudoJet > > *arg1 = (std::vector< std::vector< fastjet::PseudoJet > > *) 0 ;
  std::vector< std::vector< fastjet::PseudoJet > >::difference_type arg2 ;
  std::vector< std::vector< fastjet::PseudoJet > >::difference_type arg3 ;
  std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > > *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorPseudoJet___setslice__" "', argument " "1"" of type '" "std::vector< std::vector< fastjet::PseudoJet > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< fastjet::PseudoJet > > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorVectorPseudoJet___setslice__" "', argument " "2"" of type '" "std::vector< std::vector< fastjet::PseudoJet > >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< std::vector< fastjet::PseudoJet > >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorVectorPseudoJet___setslice__" "', argument " "3"" of type '" "std::vector< std::vector< fastjet::PseudoJet > >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< std::vector< fastjet::PseudoJet > >::difference_type >(val3);
  {
    std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > > *ptr = (std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > > *)0;
    res4 = swig::asptr(swig_obj[3], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "vectorVectorPseudoJet___setslice__" "', argument " "4"" of type '" "std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorVectorPseudoJet___setslice__" "', argument " "4"" of type '" "std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > > const &""'"); 
    }
    arg4 = ptr;
  }
  try {
    std_vector_Sl_std_vector_Sl_fastjet_PseudoJet_Sg__Sg____setslice____SWIG_1(arg1,arg2,arg3,(std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > > const &)*arg4);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res4)) delete arg4;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) delete arg4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorPseudoJet___setslice__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectorVectorPseudoJet___setslice__", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_vectorVectorPseudoJet___setslice____SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = swig::asptr(argv[3], (std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > >**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_vectorVectorPseudoJet___setslice____SWIG_1(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectorVectorPseudoJet___setslice__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< std::vector< fastjet::PseudoJet > >::__setslice__(std::vector< std::vector< fastjet::PseudoJet > >::difference_type,std::vector< std::vector< fastjet::PseudoJet > >::difference_type)\n"
    "    std::vector< std::vector< fastjet::PseudoJet > >::__setslice__(std::vector< std::vector< fastjet::PseudoJet > >::difference_type,std::vector< std::vector< fastjet::PseudoJet > >::difference_type,std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > > const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorVectorPseudoJet___delslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< std::vector< fastjet::PseudoJet > > *arg1 = (std::vector< std::vector< fastjet::PseudoJet > > *) 0 ;
  std::vector< std::vector< fastjet::PseudoJet > >::difference_type arg2 ;
  std::vector< std::vector< fastjet::PseudoJet > >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"i",  (char *)"j",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:vectorVectorPseudoJet___delslice__", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorPseudoJet___delslice__" "', argument " "1"" of type '" "std::vector< std::vector< fastjet::PseudoJet > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< fastjet::PseudoJet > > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorVectorPseudoJet___delslice__" "', argument " "2"" of type '" "std::vector< std::vector< fastjet::PseudoJet > >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< std::vector< fastjet::PseudoJet > >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorVectorPseudoJet___delslice__" "', argument " "3"" of type '" "std::vector< std::vector< fastjet::PseudoJet > >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< std::vector< fastjet::PseudoJet > >::difference_type >(val3);
  try {
    std_vector_Sl_std_vector_Sl_fastjet_PseudoJet_Sg__Sg____delslice__(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorPseudoJet___delitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::vector< fastjet::PseudoJet > > *arg1 = (std::vector< std::vector< fastjet::PseudoJet > > *) 0 ;
  std::vector< std::vector< fastjet::PseudoJet > >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorPseudoJet___delitem__" "', argument " "1"" of type '" "std::vector< std::vector< fastjet::PseudoJet > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< fastjet::PseudoJet > > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorVectorPseudoJet___delitem__" "', argument " "2"" of type '" "std::vector< std::vector< fastjet::PseudoJet > >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< std::vector< fastjet::PseudoJet > >::difference_type >(val2);
  try {
    std_vector_Sl_std_vector_Sl_fastjet_PseudoJet_Sg__Sg____delitem____SWIG_0(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorPseudoJet___getitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::vector< fastjet::PseudoJet > > *arg1 = (std::vector< std::vector< fastjet::PseudoJet > > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > > *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorPseudoJet___getitem__" "', argument " "1"" of type '" "std::vector< std::vector< fastjet::PseudoJet > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< fastjet::PseudoJet > > * >(argp1);
  {
    if (!PySlice_Check(swig_obj[1])) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorVectorPseudoJet___getitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) swig_obj[1];
  }
  try {
    result = (std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > > *)std_vector_Sl_std_vector_Sl_fastjet_PseudoJet_Sg__Sg____getitem____SWIG_0(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorPseudoJet___setitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::vector< fastjet::PseudoJet > > *arg1 = (std::vector< std::vector< fastjet::PseudoJet > > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorPseudoJet___setitem__" "', argument " "1"" of type '" "std::vector< std::vector< fastjet::PseudoJet > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< fastjet::PseudoJet > > * >(argp1);
  {
    if (!PySlice_Check(swig_obj[1])) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorVectorPseudoJet___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) swig_obj[1];
  }
  {
    std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > > *ptr = (std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > > *)0;
    res3 = swig::asptr(swig_obj[2], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "vectorVectorPseudoJet___setitem__" "', argument " "3"" of type '" "std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorVectorPseudoJet___setitem__" "', argument " "3"" of type '" "std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > > const &""'"); 
    }
    arg3 = ptr;
  }
  try {
    std_vector_Sl_std_vector_Sl_fastjet_PseudoJet_Sg__Sg____setitem____SWIG_0(arg1,arg2,(std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorPseudoJet___setitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::vector< fastjet::PseudoJet > > *arg1 = (std::vector< std::vector< fastjet::PseudoJet > > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorPseudoJet___setitem__" "', argument " "1"" of type '" "std::vector< std::vector< fastjet::PseudoJet > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< fastjet::PseudoJet > > * >(argp1);
  {
    if (!PySlice_Check(swig_obj[1])) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorVectorPseudoJet___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) swig_obj[1];
  }
  try {
    std_vector_Sl_std_vector_Sl_fastjet_PseudoJet_Sg__Sg____setitem____SWIG_1(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorPseudoJet___delitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::vector< fastjet::PseudoJet > > *arg1 = (std::vector< std::vector< fastjet::PseudoJet > > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorPseudoJet___delitem__" "', argument " "1"" of type '" "std::vector< std::vector< fastjet::PseudoJet > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< fastjet::PseudoJet > > * >(argp1);
  {
    if (!PySlice_Check(swig_obj[1])) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorVectorPseudoJet___delitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) swig_obj[1];
  }
  try {
    std_vector_Sl_std_vector_Sl_fastjet_PseudoJet_Sg__Sg____delitem____SWIG_1(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorPseudoJet___delitem__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectorVectorPseudoJet___delitem__", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_vectorVectorPseudoJet___delitem____SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_vectorVectorPseudoJet___delitem____SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectorVectorPseudoJet___delitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< std::vector< fastjet::PseudoJet > >::__delitem__(std::vector< std::vector< fastjet::PseudoJet > >::difference_type)\n"
    "    std::vector< std::vector< fastjet::PseudoJet > >::__delitem__(PySliceObject *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorVectorPseudoJet___getitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::vector< fastjet::PseudoJet > > *arg1 = (std::vector< std::vector< fastjet::PseudoJet > > *) 0 ;
  std::vector< std::vector< fastjet::PseudoJet > >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  std::vector< std::vector< fastjet::PseudoJet > >::value_type *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorPseudoJet___getitem__" "', argument " "1"" of type '" "std::vector< std::vector< fastjet::PseudoJet > > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< fastjet::PseudoJet > > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorVectorPseudoJet___getitem__" "', argument " "2"" of type '" "std::vector< std::vector< fastjet::PseudoJet > >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< std::vector< fastjet::PseudoJet > >::difference_type >(val2);
  try {
    result = (std::vector< std::vector< fastjet::PseudoJet > >::value_type *) &std_vector_Sl_std_vector_Sl_fastjet_PseudoJet_Sg__Sg____getitem____SWIG_1((std::vector< std::vector< fastjet::PseudoJet > > const *)arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(*result));
  (void)swig::container_owner<swig::traits<std::vector< std::vector< fastjet::PseudoJet > >::value_type>::category>::back_reference(resultobj, swig_obj[0]);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorPseudoJet___getitem__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectorVectorPseudoJet___getitem__", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_vectorVectorPseudoJet___getitem____SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_vectorVectorPseudoJet___getitem____SWIG_1(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectorVectorPseudoJet___getitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< std::vector< fastjet::PseudoJet > >::__getitem__(PySliceObject *)\n"
    "    std::vector< std::vector< fastjet::PseudoJet > >::__getitem__(std::vector< std::vector< fastjet::PseudoJet > >::difference_type) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorVectorPseudoJet___setitem____SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::vector< fastjet::PseudoJet > > *arg1 = (std::vector< std::vector< fastjet::PseudoJet > > *) 0 ;
  std::vector< std::vector< fastjet::PseudoJet > >::difference_type arg2 ;
  std::vector< std::vector< fastjet::PseudoJet > >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorPseudoJet___setitem__" "', argument " "1"" of type '" "std::vector< std::vector< fastjet::PseudoJet > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< fastjet::PseudoJet > > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorVectorPseudoJet___setitem__" "', argument " "2"" of type '" "std::vector< std::vector< fastjet::PseudoJet > >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< std::vector< fastjet::PseudoJet > >::difference_type >(val2);
  {
    std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *ptr = (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *)0;
    res3 = swig::asptr(swig_obj[2], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "vectorVectorPseudoJet___setitem__" "', argument " "3"" of type '" "std::vector< std::vector< fastjet::PseudoJet > >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorVectorPseudoJet___setitem__" "', argument " "3"" of type '" "std::vector< std::vector< fastjet::PseudoJet > >::value_type const &""'"); 
    }
    arg3 = ptr;
  }
  try {
    std_vector_Sl_std_vector_Sl_fastjet_PseudoJet_Sg__Sg____setitem____SWIG_2(arg1,arg2,(std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorPseudoJet___setitem__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectorVectorPseudoJet___setitem__", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_vectorVectorPseudoJet___setitem____SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        int res = swig::asptr(argv[2], (std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > >**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_vectorVectorPseudoJet___setitem____SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = swig::asptr(argv[2], (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_vectorVectorPseudoJet___setitem____SWIG_2(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectorVectorPseudoJet___setitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< std::vector< fastjet::PseudoJet > >::__setitem__(PySliceObject *,std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > > const &)\n"
    "    std::vector< std::vector< fastjet::PseudoJet > >::__setitem__(PySliceObject *)\n"
    "    std::vector< std::vector< fastjet::PseudoJet > >::__setitem__(std::vector< std::vector< fastjet::PseudoJet > >::difference_type,std::vector< std::vector< fastjet::PseudoJet > >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorVectorPseudoJet_pop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::vector< fastjet::PseudoJet > > *arg1 = (std::vector< std::vector< fastjet::PseudoJet > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< std::vector< fastjet::PseudoJet > >::value_type result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorPseudoJet_pop" "', argument " "1"" of type '" "std::vector< std::vector< fastjet::PseudoJet > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< fastjet::PseudoJet > > * >(argp1);
  try {
    result = std_vector_Sl_std_vector_Sl_fastjet_PseudoJet_Sg__Sg__pop(arg1);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorPseudoJet_append(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< std::vector< fastjet::PseudoJet > > *arg1 = (std::vector< std::vector< fastjet::PseudoJet > > *) 0 ;
  std::vector< std::vector< fastjet::PseudoJet > >::value_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"x",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:vectorVectorPseudoJet_append", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorPseudoJet_append" "', argument " "1"" of type '" "std::vector< std::vector< fastjet::PseudoJet > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< fastjet::PseudoJet > > * >(argp1);
  {
    std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *ptr = (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *)0;
    res2 = swig::asptr(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vectorVectorPseudoJet_append" "', argument " "2"" of type '" "std::vector< std::vector< fastjet::PseudoJet > >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorVectorPseudoJet_append" "', argument " "2"" of type '" "std::vector< std::vector< fastjet::PseudoJet > >::value_type const &""'"); 
    }
    arg2 = ptr;
  }
  std_vector_Sl_std_vector_Sl_fastjet_PseudoJet_Sg__Sg__append(arg1,(std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_vectorVectorPseudoJet__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  std::vector< std::vector< fastjet::PseudoJet > > *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (std::vector< std::vector< fastjet::PseudoJet > > *)new std::vector< std::vector< fastjet::PseudoJet > >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_vectorVectorPseudoJet__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  std::vector< std::vector< fastjet::PseudoJet > > *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > > *ptr = (std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > > *)0;
    res1 = swig::asptr(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_vectorVectorPseudoJet" "', argument " "1"" of type '" "std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_vectorVectorPseudoJet" "', argument " "1"" of type '" "std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > const &""'"); 
    }
    arg1 = ptr;
  }
  result = (std::vector< std::vector< fastjet::PseudoJet > > *)new std::vector< std::vector< fastjet::PseudoJet > >((std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorPseudoJet_empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::vector< fastjet::PseudoJet > > *arg1 = (std::vector< std::vector< fastjet::PseudoJet > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorPseudoJet_empty" "', argument " "1"" of type '" "std::vector< std::vector< fastjet::PseudoJet > > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< fastjet::PseudoJet > > * >(argp1);
  result = (bool)((std::vector< std::vector< fastjet::PseudoJet > > const *)arg1)->empty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorPseudoJet_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::vector< fastjet::PseudoJet > > *arg1 = (std::vector< std::vector< fastjet::PseudoJet > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< std::vector< fastjet::PseudoJet > >::size_type result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorPseudoJet_size" "', argument " "1"" of type '" "std::vector< std::vector< fastjet::PseudoJet > > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< fastjet::PseudoJet > > * >(argp1);
  result = ((std::vector< std::vector< fastjet::PseudoJet > > const *)arg1)->size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorPseudoJet_swap(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< std::vector< fastjet::PseudoJet > > *arg1 = (std::vector< std::vector< fastjet::PseudoJet > > *) 0 ;
  std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"v",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:vectorVectorPseudoJet_swap", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorPseudoJet_swap" "', argument " "1"" of type '" "std::vector< std::vector< fastjet::PseudoJet > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< fastjet::PseudoJet > > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vectorVectorPseudoJet_swap" "', argument " "2"" of type '" "std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorVectorPseudoJet_swap" "', argument " "2"" of type '" "std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > * >(argp2);
  (arg1)->swap(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorPseudoJet_begin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::vector< fastjet::PseudoJet > > *arg1 = (std::vector< std::vector< fastjet::PseudoJet > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< std::vector< fastjet::PseudoJet > >::iterator result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorPseudoJet_begin" "', argument " "1"" of type '" "std::vector< std::vector< fastjet::PseudoJet > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< fastjet::PseudoJet > > * >(argp1);
  result = (arg1)->begin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< std::vector< fastjet::PseudoJet > >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorPseudoJet_end(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::vector< fastjet::PseudoJet > > *arg1 = (std::vector< std::vector< fastjet::PseudoJet > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< std::vector< fastjet::PseudoJet > >::iterator result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorPseudoJet_end" "', argument " "1"" of type '" "std::vector< std::vector< fastjet::PseudoJet > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< fastjet::PseudoJet > > * >(argp1);
  result = (arg1)->end();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< std::vector< fastjet::PseudoJet > >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorPseudoJet_rbegin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::vector< fastjet::PseudoJet > > *arg1 = (std::vector< std::vector< fastjet::PseudoJet > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< std::vector< fastjet::PseudoJet > >::reverse_iterator result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorPseudoJet_rbegin" "', argument " "1"" of type '" "std::vector< std::vector< fastjet::PseudoJet > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< fastjet::PseudoJet > > * >(argp1);
  result = (arg1)->rbegin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< std::vector< fastjet::PseudoJet > >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorPseudoJet_rend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::vector< fastjet::PseudoJet > > *arg1 = (std::vector< std::vector< fastjet::PseudoJet > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< std::vector< fastjet::PseudoJet > >::reverse_iterator result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorPseudoJet_rend" "', argument " "1"" of type '" "std::vector< std::vector< fastjet::PseudoJet > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< fastjet::PseudoJet > > * >(argp1);
  result = (arg1)->rend();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< std::vector< fastjet::PseudoJet > >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorPseudoJet_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::vector< fastjet::PseudoJet > > *arg1 = (std::vector< std::vector< fastjet::PseudoJet > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorPseudoJet_clear" "', argument " "1"" of type '" "std::vector< std::vector< fastjet::PseudoJet > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< fastjet::PseudoJet > > * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorPseudoJet_get_allocator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::vector< fastjet::PseudoJet > > *arg1 = (std::vector< std::vector< fastjet::PseudoJet > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  SwigValueWrapper< std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > > result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorPseudoJet_get_allocator" "', argument " "1"" of type '" "std::vector< std::vector< fastjet::PseudoJet > > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< fastjet::PseudoJet > > * >(argp1);
  result = ((std::vector< std::vector< fastjet::PseudoJet > > const *)arg1)->get_allocator();
  resultobj = SWIG_NewPointerObj((new std::vector< std::vector< fastjet::PseudoJet > >::allocator_type(static_cast< const std::vector< std::vector< fastjet::PseudoJet > >::allocator_type& >(result))), SWIGTYPE_p_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_vectorVectorPseudoJet__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::vector< fastjet::PseudoJet > >::size_type arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  std::vector< std::vector< fastjet::PseudoJet > > *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_vectorVectorPseudoJet" "', argument " "1"" of type '" "std::vector< std::vector< fastjet::PseudoJet > >::size_type""'");
  } 
  arg1 = static_cast< std::vector< std::vector< fastjet::PseudoJet > >::size_type >(val1);
  result = (std::vector< std::vector< fastjet::PseudoJet > > *)new std::vector< std::vector< fastjet::PseudoJet > >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorPseudoJet_pop_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::vector< fastjet::PseudoJet > > *arg1 = (std::vector< std::vector< fastjet::PseudoJet > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorPseudoJet_pop_back" "', argument " "1"" of type '" "std::vector< std::vector< fastjet::PseudoJet > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< fastjet::PseudoJet > > * >(argp1);
  (arg1)->pop_back();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorPseudoJet_resize__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::vector< fastjet::PseudoJet > > *arg1 = (std::vector< std::vector< fastjet::PseudoJet > > *) 0 ;
  std::vector< std::vector< fastjet::PseudoJet > >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorPseudoJet_resize" "', argument " "1"" of type '" "std::vector< std::vector< fastjet::PseudoJet > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< fastjet::PseudoJet > > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorVectorPseudoJet_resize" "', argument " "2"" of type '" "std::vector< std::vector< fastjet::PseudoJet > >::size_type""'");
  } 
  arg2 = static_cast< std::vector< std::vector< fastjet::PseudoJet > >::size_type >(val2);
  (arg1)->resize(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorPseudoJet_erase__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::vector< fastjet::PseudoJet > > *arg1 = (std::vector< std::vector< fastjet::PseudoJet > > *) 0 ;
  std::vector< std::vector< fastjet::PseudoJet > >::iterator arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  std::vector< std::vector< fastjet::PseudoJet > >::iterator result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorPseudoJet_erase" "', argument " "1"" of type '" "std::vector< std::vector< fastjet::PseudoJet > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< fastjet::PseudoJet > > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorVectorPseudoJet_erase" "', argument " "2"" of type '" "std::vector< std::vector< fastjet::PseudoJet > >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< std::vector< fastjet::PseudoJet > >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< std::vector< fastjet::PseudoJet > >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorVectorPseudoJet_erase" "', argument " "2"" of type '" "std::vector< std::vector< fastjet::PseudoJet > >::iterator""'");
    }
  }
  result = std_vector_Sl_std_vector_Sl_fastjet_PseudoJet_Sg__Sg__erase__SWIG_0(arg1,arg2);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< std::vector< fastjet::PseudoJet > >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorPseudoJet_erase__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::vector< fastjet::PseudoJet > > *arg1 = (std::vector< std::vector< fastjet::PseudoJet > > *) 0 ;
  std::vector< std::vector< fastjet::PseudoJet > >::iterator arg2 ;
  std::vector< std::vector< fastjet::PseudoJet > >::iterator arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  swig::SwigPyIterator *iter3 = 0 ;
  int res3 ;
  std::vector< std::vector< fastjet::PseudoJet > >::iterator result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorPseudoJet_erase" "', argument " "1"" of type '" "std::vector< std::vector< fastjet::PseudoJet > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< fastjet::PseudoJet > > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorVectorPseudoJet_erase" "', argument " "2"" of type '" "std::vector< std::vector< fastjet::PseudoJet > >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< std::vector< fastjet::PseudoJet > >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< std::vector< fastjet::PseudoJet > >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorVectorPseudoJet_erase" "', argument " "2"" of type '" "std::vector< std::vector< fastjet::PseudoJet > >::iterator""'");
    }
  }
  res3 = SWIG_ConvertPtr(swig_obj[2], SWIG_as_voidptrptr(&iter3), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res3) || !iter3) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorVectorPseudoJet_erase" "', argument " "3"" of type '" "std::vector< std::vector< fastjet::PseudoJet > >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< std::vector< fastjet::PseudoJet > >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< std::vector< fastjet::PseudoJet > >::iterator > *>(iter3);
    if (iter_t) {
      arg3 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorVectorPseudoJet_erase" "', argument " "3"" of type '" "std::vector< std::vector< fastjet::PseudoJet > >::iterator""'");
    }
  }
  result = std_vector_Sl_std_vector_Sl_fastjet_PseudoJet_Sg__Sg__erase__SWIG_1(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< std::vector< fastjet::PseudoJet > >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorPseudoJet_erase(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectorVectorPseudoJet_erase", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< std::vector< fastjet::PseudoJet > >::iterator > *>(iter) != 0));
      if (_v) {
        return _wrap_vectorVectorPseudoJet_erase__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< std::vector< fastjet::PseudoJet > >::iterator > *>(iter) != 0));
      if (_v) {
        swig::SwigPyIterator *iter = 0;
        int res = SWIG_ConvertPtr(argv[2], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
        _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< std::vector< fastjet::PseudoJet > >::iterator > *>(iter) != 0));
        if (_v) {
          return _wrap_vectorVectorPseudoJet_erase__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectorVectorPseudoJet_erase'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< std::vector< fastjet::PseudoJet > >::erase(std::vector< std::vector< fastjet::PseudoJet > >::iterator)\n"
    "    std::vector< std::vector< fastjet::PseudoJet > >::erase(std::vector< std::vector< fastjet::PseudoJet > >::iterator,std::vector< std::vector< fastjet::PseudoJet > >::iterator)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_vectorVectorPseudoJet__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::vector< fastjet::PseudoJet > >::size_type arg1 ;
  std::vector< std::vector< fastjet::PseudoJet > >::value_type *arg2 = 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  std::vector< std::vector< fastjet::PseudoJet > > *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_vectorVectorPseudoJet" "', argument " "1"" of type '" "std::vector< std::vector< fastjet::PseudoJet > >::size_type""'");
  } 
  arg1 = static_cast< std::vector< std::vector< fastjet::PseudoJet > >::size_type >(val1);
  {
    std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *ptr = (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *)0;
    res2 = swig::asptr(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_vectorVectorPseudoJet" "', argument " "2"" of type '" "std::vector< std::vector< fastjet::PseudoJet > >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_vectorVectorPseudoJet" "', argument " "2"" of type '" "std::vector< std::vector< fastjet::PseudoJet > >::value_type const &""'"); 
    }
    arg2 = ptr;
  }
  result = (std::vector< std::vector< fastjet::PseudoJet > > *)new std::vector< std::vector< fastjet::PseudoJet > >(arg1,(std::vector< std::vector< fastjet::PseudoJet > >::value_type const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_vectorVectorPseudoJet(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_vectorVectorPseudoJet", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_vectorVectorPseudoJet__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_vectorVectorPseudoJet__SWIG_2(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_vectorVectorPseudoJet__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = swig::asptr(argv[1], (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_vectorVectorPseudoJet__SWIG_3(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_vectorVectorPseudoJet'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< std::vector< fastjet::PseudoJet > >::vector()\n"
    "    std::vector< std::vector< fastjet::PseudoJet > >::vector(std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > const &)\n"
    "    std::vector< std::vector< fastjet::PseudoJet > >::vector(std::vector< std::vector< fastjet::PseudoJet > >::size_type)\n"
    "    std::vector< std::vector< fastjet::PseudoJet > >::vector(std::vector< std::vector< fastjet::PseudoJet > >::size_type,std::vector< std::vector< fastjet::PseudoJet > >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorVectorPseudoJet_push_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< std::vector< fastjet::PseudoJet > > *arg1 = (std::vector< std::vector< fastjet::PseudoJet > > *) 0 ;
  std::vector< std::vector< fastjet::PseudoJet > >::value_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"x",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:vectorVectorPseudoJet_push_back", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorPseudoJet_push_back" "', argument " "1"" of type '" "std::vector< std::vector< fastjet::PseudoJet > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< fastjet::PseudoJet > > * >(argp1);
  {
    std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *ptr = (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *)0;
    res2 = swig::asptr(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vectorVectorPseudoJet_push_back" "', argument " "2"" of type '" "std::vector< std::vector< fastjet::PseudoJet > >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorVectorPseudoJet_push_back" "', argument " "2"" of type '" "std::vector< std::vector< fastjet::PseudoJet > >::value_type const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->push_back((std::vector< std::vector< fastjet::PseudoJet > >::value_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorPseudoJet_front(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::vector< fastjet::PseudoJet > > *arg1 = (std::vector< std::vector< fastjet::PseudoJet > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< std::vector< fastjet::PseudoJet > >::value_type *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorPseudoJet_front" "', argument " "1"" of type '" "std::vector< std::vector< fastjet::PseudoJet > > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< fastjet::PseudoJet > > * >(argp1);
  result = (std::vector< std::vector< fastjet::PseudoJet > >::value_type *) &((std::vector< std::vector< fastjet::PseudoJet > > const *)arg1)->front();
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(*result));
  (void)swig::container_owner<swig::traits<std::vector< std::vector< fastjet::PseudoJet > >::value_type>::category>::back_reference(resultobj, swig_obj[0]);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorPseudoJet_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::vector< fastjet::PseudoJet > > *arg1 = (std::vector< std::vector< fastjet::PseudoJet > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< std::vector< fastjet::PseudoJet > >::value_type *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorPseudoJet_back" "', argument " "1"" of type '" "std::vector< std::vector< fastjet::PseudoJet > > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< fastjet::PseudoJet > > * >(argp1);
  result = (std::vector< std::vector< fastjet::PseudoJet > >::value_type *) &((std::vector< std::vector< fastjet::PseudoJet > > const *)arg1)->back();
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(*result));
  (void)swig::container_owner<swig::traits<std::vector< std::vector< fastjet::PseudoJet > >::value_type>::category>::back_reference(resultobj, swig_obj[0]);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorPseudoJet_assign(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< std::vector< fastjet::PseudoJet > > *arg1 = (std::vector< std::vector< fastjet::PseudoJet > > *) 0 ;
  std::vector< std::vector< fastjet::PseudoJet > >::size_type arg2 ;
  std::vector< std::vector< fastjet::PseudoJet > >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"n",  (char *)"x",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:vectorVectorPseudoJet_assign", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorPseudoJet_assign" "', argument " "1"" of type '" "std::vector< std::vector< fastjet::PseudoJet > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< fastjet::PseudoJet > > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorVectorPseudoJet_assign" "', argument " "2"" of type '" "std::vector< std::vector< fastjet::PseudoJet > >::size_type""'");
  } 
  arg2 = static_cast< std::vector< std::vector< fastjet::PseudoJet > >::size_type >(val2);
  {
    std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *ptr = (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *)0;
    res3 = swig::asptr(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "vectorVectorPseudoJet_assign" "', argument " "3"" of type '" "std::vector< std::vector< fastjet::PseudoJet > >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorVectorPseudoJet_assign" "', argument " "3"" of type '" "std::vector< std::vector< fastjet::PseudoJet > >::value_type const &""'"); 
    }
    arg3 = ptr;
  }
  (arg1)->assign(arg2,(std::vector< std::vector< fastjet::PseudoJet > >::value_type const &)*arg3);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorPseudoJet_resize__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::vector< fastjet::PseudoJet > > *arg1 = (std::vector< std::vector< fastjet::PseudoJet > > *) 0 ;
  std::vector< std::vector< fastjet::PseudoJet > >::size_type arg2 ;
  std::vector< std::vector< fastjet::PseudoJet > >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorPseudoJet_resize" "', argument " "1"" of type '" "std::vector< std::vector< fastjet::PseudoJet > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< fastjet::PseudoJet > > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorVectorPseudoJet_resize" "', argument " "2"" of type '" "std::vector< std::vector< fastjet::PseudoJet > >::size_type""'");
  } 
  arg2 = static_cast< std::vector< std::vector< fastjet::PseudoJet > >::size_type >(val2);
  {
    std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *ptr = (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *)0;
    res3 = swig::asptr(swig_obj[2], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "vectorVectorPseudoJet_resize" "', argument " "3"" of type '" "std::vector< std::vector< fastjet::PseudoJet > >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorVectorPseudoJet_resize" "', argument " "3"" of type '" "std::vector< std::vector< fastjet::PseudoJet > >::value_type const &""'"); 
    }
    arg3 = ptr;
  }
  (arg1)->resize(arg2,(std::vector< std::vector< fastjet::PseudoJet > >::value_type const &)*arg3);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorPseudoJet_resize(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectorVectorPseudoJet_resize", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_vectorVectorPseudoJet_resize__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = swig::asptr(argv[2], (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_vectorVectorPseudoJet_resize__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectorVectorPseudoJet_resize'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< std::vector< fastjet::PseudoJet > >::resize(std::vector< std::vector< fastjet::PseudoJet > >::size_type)\n"
    "    std::vector< std::vector< fastjet::PseudoJet > >::resize(std::vector< std::vector< fastjet::PseudoJet > >::size_type,std::vector< std::vector< fastjet::PseudoJet > >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorVectorPseudoJet_insert__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::vector< fastjet::PseudoJet > > *arg1 = (std::vector< std::vector< fastjet::PseudoJet > > *) 0 ;
  std::vector< std::vector< fastjet::PseudoJet > >::iterator arg2 ;
  std::vector< std::vector< fastjet::PseudoJet > >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  int res3 = SWIG_OLDOBJ ;
  std::vector< std::vector< fastjet::PseudoJet > >::iterator result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorPseudoJet_insert" "', argument " "1"" of type '" "std::vector< std::vector< fastjet::PseudoJet > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< fastjet::PseudoJet > > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorVectorPseudoJet_insert" "', argument " "2"" of type '" "std::vector< std::vector< fastjet::PseudoJet > >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< std::vector< fastjet::PseudoJet > >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< std::vector< fastjet::PseudoJet > >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorVectorPseudoJet_insert" "', argument " "2"" of type '" "std::vector< std::vector< fastjet::PseudoJet > >::iterator""'");
    }
  }
  {
    std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *ptr = (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *)0;
    res3 = swig::asptr(swig_obj[2], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "vectorVectorPseudoJet_insert" "', argument " "3"" of type '" "std::vector< std::vector< fastjet::PseudoJet > >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorVectorPseudoJet_insert" "', argument " "3"" of type '" "std::vector< std::vector< fastjet::PseudoJet > >::value_type const &""'"); 
    }
    arg3 = ptr;
  }
  result = std_vector_Sl_std_vector_Sl_fastjet_PseudoJet_Sg__Sg__insert__SWIG_0(arg1,arg2,(std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &)*arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< std::vector< fastjet::PseudoJet > >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorPseudoJet_insert__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::vector< fastjet::PseudoJet > > *arg1 = (std::vector< std::vector< fastjet::PseudoJet > > *) 0 ;
  std::vector< std::vector< fastjet::PseudoJet > >::iterator arg2 ;
  std::vector< std::vector< fastjet::PseudoJet > >::size_type arg3 ;
  std::vector< std::vector< fastjet::PseudoJet > >::value_type *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  size_t val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorPseudoJet_insert" "', argument " "1"" of type '" "std::vector< std::vector< fastjet::PseudoJet > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< fastjet::PseudoJet > > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorVectorPseudoJet_insert" "', argument " "2"" of type '" "std::vector< std::vector< fastjet::PseudoJet > >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< std::vector< fastjet::PseudoJet > >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< std::vector< fastjet::PseudoJet > >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorVectorPseudoJet_insert" "', argument " "2"" of type '" "std::vector< std::vector< fastjet::PseudoJet > >::iterator""'");
    }
  }
  ecode3 = SWIG_AsVal_size_t(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorVectorPseudoJet_insert" "', argument " "3"" of type '" "std::vector< std::vector< fastjet::PseudoJet > >::size_type""'");
  } 
  arg3 = static_cast< std::vector< std::vector< fastjet::PseudoJet > >::size_type >(val3);
  {
    std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *ptr = (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *)0;
    res4 = swig::asptr(swig_obj[3], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "vectorVectorPseudoJet_insert" "', argument " "4"" of type '" "std::vector< std::vector< fastjet::PseudoJet > >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorVectorPseudoJet_insert" "', argument " "4"" of type '" "std::vector< std::vector< fastjet::PseudoJet > >::value_type const &""'"); 
    }
    arg4 = ptr;
  }
  std_vector_Sl_std_vector_Sl_fastjet_PseudoJet_Sg__Sg__insert__SWIG_1(arg1,arg2,arg3,(std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &)*arg4);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res4)) delete arg4;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) delete arg4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorPseudoJet_insert(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectorVectorPseudoJet_insert", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< std::vector< fastjet::PseudoJet > >::iterator > *>(iter) != 0));
      if (_v) {
        int res = swig::asptr(argv[2], (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_vectorVectorPseudoJet_insert__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< std::vector< fastjet::PseudoJet > >::iterator > *>(iter) != 0));
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = swig::asptr(argv[3], (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_vectorVectorPseudoJet_insert__SWIG_1(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectorVectorPseudoJet_insert'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< std::vector< fastjet::PseudoJet > >::insert(std::vector< std::vector< fastjet::PseudoJet > >::iterator,std::vector< std::vector< fastjet::PseudoJet > >::value_type const &)\n"
    "    std::vector< std::vector< fastjet::PseudoJet > >::insert(std::vector< std::vector< fastjet::PseudoJet > >::iterator,std::vector< std::vector< fastjet::PseudoJet > >::size_type,std::vector< std::vector< fastjet::PseudoJet > >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorVectorPseudoJet_reserve(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< std::vector< fastjet::PseudoJet > > *arg1 = (std::vector< std::vector< fastjet::PseudoJet > > *) 0 ;
  std::vector< std::vector< fastjet::PseudoJet > >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"n",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:vectorVectorPseudoJet_reserve", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorPseudoJet_reserve" "', argument " "1"" of type '" "std::vector< std::vector< fastjet::PseudoJet > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< fastjet::PseudoJet > > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorVectorPseudoJet_reserve" "', argument " "2"" of type '" "std::vector< std::vector< fastjet::PseudoJet > >::size_type""'");
  } 
  arg2 = static_cast< std::vector< std::vector< fastjet::PseudoJet > >::size_type >(val2);
  (arg1)->reserve(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorVectorPseudoJet_capacity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::vector< fastjet::PseudoJet > > *arg1 = (std::vector< std::vector< fastjet::PseudoJet > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< std::vector< fastjet::PseudoJet > >::size_type result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorVectorPseudoJet_capacity" "', argument " "1"" of type '" "std::vector< std::vector< fastjet::PseudoJet > > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< fastjet::PseudoJet > > * >(argp1);
  result = ((std::vector< std::vector< fastjet::PseudoJet > > const *)arg1)->capacity();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_vectorVectorPseudoJet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::vector< fastjet::PseudoJet > > *arg1 = (std::vector< std::vector< fastjet::PseudoJet > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_vectorVectorPseudoJet" "', argument " "1"" of type '" "std::vector< std::vector< fastjet::PseudoJet > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::vector< fastjet::PseudoJet > > * >(argp1);
  {
    try {
      delete arg1; 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *vectorVectorPseudoJet_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *vectorVectorPseudoJet_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_vectorPairDouble_iterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< double,double > > *arg1 = (std::vector< std::pair< double,double > > *) 0 ;
  PyObject **arg2 = (PyObject **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  swig::SwigPyIterator *result = 0 ;
  
  arg2 = &swig_obj[0];
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorPairDouble_iterator" "', argument " "1"" of type '" "std::vector< std::pair< double,double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< double,double > > * >(argp1);
  result = (swig::SwigPyIterator *)std_vector_Sl_std_pair_Sl_double_Sc_double_Sg__Sg__iterator(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorPairDouble___nonzero__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< double,double > > *arg1 = (std::vector< std::pair< double,double > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorPairDouble___nonzero__" "', argument " "1"" of type '" "std::vector< std::pair< double,double > > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< double,double > > * >(argp1);
  result = (bool)std_vector_Sl_std_pair_Sl_double_Sc_double_Sg__Sg____nonzero__((std::vector< std::pair< double,double > > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorPairDouble___bool__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< double,double > > *arg1 = (std::vector< std::pair< double,double > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorPairDouble___bool__" "', argument " "1"" of type '" "std::vector< std::pair< double,double > > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< double,double > > * >(argp1);
  result = (bool)std_vector_Sl_std_pair_Sl_double_Sc_double_Sg__Sg____bool__((std::vector< std::pair< double,double > > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorPairDouble___len__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< double,double > > *arg1 = (std::vector< std::pair< double,double > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< std::pair< double,double > >::size_type result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorPairDouble___len__" "', argument " "1"" of type '" "std::vector< std::pair< double,double > > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< double,double > > * >(argp1);
  result = std_vector_Sl_std_pair_Sl_double_Sc_double_Sg__Sg____len__((std::vector< std::pair< double,double > > const *)arg1);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorPairDouble___getslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< std::pair< double,double > > *arg1 = (std::vector< std::pair< double,double > > *) 0 ;
  std::vector< std::pair< double,double > >::difference_type arg2 ;
  std::vector< std::pair< double,double > >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"i",  (char *)"j",  NULL 
  };
  std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > > *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:vectorPairDouble___getslice__", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorPairDouble___getslice__" "', argument " "1"" of type '" "std::vector< std::pair< double,double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< double,double > > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorPairDouble___getslice__" "', argument " "2"" of type '" "std::vector< std::pair< double,double > >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< std::pair< double,double > >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorPairDouble___getslice__" "', argument " "3"" of type '" "std::vector< std::pair< double,double > >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< std::pair< double,double > >::difference_type >(val3);
  try {
    result = (std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > > *)std_vector_Sl_std_pair_Sl_double_Sc_double_Sg__Sg____getslice__(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorPairDouble___setslice____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::pair< double,double > > *arg1 = (std::vector< std::pair< double,double > > *) 0 ;
  std::vector< std::pair< double,double > >::difference_type arg2 ;
  std::vector< std::pair< double,double > >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorPairDouble___setslice__" "', argument " "1"" of type '" "std::vector< std::pair< double,double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< double,double > > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorPairDouble___setslice__" "', argument " "2"" of type '" "std::vector< std::pair< double,double > >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< std::pair< double,double > >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorPairDouble___setslice__" "', argument " "3"" of type '" "std::vector< std::pair< double,double > >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< std::pair< double,double > >::difference_type >(val3);
  try {
    std_vector_Sl_std_pair_Sl_double_Sc_double_Sg__Sg____setslice____SWIG_0(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorPairDouble___setslice____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::pair< double,double > > *arg1 = (std::vector< std::pair< double,double > > *) 0 ;
  std::vector< std::pair< double,double > >::difference_type arg2 ;
  std::vector< std::pair< double,double > >::difference_type arg3 ;
  std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > > *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorPairDouble___setslice__" "', argument " "1"" of type '" "std::vector< std::pair< double,double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< double,double > > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorPairDouble___setslice__" "', argument " "2"" of type '" "std::vector< std::pair< double,double > >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< std::pair< double,double > >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorPairDouble___setslice__" "', argument " "3"" of type '" "std::vector< std::pair< double,double > >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< std::pair< double,double > >::difference_type >(val3);
  {
    std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > > *ptr = (std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > > *)0;
    res4 = swig::asptr(swig_obj[3], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "vectorPairDouble___setslice__" "', argument " "4"" of type '" "std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorPairDouble___setslice__" "', argument " "4"" of type '" "std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > > const &""'"); 
    }
    arg4 = ptr;
  }
  try {
    std_vector_Sl_std_pair_Sl_double_Sc_double_Sg__Sg____setslice____SWIG_1(arg1,arg2,arg3,(std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > > const &)*arg4);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res4)) delete arg4;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) delete arg4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorPairDouble___setslice__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectorPairDouble___setslice__", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_vectorPairDouble___setslice____SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = swig::asptr(argv[3], (std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > >**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_vectorPairDouble___setslice____SWIG_1(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectorPairDouble___setslice__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< std::pair< double,double > >::__setslice__(std::vector< std::pair< double,double > >::difference_type,std::vector< std::pair< double,double > >::difference_type)\n"
    "    std::vector< std::pair< double,double > >::__setslice__(std::vector< std::pair< double,double > >::difference_type,std::vector< std::pair< double,double > >::difference_type,std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > > const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorPairDouble___delslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< std::pair< double,double > > *arg1 = (std::vector< std::pair< double,double > > *) 0 ;
  std::vector< std::pair< double,double > >::difference_type arg2 ;
  std::vector< std::pair< double,double > >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"i",  (char *)"j",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:vectorPairDouble___delslice__", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorPairDouble___delslice__" "', argument " "1"" of type '" "std::vector< std::pair< double,double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< double,double > > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorPairDouble___delslice__" "', argument " "2"" of type '" "std::vector< std::pair< double,double > >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< std::pair< double,double > >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorPairDouble___delslice__" "', argument " "3"" of type '" "std::vector< std::pair< double,double > >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< std::pair< double,double > >::difference_type >(val3);
  try {
    std_vector_Sl_std_pair_Sl_double_Sc_double_Sg__Sg____delslice__(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorPairDouble___delitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::pair< double,double > > *arg1 = (std::vector< std::pair< double,double > > *) 0 ;
  std::vector< std::pair< double,double > >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorPairDouble___delitem__" "', argument " "1"" of type '" "std::vector< std::pair< double,double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< double,double > > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorPairDouble___delitem__" "', argument " "2"" of type '" "std::vector< std::pair< double,double > >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< std::pair< double,double > >::difference_type >(val2);
  try {
    std_vector_Sl_std_pair_Sl_double_Sc_double_Sg__Sg____delitem____SWIG_0(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorPairDouble___getitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::pair< double,double > > *arg1 = (std::vector< std::pair< double,double > > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > > *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorPairDouble___getitem__" "', argument " "1"" of type '" "std::vector< std::pair< double,double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< double,double > > * >(argp1);
  {
    if (!PySlice_Check(swig_obj[1])) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorPairDouble___getitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) swig_obj[1];
  }
  try {
    result = (std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > > *)std_vector_Sl_std_pair_Sl_double_Sc_double_Sg__Sg____getitem____SWIG_0(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorPairDouble___setitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::pair< double,double > > *arg1 = (std::vector< std::pair< double,double > > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorPairDouble___setitem__" "', argument " "1"" of type '" "std::vector< std::pair< double,double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< double,double > > * >(argp1);
  {
    if (!PySlice_Check(swig_obj[1])) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorPairDouble___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) swig_obj[1];
  }
  {
    std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > > *ptr = (std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > > *)0;
    res3 = swig::asptr(swig_obj[2], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "vectorPairDouble___setitem__" "', argument " "3"" of type '" "std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorPairDouble___setitem__" "', argument " "3"" of type '" "std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > > const &""'"); 
    }
    arg3 = ptr;
  }
  try {
    std_vector_Sl_std_pair_Sl_double_Sc_double_Sg__Sg____setitem____SWIG_0(arg1,arg2,(std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorPairDouble___setitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::pair< double,double > > *arg1 = (std::vector< std::pair< double,double > > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorPairDouble___setitem__" "', argument " "1"" of type '" "std::vector< std::pair< double,double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< double,double > > * >(argp1);
  {
    if (!PySlice_Check(swig_obj[1])) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorPairDouble___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) swig_obj[1];
  }
  try {
    std_vector_Sl_std_pair_Sl_double_Sc_double_Sg__Sg____setitem____SWIG_1(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorPairDouble___delitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::pair< double,double > > *arg1 = (std::vector< std::pair< double,double > > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorPairDouble___delitem__" "', argument " "1"" of type '" "std::vector< std::pair< double,double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< double,double > > * >(argp1);
  {
    if (!PySlice_Check(swig_obj[1])) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorPairDouble___delitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) swig_obj[1];
  }
  try {
    std_vector_Sl_std_pair_Sl_double_Sc_double_Sg__Sg____delitem____SWIG_1(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorPairDouble___delitem__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectorPairDouble___delitem__", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_vectorPairDouble___delitem____SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_vectorPairDouble___delitem____SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectorPairDouble___delitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< std::pair< double,double > >::__delitem__(std::vector< std::pair< double,double > >::difference_type)\n"
    "    std::vector< std::pair< double,double > >::__delitem__(PySliceObject *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorPairDouble___getitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::pair< double,double > > *arg1 = (std::vector< std::pair< double,double > > *) 0 ;
  std::vector< std::pair< double,double > >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  std::vector< std::pair< double,double > >::value_type *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorPairDouble___getitem__" "', argument " "1"" of type '" "std::vector< std::pair< double,double > > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< double,double > > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorPairDouble___getitem__" "', argument " "2"" of type '" "std::vector< std::pair< double,double > >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< std::pair< double,double > >::difference_type >(val2);
  try {
    result = (std::vector< std::pair< double,double > >::value_type *) &std_vector_Sl_std_pair_Sl_double_Sc_double_Sg__Sg____getitem____SWIG_1((std::vector< std::pair< double,double > > const *)arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  resultobj = swig::from(static_cast< std::pair< double,double > >(*result));
  (void)swig::container_owner<swig::traits<std::vector< std::pair< double,double > >::value_type>::category>::back_reference(resultobj, swig_obj[0]);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorPairDouble___getitem__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectorPairDouble___getitem__", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_vectorPairDouble___getitem____SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_vectorPairDouble___getitem____SWIG_1(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectorPairDouble___getitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< std::pair< double,double > >::__getitem__(PySliceObject *)\n"
    "    std::vector< std::pair< double,double > >::__getitem__(std::vector< std::pair< double,double > >::difference_type) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorPairDouble___setitem____SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::pair< double,double > > *arg1 = (std::vector< std::pair< double,double > > *) 0 ;
  std::vector< std::pair< double,double > >::difference_type arg2 ;
  std::vector< std::pair< double,double > >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorPairDouble___setitem__" "', argument " "1"" of type '" "std::vector< std::pair< double,double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< double,double > > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorPairDouble___setitem__" "', argument " "2"" of type '" "std::vector< std::pair< double,double > >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< std::pair< double,double > >::difference_type >(val2);
  {
    std::pair< double,double > *ptr = (std::pair< double,double > *)0;
    res3 = swig::asptr(swig_obj[2], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "vectorPairDouble___setitem__" "', argument " "3"" of type '" "std::vector< std::pair< double,double > >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorPairDouble___setitem__" "', argument " "3"" of type '" "std::vector< std::pair< double,double > >::value_type const &""'"); 
    }
    arg3 = ptr;
  }
  try {
    std_vector_Sl_std_pair_Sl_double_Sc_double_Sg__Sg____setitem____SWIG_2(arg1,arg2,(std::pair< double,double > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorPairDouble___setitem__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectorPairDouble___setitem__", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_vectorPairDouble___setitem____SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        int res = swig::asptr(argv[2], (std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > >**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_vectorPairDouble___setitem____SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = swig::asptr(argv[2], (std::pair< double,double >**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_vectorPairDouble___setitem____SWIG_2(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectorPairDouble___setitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< std::pair< double,double > >::__setitem__(PySliceObject *,std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > > const &)\n"
    "    std::vector< std::pair< double,double > >::__setitem__(PySliceObject *)\n"
    "    std::vector< std::pair< double,double > >::__setitem__(std::vector< std::pair< double,double > >::difference_type,std::vector< std::pair< double,double > >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorPairDouble_pop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< double,double > > *arg1 = (std::vector< std::pair< double,double > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< std::pair< double,double > >::value_type result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorPairDouble_pop" "', argument " "1"" of type '" "std::vector< std::pair< double,double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< double,double > > * >(argp1);
  try {
    result = std_vector_Sl_std_pair_Sl_double_Sc_double_Sg__Sg__pop(arg1);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  resultobj = swig::from(static_cast< std::pair< double,double > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorPairDouble_append(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< std::pair< double,double > > *arg1 = (std::vector< std::pair< double,double > > *) 0 ;
  std::vector< std::pair< double,double > >::value_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"x",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:vectorPairDouble_append", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorPairDouble_append" "', argument " "1"" of type '" "std::vector< std::pair< double,double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< double,double > > * >(argp1);
  {
    std::pair< double,double > *ptr = (std::pair< double,double > *)0;
    res2 = swig::asptr(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vectorPairDouble_append" "', argument " "2"" of type '" "std::vector< std::pair< double,double > >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorPairDouble_append" "', argument " "2"" of type '" "std::vector< std::pair< double,double > >::value_type const &""'"); 
    }
    arg2 = ptr;
  }
  std_vector_Sl_std_pair_Sl_double_Sc_double_Sg__Sg__append(arg1,(std::pair< double,double > const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_vectorPairDouble__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  std::vector< std::pair< double,double > > *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (std::vector< std::pair< double,double > > *)new std::vector< std::pair< double,double > >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_vectorPairDouble__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::pair< double,double > > *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  std::vector< std::pair< double,double > > *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > > *ptr = (std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > > *)0;
    res1 = swig::asptr(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_vectorPairDouble" "', argument " "1"" of type '" "std::vector< std::pair< double,double > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_vectorPairDouble" "', argument " "1"" of type '" "std::vector< std::pair< double,double > > const &""'"); 
    }
    arg1 = ptr;
  }
  result = (std::vector< std::pair< double,double > > *)new std::vector< std::pair< double,double > >((std::vector< std::pair< double,double > > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorPairDouble_empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< double,double > > *arg1 = (std::vector< std::pair< double,double > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorPairDouble_empty" "', argument " "1"" of type '" "std::vector< std::pair< double,double > > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< double,double > > * >(argp1);
  result = (bool)((std::vector< std::pair< double,double > > const *)arg1)->empty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorPairDouble_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< double,double > > *arg1 = (std::vector< std::pair< double,double > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< std::pair< double,double > >::size_type result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorPairDouble_size" "', argument " "1"" of type '" "std::vector< std::pair< double,double > > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< double,double > > * >(argp1);
  result = ((std::vector< std::pair< double,double > > const *)arg1)->size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorPairDouble_swap(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< std::pair< double,double > > *arg1 = (std::vector< std::pair< double,double > > *) 0 ;
  std::vector< std::pair< double,double > > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"v",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:vectorPairDouble_swap", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorPairDouble_swap" "', argument " "1"" of type '" "std::vector< std::pair< double,double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< double,double > > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vectorPairDouble_swap" "', argument " "2"" of type '" "std::vector< std::pair< double,double > > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorPairDouble_swap" "', argument " "2"" of type '" "std::vector< std::pair< double,double > > &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< std::pair< double,double > > * >(argp2);
  (arg1)->swap(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorPairDouble_begin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< double,double > > *arg1 = (std::vector< std::pair< double,double > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< std::pair< double,double > >::iterator result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorPairDouble_begin" "', argument " "1"" of type '" "std::vector< std::pair< double,double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< double,double > > * >(argp1);
  result = (arg1)->begin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< std::pair< double,double > >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorPairDouble_end(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< double,double > > *arg1 = (std::vector< std::pair< double,double > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< std::pair< double,double > >::iterator result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorPairDouble_end" "', argument " "1"" of type '" "std::vector< std::pair< double,double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< double,double > > * >(argp1);
  result = (arg1)->end();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< std::pair< double,double > >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorPairDouble_rbegin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< double,double > > *arg1 = (std::vector< std::pair< double,double > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< std::pair< double,double > >::reverse_iterator result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorPairDouble_rbegin" "', argument " "1"" of type '" "std::vector< std::pair< double,double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< double,double > > * >(argp1);
  result = (arg1)->rbegin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< std::pair< double,double > >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorPairDouble_rend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< double,double > > *arg1 = (std::vector< std::pair< double,double > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< std::pair< double,double > >::reverse_iterator result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorPairDouble_rend" "', argument " "1"" of type '" "std::vector< std::pair< double,double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< double,double > > * >(argp1);
  result = (arg1)->rend();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< std::pair< double,double > >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorPairDouble_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< double,double > > *arg1 = (std::vector< std::pair< double,double > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorPairDouble_clear" "', argument " "1"" of type '" "std::vector< std::pair< double,double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< double,double > > * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorPairDouble_get_allocator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< double,double > > *arg1 = (std::vector< std::pair< double,double > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  SwigValueWrapper< std::allocator< std::pair< double,double > > > result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorPairDouble_get_allocator" "', argument " "1"" of type '" "std::vector< std::pair< double,double > > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< double,double > > * >(argp1);
  result = ((std::vector< std::pair< double,double > > const *)arg1)->get_allocator();
  resultobj = SWIG_NewPointerObj((new std::vector< std::pair< double,double > >::allocator_type(static_cast< const std::vector< std::pair< double,double > >::allocator_type& >(result))), SWIGTYPE_p_std__allocatorT_std__pairT_double_double_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_vectorPairDouble__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::pair< double,double > >::size_type arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  std::vector< std::pair< double,double > > *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_vectorPairDouble" "', argument " "1"" of type '" "std::vector< std::pair< double,double > >::size_type""'");
  } 
  arg1 = static_cast< std::vector< std::pair< double,double > >::size_type >(val1);
  result = (std::vector< std::pair< double,double > > *)new std::vector< std::pair< double,double > >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorPairDouble_pop_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< double,double > > *arg1 = (std::vector< std::pair< double,double > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorPairDouble_pop_back" "', argument " "1"" of type '" "std::vector< std::pair< double,double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< double,double > > * >(argp1);
  (arg1)->pop_back();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorPairDouble_resize__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::pair< double,double > > *arg1 = (std::vector< std::pair< double,double > > *) 0 ;
  std::vector< std::pair< double,double > >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorPairDouble_resize" "', argument " "1"" of type '" "std::vector< std::pair< double,double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< double,double > > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorPairDouble_resize" "', argument " "2"" of type '" "std::vector< std::pair< double,double > >::size_type""'");
  } 
  arg2 = static_cast< std::vector< std::pair< double,double > >::size_type >(val2);
  (arg1)->resize(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorPairDouble_erase__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::pair< double,double > > *arg1 = (std::vector< std::pair< double,double > > *) 0 ;
  std::vector< std::pair< double,double > >::iterator arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  std::vector< std::pair< double,double > >::iterator result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorPairDouble_erase" "', argument " "1"" of type '" "std::vector< std::pair< double,double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< double,double > > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorPairDouble_erase" "', argument " "2"" of type '" "std::vector< std::pair< double,double > >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< std::pair< double,double > >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< std::pair< double,double > >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorPairDouble_erase" "', argument " "2"" of type '" "std::vector< std::pair< double,double > >::iterator""'");
    }
  }
  result = std_vector_Sl_std_pair_Sl_double_Sc_double_Sg__Sg__erase__SWIG_0(arg1,arg2);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< std::pair< double,double > >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorPairDouble_erase__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::pair< double,double > > *arg1 = (std::vector< std::pair< double,double > > *) 0 ;
  std::vector< std::pair< double,double > >::iterator arg2 ;
  std::vector< std::pair< double,double > >::iterator arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  swig::SwigPyIterator *iter3 = 0 ;
  int res3 ;
  std::vector< std::pair< double,double > >::iterator result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorPairDouble_erase" "', argument " "1"" of type '" "std::vector< std::pair< double,double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< double,double > > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorPairDouble_erase" "', argument " "2"" of type '" "std::vector< std::pair< double,double > >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< std::pair< double,double > >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< std::pair< double,double > >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorPairDouble_erase" "', argument " "2"" of type '" "std::vector< std::pair< double,double > >::iterator""'");
    }
  }
  res3 = SWIG_ConvertPtr(swig_obj[2], SWIG_as_voidptrptr(&iter3), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res3) || !iter3) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorPairDouble_erase" "', argument " "3"" of type '" "std::vector< std::pair< double,double > >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< std::pair< double,double > >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< std::pair< double,double > >::iterator > *>(iter3);
    if (iter_t) {
      arg3 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorPairDouble_erase" "', argument " "3"" of type '" "std::vector< std::pair< double,double > >::iterator""'");
    }
  }
  result = std_vector_Sl_std_pair_Sl_double_Sc_double_Sg__Sg__erase__SWIG_1(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< std::pair< double,double > >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorPairDouble_erase(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectorPairDouble_erase", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< std::pair< double,double > >::iterator > *>(iter) != 0));
      if (_v) {
        return _wrap_vectorPairDouble_erase__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< std::pair< double,double > >::iterator > *>(iter) != 0));
      if (_v) {
        swig::SwigPyIterator *iter = 0;
        int res = SWIG_ConvertPtr(argv[2], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
        _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< std::pair< double,double > >::iterator > *>(iter) != 0));
        if (_v) {
          return _wrap_vectorPairDouble_erase__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectorPairDouble_erase'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< std::pair< double,double > >::erase(std::vector< std::pair< double,double > >::iterator)\n"
    "    std::vector< std::pair< double,double > >::erase(std::vector< std::pair< double,double > >::iterator,std::vector< std::pair< double,double > >::iterator)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_vectorPairDouble__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::pair< double,double > >::size_type arg1 ;
  std::vector< std::pair< double,double > >::value_type *arg2 = 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  std::vector< std::pair< double,double > > *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_vectorPairDouble" "', argument " "1"" of type '" "std::vector< std::pair< double,double > >::size_type""'");
  } 
  arg1 = static_cast< std::vector< std::pair< double,double > >::size_type >(val1);
  {
    std::pair< double,double > *ptr = (std::pair< double,double > *)0;
    res2 = swig::asptr(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_vectorPairDouble" "', argument " "2"" of type '" "std::vector< std::pair< double,double > >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_vectorPairDouble" "', argument " "2"" of type '" "std::vector< std::pair< double,double > >::value_type const &""'"); 
    }
    arg2 = ptr;
  }
  result = (std::vector< std::pair< double,double > > *)new std::vector< std::pair< double,double > >(arg1,(std::vector< std::pair< double,double > >::value_type const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_vectorPairDouble(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_vectorPairDouble", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_vectorPairDouble__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_vectorPairDouble__SWIG_2(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_vectorPairDouble__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = swig::asptr(argv[1], (std::pair< double,double >**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_vectorPairDouble__SWIG_3(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_vectorPairDouble'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< std::pair< double,double > >::vector()\n"
    "    std::vector< std::pair< double,double > >::vector(std::vector< std::pair< double,double > > const &)\n"
    "    std::vector< std::pair< double,double > >::vector(std::vector< std::pair< double,double > >::size_type)\n"
    "    std::vector< std::pair< double,double > >::vector(std::vector< std::pair< double,double > >::size_type,std::vector< std::pair< double,double > >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorPairDouble_push_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< std::pair< double,double > > *arg1 = (std::vector< std::pair< double,double > > *) 0 ;
  std::vector< std::pair< double,double > >::value_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"x",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:vectorPairDouble_push_back", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorPairDouble_push_back" "', argument " "1"" of type '" "std::vector< std::pair< double,double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< double,double > > * >(argp1);
  {
    std::pair< double,double > *ptr = (std::pair< double,double > *)0;
    res2 = swig::asptr(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vectorPairDouble_push_back" "', argument " "2"" of type '" "std::vector< std::pair< double,double > >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorPairDouble_push_back" "', argument " "2"" of type '" "std::vector< std::pair< double,double > >::value_type const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->push_back((std::vector< std::pair< double,double > >::value_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorPairDouble_front(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< double,double > > *arg1 = (std::vector< std::pair< double,double > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< std::pair< double,double > >::value_type *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorPairDouble_front" "', argument " "1"" of type '" "std::vector< std::pair< double,double > > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< double,double > > * >(argp1);
  result = (std::vector< std::pair< double,double > >::value_type *) &((std::vector< std::pair< double,double > > const *)arg1)->front();
  resultobj = swig::from(static_cast< std::pair< double,double > >(*result));
  (void)swig::container_owner<swig::traits<std::vector< std::pair< double,double > >::value_type>::category>::back_reference(resultobj, swig_obj[0]);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorPairDouble_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< double,double > > *arg1 = (std::vector< std::pair< double,double > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< std::pair< double,double > >::value_type *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorPairDouble_back" "', argument " "1"" of type '" "std::vector< std::pair< double,double > > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< double,double > > * >(argp1);
  result = (std::vector< std::pair< double,double > >::value_type *) &((std::vector< std::pair< double,double > > const *)arg1)->back();
  resultobj = swig::from(static_cast< std::pair< double,double > >(*result));
  (void)swig::container_owner<swig::traits<std::vector< std::pair< double,double > >::value_type>::category>::back_reference(resultobj, swig_obj[0]);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorPairDouble_assign(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< std::pair< double,double > > *arg1 = (std::vector< std::pair< double,double > > *) 0 ;
  std::vector< std::pair< double,double > >::size_type arg2 ;
  std::vector< std::pair< double,double > >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"n",  (char *)"x",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:vectorPairDouble_assign", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorPairDouble_assign" "', argument " "1"" of type '" "std::vector< std::pair< double,double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< double,double > > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorPairDouble_assign" "', argument " "2"" of type '" "std::vector< std::pair< double,double > >::size_type""'");
  } 
  arg2 = static_cast< std::vector< std::pair< double,double > >::size_type >(val2);
  {
    std::pair< double,double > *ptr = (std::pair< double,double > *)0;
    res3 = swig::asptr(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "vectorPairDouble_assign" "', argument " "3"" of type '" "std::vector< std::pair< double,double > >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorPairDouble_assign" "', argument " "3"" of type '" "std::vector< std::pair< double,double > >::value_type const &""'"); 
    }
    arg3 = ptr;
  }
  (arg1)->assign(arg2,(std::vector< std::pair< double,double > >::value_type const &)*arg3);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorPairDouble_resize__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::pair< double,double > > *arg1 = (std::vector< std::pair< double,double > > *) 0 ;
  std::vector< std::pair< double,double > >::size_type arg2 ;
  std::vector< std::pair< double,double > >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorPairDouble_resize" "', argument " "1"" of type '" "std::vector< std::pair< double,double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< double,double > > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorPairDouble_resize" "', argument " "2"" of type '" "std::vector< std::pair< double,double > >::size_type""'");
  } 
  arg2 = static_cast< std::vector< std::pair< double,double > >::size_type >(val2);
  {
    std::pair< double,double > *ptr = (std::pair< double,double > *)0;
    res3 = swig::asptr(swig_obj[2], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "vectorPairDouble_resize" "', argument " "3"" of type '" "std::vector< std::pair< double,double > >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorPairDouble_resize" "', argument " "3"" of type '" "std::vector< std::pair< double,double > >::value_type const &""'"); 
    }
    arg3 = ptr;
  }
  (arg1)->resize(arg2,(std::vector< std::pair< double,double > >::value_type const &)*arg3);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorPairDouble_resize(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectorPairDouble_resize", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_vectorPairDouble_resize__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = swig::asptr(argv[2], (std::pair< double,double >**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_vectorPairDouble_resize__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectorPairDouble_resize'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< std::pair< double,double > >::resize(std::vector< std::pair< double,double > >::size_type)\n"
    "    std::vector< std::pair< double,double > >::resize(std::vector< std::pair< double,double > >::size_type,std::vector< std::pair< double,double > >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorPairDouble_insert__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::pair< double,double > > *arg1 = (std::vector< std::pair< double,double > > *) 0 ;
  std::vector< std::pair< double,double > >::iterator arg2 ;
  std::vector< std::pair< double,double > >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  int res3 = SWIG_OLDOBJ ;
  std::vector< std::pair< double,double > >::iterator result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorPairDouble_insert" "', argument " "1"" of type '" "std::vector< std::pair< double,double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< double,double > > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorPairDouble_insert" "', argument " "2"" of type '" "std::vector< std::pair< double,double > >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< std::pair< double,double > >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< std::pair< double,double > >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorPairDouble_insert" "', argument " "2"" of type '" "std::vector< std::pair< double,double > >::iterator""'");
    }
  }
  {
    std::pair< double,double > *ptr = (std::pair< double,double > *)0;
    res3 = swig::asptr(swig_obj[2], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "vectorPairDouble_insert" "', argument " "3"" of type '" "std::vector< std::pair< double,double > >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorPairDouble_insert" "', argument " "3"" of type '" "std::vector< std::pair< double,double > >::value_type const &""'"); 
    }
    arg3 = ptr;
  }
  result = std_vector_Sl_std_pair_Sl_double_Sc_double_Sg__Sg__insert__SWIG_0(arg1,arg2,(std::pair< double,double > const &)*arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< std::pair< double,double > >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorPairDouble_insert__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< std::pair< double,double > > *arg1 = (std::vector< std::pair< double,double > > *) 0 ;
  std::vector< std::pair< double,double > >::iterator arg2 ;
  std::vector< std::pair< double,double > >::size_type arg3 ;
  std::vector< std::pair< double,double > >::value_type *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  size_t val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorPairDouble_insert" "', argument " "1"" of type '" "std::vector< std::pair< double,double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< double,double > > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorPairDouble_insert" "', argument " "2"" of type '" "std::vector< std::pair< double,double > >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< std::pair< double,double > >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< std::pair< double,double > >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorPairDouble_insert" "', argument " "2"" of type '" "std::vector< std::pair< double,double > >::iterator""'");
    }
  }
  ecode3 = SWIG_AsVal_size_t(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorPairDouble_insert" "', argument " "3"" of type '" "std::vector< std::pair< double,double > >::size_type""'");
  } 
  arg3 = static_cast< std::vector< std::pair< double,double > >::size_type >(val3);
  {
    std::pair< double,double > *ptr = (std::pair< double,double > *)0;
    res4 = swig::asptr(swig_obj[3], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "vectorPairDouble_insert" "', argument " "4"" of type '" "std::vector< std::pair< double,double > >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorPairDouble_insert" "', argument " "4"" of type '" "std::vector< std::pair< double,double > >::value_type const &""'"); 
    }
    arg4 = ptr;
  }
  std_vector_Sl_std_pair_Sl_double_Sc_double_Sg__Sg__insert__SWIG_1(arg1,arg2,arg3,(std::pair< double,double > const &)*arg4);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res4)) delete arg4;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) delete arg4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorPairDouble_insert(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectorPairDouble_insert", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< std::pair< double,double > >::iterator > *>(iter) != 0));
      if (_v) {
        int res = swig::asptr(argv[2], (std::pair< double,double >**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_vectorPairDouble_insert__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< std::pair< double,double > >::iterator > *>(iter) != 0));
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = swig::asptr(argv[3], (std::pair< double,double >**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_vectorPairDouble_insert__SWIG_1(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectorPairDouble_insert'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< std::pair< double,double > >::insert(std::vector< std::pair< double,double > >::iterator,std::vector< std::pair< double,double > >::value_type const &)\n"
    "    std::vector< std::pair< double,double > >::insert(std::vector< std::pair< double,double > >::iterator,std::vector< std::pair< double,double > >::size_type,std::vector< std::pair< double,double > >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorPairDouble_reserve(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< std::pair< double,double > > *arg1 = (std::vector< std::pair< double,double > > *) 0 ;
  std::vector< std::pair< double,double > >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"n",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:vectorPairDouble_reserve", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorPairDouble_reserve" "', argument " "1"" of type '" "std::vector< std::pair< double,double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< double,double > > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorPairDouble_reserve" "', argument " "2"" of type '" "std::vector< std::pair< double,double > >::size_type""'");
  } 
  arg2 = static_cast< std::vector< std::pair< double,double > >::size_type >(val2);
  (arg1)->reserve(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorPairDouble_capacity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< double,double > > *arg1 = (std::vector< std::pair< double,double > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< std::pair< double,double > >::size_type result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorPairDouble_capacity" "', argument " "1"" of type '" "std::vector< std::pair< double,double > > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< double,double > > * >(argp1);
  result = ((std::vector< std::pair< double,double > > const *)arg1)->capacity();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_vectorPairDouble(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::pair< double,double > > *arg1 = (std::vector< std::pair< double,double > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_vectorPairDouble" "', argument " "1"" of type '" "std::vector< std::pair< double,double > > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::pair< double,double > > * >(argp1);
  {
    try {
      delete arg1; 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *vectorPairDouble_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *vectorPairDouble_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_vectorInt_iterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  PyObject **arg2 = (PyObject **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  swig::SwigPyIterator *result = 0 ;
  
  arg2 = &swig_obj[0];
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorInt_iterator" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  result = (swig::SwigPyIterator *)std_vector_Sl_int_Sg__iterator(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorInt___nonzero__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorInt___nonzero__" "', argument " "1"" of type '" "std::vector< int > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  result = (bool)std_vector_Sl_int_Sg____nonzero__((std::vector< int > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorInt___bool__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorInt___bool__" "', argument " "1"" of type '" "std::vector< int > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  result = (bool)std_vector_Sl_int_Sg____bool__((std::vector< int > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorInt___len__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< int >::size_type result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorInt___len__" "', argument " "1"" of type '" "std::vector< int > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  result = std_vector_Sl_int_Sg____len__((std::vector< int > const *)arg1);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorInt___getslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  std::vector< int >::difference_type arg2 ;
  std::vector< int >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"i",  (char *)"j",  NULL 
  };
  std::vector< int,std::allocator< int > > *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:vectorInt___getslice__", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorInt___getslice__" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorInt___getslice__" "', argument " "2"" of type '" "std::vector< int >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< int >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorInt___getslice__" "', argument " "3"" of type '" "std::vector< int >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< int >::difference_type >(val3);
  try {
    result = (std::vector< int,std::allocator< int > > *)std_vector_Sl_int_Sg____getslice__(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorInt___setslice____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  std::vector< int >::difference_type arg2 ;
  std::vector< int >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorInt___setslice__" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorInt___setslice__" "', argument " "2"" of type '" "std::vector< int >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< int >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorInt___setslice__" "', argument " "3"" of type '" "std::vector< int >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< int >::difference_type >(val3);
  try {
    std_vector_Sl_int_Sg____setslice____SWIG_0(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorInt___setslice____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  std::vector< int >::difference_type arg2 ;
  std::vector< int >::difference_type arg3 ;
  std::vector< int,std::allocator< int > > *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorInt___setslice__" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorInt___setslice__" "', argument " "2"" of type '" "std::vector< int >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< int >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorInt___setslice__" "', argument " "3"" of type '" "std::vector< int >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< int >::difference_type >(val3);
  {
    std::vector< int,std::allocator< int > > *ptr = (std::vector< int,std::allocator< int > > *)0;
    res4 = swig::asptr(swig_obj[3], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "vectorInt___setslice__" "', argument " "4"" of type '" "std::vector< int,std::allocator< int > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorInt___setslice__" "', argument " "4"" of type '" "std::vector< int,std::allocator< int > > const &""'"); 
    }
    arg4 = ptr;
  }
  try {
    std_vector_Sl_int_Sg____setslice____SWIG_1(arg1,arg2,arg3,(std::vector< int,std::allocator< int > > const &)*arg4);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res4)) delete arg4;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) delete arg4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorInt___setslice__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectorInt___setslice__", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< int,std::allocator< int > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_vectorInt___setslice____SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< int,std::allocator< int > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = swig::asptr(argv[3], (std::vector< int,std::allocator< int > >**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_vectorInt___setslice____SWIG_1(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectorInt___setslice__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< int >::__setslice__(std::vector< int >::difference_type,std::vector< int >::difference_type)\n"
    "    std::vector< int >::__setslice__(std::vector< int >::difference_type,std::vector< int >::difference_type,std::vector< int,std::allocator< int > > const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorInt___delslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  std::vector< int >::difference_type arg2 ;
  std::vector< int >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"i",  (char *)"j",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:vectorInt___delslice__", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorInt___delslice__" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorInt___delslice__" "', argument " "2"" of type '" "std::vector< int >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< int >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorInt___delslice__" "', argument " "3"" of type '" "std::vector< int >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< int >::difference_type >(val3);
  try {
    std_vector_Sl_int_Sg____delslice__(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorInt___delitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  std::vector< int >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorInt___delitem__" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorInt___delitem__" "', argument " "2"" of type '" "std::vector< int >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< int >::difference_type >(val2);
  try {
    std_vector_Sl_int_Sg____delitem____SWIG_0(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorInt___getitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::vector< int,std::allocator< int > > *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorInt___getitem__" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  {
    if (!PySlice_Check(swig_obj[1])) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorInt___getitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) swig_obj[1];
  }
  try {
    result = (std::vector< int,std::allocator< int > > *)std_vector_Sl_int_Sg____getitem____SWIG_0(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorInt___setitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  std::vector< int,std::allocator< int > > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorInt___setitem__" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  {
    if (!PySlice_Check(swig_obj[1])) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorInt___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) swig_obj[1];
  }
  {
    std::vector< int,std::allocator< int > > *ptr = (std::vector< int,std::allocator< int > > *)0;
    res3 = swig::asptr(swig_obj[2], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "vectorInt___setitem__" "', argument " "3"" of type '" "std::vector< int,std::allocator< int > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorInt___setitem__" "', argument " "3"" of type '" "std::vector< int,std::allocator< int > > const &""'"); 
    }
    arg3 = ptr;
  }
  try {
    std_vector_Sl_int_Sg____setitem____SWIG_0(arg1,arg2,(std::vector< int,std::allocator< int > > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorInt___setitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorInt___setitem__" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  {
    if (!PySlice_Check(swig_obj[1])) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorInt___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) swig_obj[1];
  }
  try {
    std_vector_Sl_int_Sg____setitem____SWIG_1(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorInt___delitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorInt___delitem__" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  {
    if (!PySlice_Check(swig_obj[1])) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorInt___delitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) swig_obj[1];
  }
  try {
    std_vector_Sl_int_Sg____delitem____SWIG_1(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorInt___delitem__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectorInt___delitem__", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< int,std::allocator< int > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_vectorInt___delitem____SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< int,std::allocator< int > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_vectorInt___delitem____SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectorInt___delitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< int >::__delitem__(std::vector< int >::difference_type)\n"
    "    std::vector< int >::__delitem__(PySliceObject *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorInt___getitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  std::vector< int >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  std::vector< int >::value_type *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorInt___getitem__" "', argument " "1"" of type '" "std::vector< int > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorInt___getitem__" "', argument " "2"" of type '" "std::vector< int >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< int >::difference_type >(val2);
  try {
    result = (std::vector< int >::value_type *) &std_vector_Sl_int_Sg____getitem____SWIG_1((std::vector< int > const *)arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  resultobj = SWIG_From_int(static_cast< int >(*result));
  (void)swig::container_owner<swig::traits<std::vector< int >::value_type>::category>::back_reference(resultobj, swig_obj[0]);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorInt___getitem__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectorInt___getitem__", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< int,std::allocator< int > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_vectorInt___getitem____SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< int,std::allocator< int > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_vectorInt___getitem____SWIG_1(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectorInt___getitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< int >::__getitem__(PySliceObject *)\n"
    "    std::vector< int >::__getitem__(std::vector< int >::difference_type) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorInt___setitem____SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  std::vector< int >::difference_type arg2 ;
  std::vector< int >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  std::vector< int >::value_type temp3 ;
  int val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorInt___setitem__" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorInt___setitem__" "', argument " "2"" of type '" "std::vector< int >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< int >::difference_type >(val2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorInt___setitem__" "', argument " "3"" of type '" "std::vector< int >::value_type""'");
  } 
  temp3 = static_cast< std::vector< int >::value_type >(val3);
  arg3 = &temp3;
  try {
    std_vector_Sl_int_Sg____setitem____SWIG_2(arg1,arg2,(int const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorInt___setitem__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectorInt___setitem__", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< int,std::allocator< int > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_vectorInt___setitem____SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< int,std::allocator< int > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        int res = swig::asptr(argv[2], (std::vector< int,std::allocator< int > >**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_vectorInt___setitem____SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< int,std::allocator< int > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_vectorInt___setitem____SWIG_2(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectorInt___setitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< int >::__setitem__(PySliceObject *,std::vector< int,std::allocator< int > > const &)\n"
    "    std::vector< int >::__setitem__(PySliceObject *)\n"
    "    std::vector< int >::__setitem__(std::vector< int >::difference_type,std::vector< int >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorInt_pop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< int >::value_type result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorInt_pop" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  try {
    result = (std::vector< int >::value_type)std_vector_Sl_int_Sg__pop(arg1);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorInt_append(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  std::vector< int >::value_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::vector< int >::value_type temp2 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"x",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:vectorInt_append", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorInt_append" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorInt_append" "', argument " "2"" of type '" "std::vector< int >::value_type""'");
  } 
  temp2 = static_cast< std::vector< int >::value_type >(val2);
  arg2 = &temp2;
  std_vector_Sl_int_Sg__append(arg1,(int const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_vectorInt__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  std::vector< int > *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (std::vector< int > *)new std::vector< int >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_vectorInt__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  std::vector< int > *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    std::vector< int,std::allocator< int > > *ptr = (std::vector< int,std::allocator< int > > *)0;
    res1 = swig::asptr(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_vectorInt" "', argument " "1"" of type '" "std::vector< int > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_vectorInt" "', argument " "1"" of type '" "std::vector< int > const &""'"); 
    }
    arg1 = ptr;
  }
  result = (std::vector< int > *)new std::vector< int >((std::vector< int > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorInt_empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorInt_empty" "', argument " "1"" of type '" "std::vector< int > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  result = (bool)((std::vector< int > const *)arg1)->empty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorInt_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< int >::size_type result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorInt_size" "', argument " "1"" of type '" "std::vector< int > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  result = ((std::vector< int > const *)arg1)->size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorInt_swap(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  std::vector< int > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"v",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:vectorInt_swap", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorInt_swap" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vectorInt_swap" "', argument " "2"" of type '" "std::vector< int > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorInt_swap" "', argument " "2"" of type '" "std::vector< int > &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< int > * >(argp2);
  (arg1)->swap(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorInt_begin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< int >::iterator result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorInt_begin" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  result = (arg1)->begin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< int >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorInt_end(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< int >::iterator result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorInt_end" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  result = (arg1)->end();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< int >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorInt_rbegin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< int >::reverse_iterator result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorInt_rbegin" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  result = (arg1)->rbegin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< int >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorInt_rend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< int >::reverse_iterator result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorInt_rend" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  result = (arg1)->rend();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< int >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorInt_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorInt_clear" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorInt_get_allocator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  SwigValueWrapper< std::allocator< int > > result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorInt_get_allocator" "', argument " "1"" of type '" "std::vector< int > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  result = ((std::vector< int > const *)arg1)->get_allocator();
  resultobj = SWIG_NewPointerObj((new std::vector< int >::allocator_type(static_cast< const std::vector< int >::allocator_type& >(result))), SWIGTYPE_p_std__allocatorT_int_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_vectorInt__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< int >::size_type arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  std::vector< int > *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_vectorInt" "', argument " "1"" of type '" "std::vector< int >::size_type""'");
  } 
  arg1 = static_cast< std::vector< int >::size_type >(val1);
  result = (std::vector< int > *)new std::vector< int >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorInt_pop_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorInt_pop_back" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  (arg1)->pop_back();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorInt_resize__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  std::vector< int >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorInt_resize" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorInt_resize" "', argument " "2"" of type '" "std::vector< int >::size_type""'");
  } 
  arg2 = static_cast< std::vector< int >::size_type >(val2);
  (arg1)->resize(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorInt_erase__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  std::vector< int >::iterator arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  std::vector< int >::iterator result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorInt_erase" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorInt_erase" "', argument " "2"" of type '" "std::vector< int >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< int >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< int >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorInt_erase" "', argument " "2"" of type '" "std::vector< int >::iterator""'");
    }
  }
  result = std_vector_Sl_int_Sg__erase__SWIG_0(arg1,arg2);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< int >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorInt_erase__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  std::vector< int >::iterator arg2 ;
  std::vector< int >::iterator arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  swig::SwigPyIterator *iter3 = 0 ;
  int res3 ;
  std::vector< int >::iterator result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorInt_erase" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorInt_erase" "', argument " "2"" of type '" "std::vector< int >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< int >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< int >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorInt_erase" "', argument " "2"" of type '" "std::vector< int >::iterator""'");
    }
  }
  res3 = SWIG_ConvertPtr(swig_obj[2], SWIG_as_voidptrptr(&iter3), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res3) || !iter3) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorInt_erase" "', argument " "3"" of type '" "std::vector< int >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< int >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< int >::iterator > *>(iter3);
    if (iter_t) {
      arg3 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorInt_erase" "', argument " "3"" of type '" "std::vector< int >::iterator""'");
    }
  }
  result = std_vector_Sl_int_Sg__erase__SWIG_1(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< int >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorInt_erase(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectorInt_erase", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< int,std::allocator< int > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< int >::iterator > *>(iter) != 0));
      if (_v) {
        return _wrap_vectorInt_erase__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< int,std::allocator< int > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< int >::iterator > *>(iter) != 0));
      if (_v) {
        swig::SwigPyIterator *iter = 0;
        int res = SWIG_ConvertPtr(argv[2], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
        _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< int >::iterator > *>(iter) != 0));
        if (_v) {
          return _wrap_vectorInt_erase__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectorInt_erase'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< int >::erase(std::vector< int >::iterator)\n"
    "    std::vector< int >::erase(std::vector< int >::iterator,std::vector< int >::iterator)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_vectorInt__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< int >::size_type arg1 ;
  std::vector< int >::value_type *arg2 = 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  std::vector< int >::value_type temp2 ;
  int val2 ;
  int ecode2 = 0 ;
  std::vector< int > *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_vectorInt" "', argument " "1"" of type '" "std::vector< int >::size_type""'");
  } 
  arg1 = static_cast< std::vector< int >::size_type >(val1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_vectorInt" "', argument " "2"" of type '" "std::vector< int >::value_type""'");
  } 
  temp2 = static_cast< std::vector< int >::value_type >(val2);
  arg2 = &temp2;
  result = (std::vector< int > *)new std::vector< int >(arg1,(std::vector< int >::value_type const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_vectorInt(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_vectorInt", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_vectorInt__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_vectorInt__SWIG_2(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< int,std::allocator< int > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_vectorInt__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_vectorInt__SWIG_3(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_vectorInt'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< int >::vector()\n"
    "    std::vector< int >::vector(std::vector< int > const &)\n"
    "    std::vector< int >::vector(std::vector< int >::size_type)\n"
    "    std::vector< int >::vector(std::vector< int >::size_type,std::vector< int >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorInt_push_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  std::vector< int >::value_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::vector< int >::value_type temp2 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"x",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:vectorInt_push_back", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorInt_push_back" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorInt_push_back" "', argument " "2"" of type '" "std::vector< int >::value_type""'");
  } 
  temp2 = static_cast< std::vector< int >::value_type >(val2);
  arg2 = &temp2;
  (arg1)->push_back((std::vector< int >::value_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorInt_front(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< int >::value_type *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorInt_front" "', argument " "1"" of type '" "std::vector< int > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  result = (std::vector< int >::value_type *) &((std::vector< int > const *)arg1)->front();
  resultobj = SWIG_From_int(static_cast< int >(*result));
  (void)swig::container_owner<swig::traits<std::vector< int >::value_type>::category>::back_reference(resultobj, swig_obj[0]);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorInt_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< int >::value_type *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorInt_back" "', argument " "1"" of type '" "std::vector< int > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  result = (std::vector< int >::value_type *) &((std::vector< int > const *)arg1)->back();
  resultobj = SWIG_From_int(static_cast< int >(*result));
  (void)swig::container_owner<swig::traits<std::vector< int >::value_type>::category>::back_reference(resultobj, swig_obj[0]);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorInt_assign(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  std::vector< int >::size_type arg2 ;
  std::vector< int >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  std::vector< int >::value_type temp3 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"n",  (char *)"x",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:vectorInt_assign", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorInt_assign" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorInt_assign" "', argument " "2"" of type '" "std::vector< int >::size_type""'");
  } 
  arg2 = static_cast< std::vector< int >::size_type >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorInt_assign" "', argument " "3"" of type '" "std::vector< int >::value_type""'");
  } 
  temp3 = static_cast< std::vector< int >::value_type >(val3);
  arg3 = &temp3;
  (arg1)->assign(arg2,(std::vector< int >::value_type const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorInt_resize__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  std::vector< int >::size_type arg2 ;
  std::vector< int >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  std::vector< int >::value_type temp3 ;
  int val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorInt_resize" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorInt_resize" "', argument " "2"" of type '" "std::vector< int >::size_type""'");
  } 
  arg2 = static_cast< std::vector< int >::size_type >(val2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorInt_resize" "', argument " "3"" of type '" "std::vector< int >::value_type""'");
  } 
  temp3 = static_cast< std::vector< int >::value_type >(val3);
  arg3 = &temp3;
  (arg1)->resize(arg2,(std::vector< int >::value_type const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorInt_resize(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectorInt_resize", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< int,std::allocator< int > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_vectorInt_resize__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< int,std::allocator< int > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_vectorInt_resize__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectorInt_resize'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< int >::resize(std::vector< int >::size_type)\n"
    "    std::vector< int >::resize(std::vector< int >::size_type,std::vector< int >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorInt_insert__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  std::vector< int >::iterator arg2 ;
  std::vector< int >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  std::vector< int >::value_type temp3 ;
  int val3 ;
  int ecode3 = 0 ;
  std::vector< int >::iterator result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorInt_insert" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorInt_insert" "', argument " "2"" of type '" "std::vector< int >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< int >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< int >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorInt_insert" "', argument " "2"" of type '" "std::vector< int >::iterator""'");
    }
  }
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorInt_insert" "', argument " "3"" of type '" "std::vector< int >::value_type""'");
  } 
  temp3 = static_cast< std::vector< int >::value_type >(val3);
  arg3 = &temp3;
  result = std_vector_Sl_int_Sg__insert__SWIG_0(arg1,arg2,(int const &)*arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< int >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorInt_insert__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  std::vector< int >::iterator arg2 ;
  std::vector< int >::size_type arg3 ;
  std::vector< int >::value_type *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  size_t val3 ;
  int ecode3 = 0 ;
  std::vector< int >::value_type temp4 ;
  int val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorInt_insert" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorInt_insert" "', argument " "2"" of type '" "std::vector< int >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< int >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< int >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorInt_insert" "', argument " "2"" of type '" "std::vector< int >::iterator""'");
    }
  }
  ecode3 = SWIG_AsVal_size_t(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorInt_insert" "', argument " "3"" of type '" "std::vector< int >::size_type""'");
  } 
  arg3 = static_cast< std::vector< int >::size_type >(val3);
  ecode4 = SWIG_AsVal_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "vectorInt_insert" "', argument " "4"" of type '" "std::vector< int >::value_type""'");
  } 
  temp4 = static_cast< std::vector< int >::value_type >(val4);
  arg4 = &temp4;
  std_vector_Sl_int_Sg__insert__SWIG_1(arg1,arg2,arg3,(int const &)*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorInt_insert(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "vectorInt_insert", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< int,std::allocator< int > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< int >::iterator > *>(iter) != 0));
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_vectorInt_insert__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< int,std::allocator< int > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< int >::iterator > *>(iter) != 0));
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_vectorInt_insert__SWIG_1(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'vectorInt_insert'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< int >::insert(std::vector< int >::iterator,std::vector< int >::value_type const &)\n"
    "    std::vector< int >::insert(std::vector< int >::iterator,std::vector< int >::size_type,std::vector< int >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_vectorInt_reserve(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  std::vector< int >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"n",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:vectorInt_reserve", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorInt_reserve" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorInt_reserve" "', argument " "2"" of type '" "std::vector< int >::size_type""'");
  } 
  arg2 = static_cast< std::vector< int >::size_type >(val2);
  (arg1)->reserve(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorInt_capacity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< int >::size_type result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorInt_capacity" "', argument " "1"" of type '" "std::vector< int > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  result = ((std::vector< int > const *)arg1)->capacity();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_vectorInt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_vectorInt" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  {
    try {
      delete arg1; 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *vectorInt_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *vectorInt_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN int Swig_var_PI_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable PI is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_PI_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(fastjet::contrib::piranha::PI));
  return pyobj;
}


SWIGINTERN int Swig_var_TWOPI_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable TWOPI is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_TWOPI_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(fastjet::contrib::piranha::TWOPI));
  return pyobj;
}


SWIGINTERN PyObject *_wrap_phi_fix(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  double arg1 ;
  double arg2 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"phi",  (char *)"ref_phi",  NULL 
  };
  double result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:phi_fix", kwnames, &obj0, &obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "phi_fix" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "phi_fix" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    try {
      result = (double)fastjet::contrib::piranha::phi_fix(arg1,arg2); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DynamicVoronoiBase(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::DynamicVoronoiBase *arg1 = (fastjet::contrib::piranha::DynamicVoronoiBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__DynamicVoronoiBase, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DynamicVoronoiBase" "', argument " "1"" of type '" "fastjet::contrib::piranha::DynamicVoronoiBase *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::DynamicVoronoiBase * >(argp1);
  {
    try {
      delete arg1; 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DynamicVoronoiBase_description(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::DynamicVoronoiBase *arg1 = (fastjet::contrib::piranha::DynamicVoronoiBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__DynamicVoronoiBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DynamicVoronoiBase_description" "', argument " "1"" of type '" "fastjet::contrib::piranha::DynamicVoronoiBase const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::DynamicVoronoiBase * >(argp1);
  {
    try {
      result = ((fastjet::contrib::piranha::DynamicVoronoiBase const *)arg1)->description(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DynamicVoronoiBase_set_subtraction_type(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::DynamicVoronoiBase *arg1 = (fastjet::contrib::piranha::DynamicVoronoiBase *) 0 ;
  fastjet::contrib::piranha::SubtractionType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"subtype",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:DynamicVoronoiBase_set_subtraction_type", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_fastjet__contrib__piranha__DynamicVoronoiBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DynamicVoronoiBase_set_subtraction_type" "', argument " "1"" of type '" "fastjet::contrib::piranha::DynamicVoronoiBase *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::DynamicVoronoiBase * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DynamicVoronoiBase_set_subtraction_type" "', argument " "2"" of type '" "fastjet::contrib::piranha::SubtractionType""'");
  } 
  arg2 = static_cast< fastjet::contrib::piranha::SubtractionType >(val2);
  {
    try {
      (arg1)->set_subtraction_type(arg2); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DynamicVoronoiBase_set_R(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::DynamicVoronoiBase *arg1 = (fastjet::contrib::piranha::DynamicVoronoiBase *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"R",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:DynamicVoronoiBase_set_R", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_fastjet__contrib__piranha__DynamicVoronoiBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DynamicVoronoiBase_set_R" "', argument " "1"" of type '" "fastjet::contrib::piranha::DynamicVoronoiBase *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::DynamicVoronoiBase * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DynamicVoronoiBase_set_R" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    try {
      (arg1)->set_R(arg2); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DynamicVoronoiBase_subtraction_type(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::DynamicVoronoiBase *arg1 = (fastjet::contrib::piranha::DynamicVoronoiBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  fastjet::contrib::piranha::SubtractionType result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__DynamicVoronoiBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DynamicVoronoiBase_subtraction_type" "', argument " "1"" of type '" "fastjet::contrib::piranha::DynamicVoronoiBase const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::DynamicVoronoiBase * >(argp1);
  {
    try {
      result = (fastjet::contrib::piranha::SubtractionType)((fastjet::contrib::piranha::DynamicVoronoiBase const *)arg1)->subtraction_type(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DynamicVoronoiBase_track_emds(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::DynamicVoronoiBase *arg1 = (fastjet::contrib::piranha::DynamicVoronoiBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__DynamicVoronoiBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DynamicVoronoiBase_track_emds" "', argument " "1"" of type '" "fastjet::contrib::piranha::DynamicVoronoiBase const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::DynamicVoronoiBase * >(argp1);
  {
    try {
      result = (bool)((fastjet::contrib::piranha::DynamicVoronoiBase const *)arg1)->track_emds(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DynamicVoronoiBase_R(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::DynamicVoronoiBase *arg1 = (fastjet::contrib::piranha::DynamicVoronoiBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__DynamicVoronoiBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DynamicVoronoiBase_R" "', argument " "1"" of type '" "fastjet::contrib::piranha::DynamicVoronoiBase const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::DynamicVoronoiBase * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::DynamicVoronoiBase const *)arg1)->R(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DynamicVoronoiBase___call____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::DynamicVoronoiBase *arg1 = (fastjet::contrib::piranha::DynamicVoronoiBase *) 0 ;
  std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__DynamicVoronoiBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DynamicVoronoiBase___call__" "', argument " "1"" of type '" "fastjet::contrib::piranha::DynamicVoronoiBase *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::DynamicVoronoiBase * >(argp1);
  {
    std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > > *ptr = (std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > > *)0;
    res2 = swig::asptr(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DynamicVoronoiBase___call__" "', argument " "2"" of type '" "std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DynamicVoronoiBase___call__" "', argument " "2"" of type '" "std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > > const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (arg1)->operator ()((std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > > const &)*arg2); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_DynamicVoronoiBase___call____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::DynamicVoronoiBase *arg1 = (fastjet::contrib::piranha::DynamicVoronoiBase *) 0 ;
  std::vector< fastjet::contrib::piranha::DynamicVoronoiBase::Point,std::allocator< fastjet::contrib::piranha::DynamicVoronoiBase::Point > > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__DynamicVoronoiBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DynamicVoronoiBase___call__" "', argument " "1"" of type '" "fastjet::contrib::piranha::DynamicVoronoiBase *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::DynamicVoronoiBase * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__vectorT_CGAL__Delaunay_triangulation_2T_fastjet__contrib__piranha__DynamicVoronoiBase__K_fastjet__contrib__piranha__DynamicVoronoiBase__Tds2_t__Point_std__allocatorT_CGAL__Delaunay_triangulation_2T_fastjet__contrib__piranha__DynamicVoronoiBase__K_fastjet__contrib__piranha__DynamicVoronoiBase__Tds2_t__Point_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DynamicVoronoiBase___call__" "', argument " "2"" of type '" "std::vector< fastjet::contrib::piranha::DynamicVoronoiBase::Point,std::allocator< fastjet::contrib::piranha::DynamicVoronoiBase::Point > > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DynamicVoronoiBase___call__" "', argument " "2"" of type '" "std::vector< fastjet::contrib::piranha::DynamicVoronoiBase::Point,std::allocator< fastjet::contrib::piranha::DynamicVoronoiBase::Point > > const &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< fastjet::contrib::piranha::DynamicVoronoiBase::Point,std::allocator< fastjet::contrib::piranha::DynamicVoronoiBase::Point > > * >(argp2);
  {
    try {
      (arg1)->operator ()((std::vector< fastjet::contrib::piranha::DynamicVoronoiBase::Point,std::allocator< fastjet::contrib::piranha::DynamicVoronoiBase::Point > > const &)*arg2); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DynamicVoronoiBase___call__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "DynamicVoronoiBase___call__", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__DynamicVoronoiBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__vectorT_CGAL__Delaunay_triangulation_2T_fastjet__contrib__piranha__DynamicVoronoiBase__K_fastjet__contrib__piranha__DynamicVoronoiBase__Tds2_t__Point_std__allocatorT_CGAL__Delaunay_triangulation_2T_fastjet__contrib__piranha__DynamicVoronoiBase__K_fastjet__contrib__piranha__DynamicVoronoiBase__Tds2_t__Point_t_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_DynamicVoronoiBase___call____SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__DynamicVoronoiBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = swig::asptr(argv[1], (std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > >**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_DynamicVoronoiBase___call____SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'DynamicVoronoiBase___call__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    fastjet::contrib::piranha::DynamicVoronoiBase::operator ()(std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > > const &)\n"
    "    fastjet::contrib::piranha::DynamicVoronoiBase::operator ()(std::vector< fastjet::contrib::piranha::DynamicVoronoiBase::Point,std::allocator< fastjet::contrib::piranha::DynamicVoronoiBase::Point > > const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_DynamicVoronoiBase_valid_point__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::DynamicVoronoiBase *arg1 = (fastjet::contrib::piranha::DynamicVoronoiBase *) 0 ;
  fastjet::contrib::piranha::DynamicVoronoiBase::Point *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__DynamicVoronoiBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DynamicVoronoiBase_valid_point" "', argument " "1"" of type '" "fastjet::contrib::piranha::DynamicVoronoiBase const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::DynamicVoronoiBase * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_CGAL__Delaunay_triangulation_2T_fastjet__contrib__piranha__DynamicVoronoiBase__K_fastjet__contrib__piranha__DynamicVoronoiBase__Tds2_t__Point,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DynamicVoronoiBase_valid_point" "', argument " "2"" of type '" "fastjet::contrib::piranha::DynamicVoronoiBase::Point const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DynamicVoronoiBase_valid_point" "', argument " "2"" of type '" "fastjet::contrib::piranha::DynamicVoronoiBase::Point const &""'"); 
  }
  arg2 = reinterpret_cast< fastjet::contrib::piranha::DynamicVoronoiBase::Point * >(argp2);
  {
    try {
      result = (bool)((fastjet::contrib::piranha::DynamicVoronoiBase const *)arg1)->valid_point((fastjet::contrib::piranha::DynamicVoronoiBase::Point const &)*arg2); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DynamicVoronoiBase_valid_point__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::DynamicVoronoiBase *arg1 = (fastjet::contrib::piranha::DynamicVoronoiBase *) 0 ;
  double arg2 ;
  double arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  bool result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__DynamicVoronoiBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DynamicVoronoiBase_valid_point" "', argument " "1"" of type '" "fastjet::contrib::piranha::DynamicVoronoiBase const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::DynamicVoronoiBase * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DynamicVoronoiBase_valid_point" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "DynamicVoronoiBase_valid_point" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  {
    try {
      result = (bool)((fastjet::contrib::piranha::DynamicVoronoiBase const *)arg1)->valid_point(arg2,arg3); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DynamicVoronoiBase_valid_point(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "DynamicVoronoiBase_valid_point", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__DynamicVoronoiBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_CGAL__Delaunay_triangulation_2T_fastjet__contrib__piranha__DynamicVoronoiBase__K_fastjet__contrib__piranha__DynamicVoronoiBase__Tds2_t__Point, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_DynamicVoronoiBase_valid_point__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__DynamicVoronoiBase, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_DynamicVoronoiBase_valid_point__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'DynamicVoronoiBase_valid_point'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    fastjet::contrib::piranha::DynamicVoronoiBase::valid_point(fastjet::contrib::piranha::DynamicVoronoiBase::Point const &) const\n"
    "    fastjet::contrib::piranha::DynamicVoronoiBase::valid_point(double,double) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_DynamicVoronoiBase_number_of_primary_delaunay_vertices(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::DynamicVoronoiBase *arg1 = (fastjet::contrib::piranha::DynamicVoronoiBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__DynamicVoronoiBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DynamicVoronoiBase_number_of_primary_delaunay_vertices" "', argument " "1"" of type '" "fastjet::contrib::piranha::DynamicVoronoiBase const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::DynamicVoronoiBase * >(argp1);
  {
    try {
      result = (unsigned int)((fastjet::contrib::piranha::DynamicVoronoiBase const *)arg1)->number_of_primary_delaunay_vertices(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DynamicVoronoiBase_total_area(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::DynamicVoronoiBase *arg1 = (fastjet::contrib::piranha::DynamicVoronoiBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__DynamicVoronoiBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DynamicVoronoiBase_total_area" "', argument " "1"" of type '" "fastjet::contrib::piranha::DynamicVoronoiBase const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::DynamicVoronoiBase * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::DynamicVoronoiBase const *)arg1)->total_area(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DynamicVoronoiBase_areas(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::DynamicVoronoiBase *arg1 = (fastjet::contrib::piranha::DynamicVoronoiBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< double,std::allocator< double > > *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__DynamicVoronoiBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DynamicVoronoiBase_areas" "', argument " "1"" of type '" "fastjet::contrib::piranha::DynamicVoronoiBase const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::DynamicVoronoiBase * >(argp1);
  {
    try {
      result = (std::vector< double,std::allocator< double > > *) &((fastjet::contrib::piranha::DynamicVoronoiBase const *)arg1)->areas(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< double,std::allocator< double > > >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DynamicVoronoiBase_area(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::DynamicVoronoiBase *arg1 = (fastjet::contrib::piranha::DynamicVoronoiBase *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"i",  NULL 
  };
  double result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:DynamicVoronoiBase_area", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_fastjet__contrib__piranha__DynamicVoronoiBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DynamicVoronoiBase_area" "', argument " "1"" of type '" "fastjet::contrib::piranha::DynamicVoronoiBase const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::DynamicVoronoiBase * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DynamicVoronoiBase_area" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (double)((fastjet::contrib::piranha::DynamicVoronoiBase const *)arg1)->area(arg2); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DynamicVoronoiBase_coincidences(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::DynamicVoronoiBase *arg1 = (fastjet::contrib::piranha::DynamicVoronoiBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< int,std::allocator< int > > *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__DynamicVoronoiBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DynamicVoronoiBase_coincidences" "', argument " "1"" of type '" "fastjet::contrib::piranha::DynamicVoronoiBase const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::DynamicVoronoiBase * >(argp1);
  {
    try {
      result = (std::vector< int,std::allocator< int > > *) &((fastjet::contrib::piranha::DynamicVoronoiBase const *)arg1)->coincidences(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< int,std::allocator< int > > >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DynamicVoronoiBase_emd_density(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::DynamicVoronoiBase *arg1 = (fastjet::contrib::piranha::DynamicVoronoiBase *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"i",  NULL 
  };
  double result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:DynamicVoronoiBase_emd_density", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_fastjet__contrib__piranha__DynamicVoronoiBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DynamicVoronoiBase_emd_density" "', argument " "1"" of type '" "fastjet::contrib::piranha::DynamicVoronoiBase const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::DynamicVoronoiBase * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DynamicVoronoiBase_emd_density" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (double)((fastjet::contrib::piranha::DynamicVoronoiBase const *)arg1)->emd_density(arg2); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DynamicVoronoiBase_neighbors(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::DynamicVoronoiBase *arg1 = (fastjet::contrib::piranha::DynamicVoronoiBase *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"i",  NULL 
  };
  std::vector< int,std::allocator< int > > result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:DynamicVoronoiBase_neighbors", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_fastjet__contrib__piranha__DynamicVoronoiBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DynamicVoronoiBase_neighbors" "', argument " "1"" of type '" "fastjet::contrib::piranha::DynamicVoronoiBase const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::DynamicVoronoiBase * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DynamicVoronoiBase_neighbors" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = ((fastjet::contrib::piranha::DynamicVoronoiBase const *)arg1)->neighbors(arg2); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< int,std::allocator< int > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DynamicVoronoiBase_vertex_is_primary_and_active(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::DynamicVoronoiBase *arg1 = (fastjet::contrib::piranha::DynamicVoronoiBase *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"i",  NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:DynamicVoronoiBase_vertex_is_primary_and_active", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_fastjet__contrib__piranha__DynamicVoronoiBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DynamicVoronoiBase_vertex_is_primary_and_active" "', argument " "1"" of type '" "fastjet::contrib::piranha::DynamicVoronoiBase const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::DynamicVoronoiBase * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DynamicVoronoiBase_vertex_is_primary_and_active" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (bool)((fastjet::contrib::piranha::DynamicVoronoiBase const *)arg1)->vertex_is_primary_and_active(arg2); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DynamicVoronoiBase_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_fastjet__contrib__piranha__DynamicVoronoiBase, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_DynamicVoronoiCylinder__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::DynamicVoronoiCylinder *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      result = (fastjet::contrib::piranha::DynamicVoronoiCylinder *)new fastjet::contrib::piranha::DynamicVoronoiCylinder(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__DynamicVoronoiCylinder, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DynamicVoronoiCylinder__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::SubtractionType arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  int val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  double val5 ;
  int ecode5 = 0 ;
  double val6 ;
  int ecode6 = 0 ;
  fastjet::contrib::piranha::DynamicVoronoiCylinder *result = 0 ;
  
  if ((nobjs < 6) || (nobjs > 6)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_DynamicVoronoiCylinder" "', argument " "1"" of type '" "fastjet::contrib::piranha::SubtractionType""'");
  } 
  arg1 = static_cast< fastjet::contrib::piranha::SubtractionType >(val1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_DynamicVoronoiCylinder" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_DynamicVoronoiCylinder" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  ecode4 = SWIG_AsVal_double(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_DynamicVoronoiCylinder" "', argument " "4"" of type '" "double""'");
  } 
  arg4 = static_cast< double >(val4);
  ecode5 = SWIG_AsVal_double(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_DynamicVoronoiCylinder" "', argument " "5"" of type '" "double""'");
  } 
  arg5 = static_cast< double >(val5);
  ecode6 = SWIG_AsVal_double(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_DynamicVoronoiCylinder" "', argument " "6"" of type '" "double""'");
  } 
  arg6 = static_cast< double >(val6);
  {
    try {
      result = (fastjet::contrib::piranha::DynamicVoronoiCylinder *)new fastjet::contrib::piranha::DynamicVoronoiCylinder(arg1,arg2,arg3,arg4,arg5,arg6); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__DynamicVoronoiCylinder, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DynamicVoronoiCylinder(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[7] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_DynamicVoronoiCylinder", 0, 6, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_DynamicVoronoiCylinder__SWIG_0(self, argc, argv);
  }
  if (argc == 6) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_new_DynamicVoronoiCylinder__SWIG_1(self, argc, argv);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_DynamicVoronoiCylinder'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    fastjet::contrib::piranha::DynamicVoronoiCylinder::DynamicVoronoiCylinder()\n"
    "    fastjet::contrib::piranha::DynamicVoronoiCylinder::DynamicVoronoiCylinder(fastjet::contrib::piranha::SubtractionType,double,double,double,double,double)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_DynamicVoronoiCylinder_primary_region(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::DynamicVoronoiCylinder *arg1 = (fastjet::contrib::piranha::DynamicVoronoiCylinder *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::pair< std::pair< double,double >,std::pair< double,double > > result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__DynamicVoronoiCylinder, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DynamicVoronoiCylinder_primary_region" "', argument " "1"" of type '" "fastjet::contrib::piranha::DynamicVoronoiCylinder const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::DynamicVoronoiCylinder * >(argp1);
  {
    try {
      result = ((fastjet::contrib::piranha::DynamicVoronoiCylinder const *)arg1)->primary_region(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::pair< std::pair< double,double >,std::pair< double,double > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DynamicVoronoiCylinder_valid_point(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::DynamicVoronoiCylinder *arg1 = (fastjet::contrib::piranha::DynamicVoronoiCylinder *) 0 ;
  fastjet::contrib::piranha::DynamicVoronoiBase::Point *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"p",  NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:DynamicVoronoiCylinder_valid_point", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_fastjet__contrib__piranha__DynamicVoronoiCylinder, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DynamicVoronoiCylinder_valid_point" "', argument " "1"" of type '" "fastjet::contrib::piranha::DynamicVoronoiCylinder const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::DynamicVoronoiCylinder * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CGAL__Delaunay_triangulation_2T_fastjet__contrib__piranha__DynamicVoronoiBase__K_fastjet__contrib__piranha__DynamicVoronoiBase__Tds2_t__Point,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DynamicVoronoiCylinder_valid_point" "', argument " "2"" of type '" "fastjet::contrib::piranha::DynamicVoronoiBase::Point const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DynamicVoronoiCylinder_valid_point" "', argument " "2"" of type '" "fastjet::contrib::piranha::DynamicVoronoiBase::Point const &""'"); 
  }
  arg2 = reinterpret_cast< fastjet::contrib::piranha::DynamicVoronoiBase::Point * >(argp2);
  {
    try {
      result = (bool)((fastjet::contrib::piranha::DynamicVoronoiCylinder const *)arg1)->valid_point((fastjet::contrib::piranha::DynamicVoronoiBase::Point const &)*arg2); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DynamicVoronoiCylinder_neighbors(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::DynamicVoronoiCylinder *arg1 = (fastjet::contrib::piranha::DynamicVoronoiCylinder *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"i",  NULL 
  };
  std::vector< int,std::allocator< int > > result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:DynamicVoronoiCylinder_neighbors", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_fastjet__contrib__piranha__DynamicVoronoiCylinder, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DynamicVoronoiCylinder_neighbors" "', argument " "1"" of type '" "fastjet::contrib::piranha::DynamicVoronoiCylinder const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::DynamicVoronoiCylinder * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DynamicVoronoiCylinder_neighbors" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = ((fastjet::contrib::piranha::DynamicVoronoiCylinder const *)arg1)->neighbors(arg2); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< int,std::allocator< int > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DynamicVoronoiCylinder_remove(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::DynamicVoronoiCylinder *arg1 = (fastjet::contrib::piranha::DynamicVoronoiCylinder *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"i",  NULL 
  };
  fastjet::contrib::piranha::RemovalResult result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:DynamicVoronoiCylinder_remove", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_fastjet__contrib__piranha__DynamicVoronoiCylinder, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DynamicVoronoiCylinder_remove" "', argument " "1"" of type '" "fastjet::contrib::piranha::DynamicVoronoiCylinder *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::DynamicVoronoiCylinder * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DynamicVoronoiCylinder_remove" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (fastjet::contrib::piranha::RemovalResult)(arg1)->remove(arg2); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DynamicVoronoiCylinder(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::DynamicVoronoiCylinder *arg1 = (fastjet::contrib::piranha::DynamicVoronoiCylinder *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__DynamicVoronoiCylinder, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DynamicVoronoiCylinder" "', argument " "1"" of type '" "fastjet::contrib::piranha::DynamicVoronoiCylinder *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::DynamicVoronoiCylinder * >(argp1);
  {
    try {
      delete arg1; 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DynamicVoronoiCylinder_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_fastjet__contrib__piranha__DynamicVoronoiCylinder, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *DynamicVoronoiCylinder_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_DynamicVoronoiDisk__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::DynamicVoronoiDisk *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      result = (fastjet::contrib::piranha::DynamicVoronoiDisk *)new fastjet::contrib::piranha::DynamicVoronoiDisk(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__DynamicVoronoiDisk, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DynamicVoronoiDisk__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::SubtractionType arg1 ;
  double arg2 ;
  int val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  fastjet::contrib::piranha::DynamicVoronoiDisk *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_DynamicVoronoiDisk" "', argument " "1"" of type '" "fastjet::contrib::piranha::SubtractionType""'");
  } 
  arg1 = static_cast< fastjet::contrib::piranha::SubtractionType >(val1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_DynamicVoronoiDisk" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    try {
      result = (fastjet::contrib::piranha::DynamicVoronoiDisk *)new fastjet::contrib::piranha::DynamicVoronoiDisk(arg1,arg2); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__DynamicVoronoiDisk, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DynamicVoronoiDisk(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_DynamicVoronoiDisk", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_DynamicVoronoiDisk__SWIG_0(self, argc, argv);
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_DynamicVoronoiDisk__SWIG_1(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_DynamicVoronoiDisk'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    fastjet::contrib::piranha::DynamicVoronoiDisk::DynamicVoronoiDisk()\n"
    "    fastjet::contrib::piranha::DynamicVoronoiDisk::DynamicVoronoiDisk(fastjet::contrib::piranha::SubtractionType,double)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_DynamicVoronoiDisk_set_R(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::DynamicVoronoiDisk *arg1 = (fastjet::contrib::piranha::DynamicVoronoiDisk *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"R",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:DynamicVoronoiDisk_set_R", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_fastjet__contrib__piranha__DynamicVoronoiDisk, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DynamicVoronoiDisk_set_R" "', argument " "1"" of type '" "fastjet::contrib::piranha::DynamicVoronoiDisk *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::DynamicVoronoiDisk * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DynamicVoronoiDisk_set_R" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    try {
      (arg1)->set_R(arg2); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DynamicVoronoiDisk_set_center(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::DynamicVoronoiDisk *arg1 = (fastjet::contrib::piranha::DynamicVoronoiDisk *) 0 ;
  double arg2 ;
  double arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"x0",  (char *)"y0",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:DynamicVoronoiDisk_set_center", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_fastjet__contrib__piranha__DynamicVoronoiDisk, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DynamicVoronoiDisk_set_center" "', argument " "1"" of type '" "fastjet::contrib::piranha::DynamicVoronoiDisk *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::DynamicVoronoiDisk * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DynamicVoronoiDisk_set_center" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "DynamicVoronoiDisk_set_center" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  {
    try {
      (arg1)->set_center(arg2,arg3); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DynamicVoronoiDisk_x0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::DynamicVoronoiDisk *arg1 = (fastjet::contrib::piranha::DynamicVoronoiDisk *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__DynamicVoronoiDisk, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DynamicVoronoiDisk_x0" "', argument " "1"" of type '" "fastjet::contrib::piranha::DynamicVoronoiDisk const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::DynamicVoronoiDisk * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::DynamicVoronoiDisk const *)arg1)->x0(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DynamicVoronoiDisk_y0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::DynamicVoronoiDisk *arg1 = (fastjet::contrib::piranha::DynamicVoronoiDisk *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__DynamicVoronoiDisk, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DynamicVoronoiDisk_y0" "', argument " "1"" of type '" "fastjet::contrib::piranha::DynamicVoronoiDisk const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::DynamicVoronoiDisk * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::DynamicVoronoiDisk const *)arg1)->y0(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DynamicVoronoiDisk_valid_point(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::DynamicVoronoiDisk *arg1 = (fastjet::contrib::piranha::DynamicVoronoiDisk *) 0 ;
  fastjet::contrib::piranha::DynamicVoronoiBase::Point *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"p",  NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:DynamicVoronoiDisk_valid_point", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_fastjet__contrib__piranha__DynamicVoronoiDisk, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DynamicVoronoiDisk_valid_point" "', argument " "1"" of type '" "fastjet::contrib::piranha::DynamicVoronoiDisk const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::DynamicVoronoiDisk * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_CGAL__Delaunay_triangulation_2T_fastjet__contrib__piranha__DynamicVoronoiBase__K_fastjet__contrib__piranha__DynamicVoronoiBase__Tds2_t__Point,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DynamicVoronoiDisk_valid_point" "', argument " "2"" of type '" "fastjet::contrib::piranha::DynamicVoronoiBase::Point const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DynamicVoronoiDisk_valid_point" "', argument " "2"" of type '" "fastjet::contrib::piranha::DynamicVoronoiBase::Point const &""'"); 
  }
  arg2 = reinterpret_cast< fastjet::contrib::piranha::DynamicVoronoiBase::Point * >(argp2);
  {
    try {
      result = (bool)((fastjet::contrib::piranha::DynamicVoronoiDisk const *)arg1)->valid_point((fastjet::contrib::piranha::DynamicVoronoiBase::Point const &)*arg2); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DynamicVoronoiDisk_remove(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::DynamicVoronoiDisk *arg1 = (fastjet::contrib::piranha::DynamicVoronoiDisk *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"arg2",  NULL 
  };
  fastjet::contrib::piranha::RemovalResult result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:DynamicVoronoiDisk_remove", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_fastjet__contrib__piranha__DynamicVoronoiDisk, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DynamicVoronoiDisk_remove" "', argument " "1"" of type '" "fastjet::contrib::piranha::DynamicVoronoiDisk *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::DynamicVoronoiDisk * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DynamicVoronoiDisk_remove" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (fastjet::contrib::piranha::RemovalResult)(arg1)->remove(arg2); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DynamicVoronoiDisk(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::DynamicVoronoiDisk *arg1 = (fastjet::contrib::piranha::DynamicVoronoiDisk *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__DynamicVoronoiDisk, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DynamicVoronoiDisk" "', argument " "1"" of type '" "fastjet::contrib::piranha::DynamicVoronoiDisk *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::DynamicVoronoiDisk * >(argp1);
  {
    try {
      delete arg1; 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DynamicVoronoiDisk_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_fastjet__contrib__piranha__DynamicVoronoiDisk, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *DynamicVoronoiDisk_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN int Swig_var_piranha_epsilon_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable piranha_epsilon is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_piranha_epsilon_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(fastjet::contrib::piranha::piranha_epsilon));
  return pyobj;
}


SWIGINTERN PyObject *_wrap_new_SubtractionHistory__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::SubtractionHistory *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      result = (fastjet::contrib::piranha::SubtractionHistory *)new fastjet::contrib::piranha::SubtractionHistory(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__SubtractionHistory, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SubtractionHistory__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  double arg2 ;
  unsigned int arg3 ;
  unsigned int arg4 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  fastjet::contrib::piranha::SubtractionHistory *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_SubtractionHistory" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_SubtractionHistory" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_SubtractionHistory" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_SubtractionHistory" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  {
    try {
      result = (fastjet::contrib::piranha::SubtractionHistory *)new fastjet::contrib::piranha::SubtractionHistory(arg1,arg2,arg3,arg4); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__SubtractionHistory, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SubtractionHistory(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_SubtractionHistory", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_SubtractionHistory__SWIG_0(self, argc, argv);
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_SubtractionHistory__SWIG_1(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_SubtractionHistory'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    fastjet::contrib::piranha::SubtractionHistory::SubtractionHistory()\n"
    "    fastjet::contrib::piranha::SubtractionHistory::SubtractionHistory(double,double,unsigned int,unsigned int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SubtractionHistory_areas__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::SubtractionHistory *arg1 = (fastjet::contrib::piranha::SubtractionHistory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__SubtractionHistory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubtractionHistory_areas" "', argument " "1"" of type '" "fastjet::contrib::piranha::SubtractionHistory *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::SubtractionHistory * >(argp1);
  {
    try {
      result = (std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > *) &(arg1)->areas(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubtractionHistory_areas__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::SubtractionHistory *arg1 = (fastjet::contrib::piranha::SubtractionHistory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__SubtractionHistory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubtractionHistory_areas" "', argument " "1"" of type '" "fastjet::contrib::piranha::SubtractionHistory const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::SubtractionHistory * >(argp1);
  {
    try {
      result = (std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > *) &((fastjet::contrib::piranha::SubtractionHistory const *)arg1)->areas(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubtractionHistory_areas(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "SubtractionHistory_areas", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__SubtractionHistory, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SubtractionHistory_areas__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__SubtractionHistory, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SubtractionHistory_areas__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'SubtractionHistory_areas'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    fastjet::contrib::piranha::SubtractionHistory::areas()\n"
    "    fastjet::contrib::piranha::SubtractionHistory::areas() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SubtractionHistory_zpt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::SubtractionHistory *arg1 = (fastjet::contrib::piranha::SubtractionHistory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__SubtractionHistory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubtractionHistory_zpt" "', argument " "1"" of type '" "fastjet::contrib::piranha::SubtractionHistory const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::SubtractionHistory * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::SubtractionHistory const *)arg1)->zpt(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubtractionHistory_zemd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::SubtractionHistory *arg1 = (fastjet::contrib::piranha::SubtractionHistory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__SubtractionHistory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubtractionHistory_zemd" "', argument " "1"" of type '" "fastjet::contrib::piranha::SubtractionHistory const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::SubtractionHistory * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::SubtractionHistory const *)arg1)->zemd(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubtractionHistory_emdtot__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::SubtractionHistory *arg1 = (fastjet::contrib::piranha::SubtractionHistory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__SubtractionHistory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubtractionHistory_emdtot" "', argument " "1"" of type '" "fastjet::contrib::piranha::SubtractionHistory const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::SubtractionHistory * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::SubtractionHistory const *)arg1)->emdtot(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubtractionHistory_nvalid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::SubtractionHistory *arg1 = (fastjet::contrib::piranha::SubtractionHistory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__SubtractionHistory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubtractionHistory_nvalid" "', argument " "1"" of type '" "fastjet::contrib::piranha::SubtractionHistory const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::SubtractionHistory * >(argp1);
  {
    try {
      result = (unsigned int)((fastjet::contrib::piranha::SubtractionHistory const *)arg1)->nvalid(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubtractionHistory_nremoved__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::SubtractionHistory *arg1 = (fastjet::contrib::piranha::SubtractionHistory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__SubtractionHistory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubtractionHistory_nremoved" "', argument " "1"" of type '" "fastjet::contrib::piranha::SubtractionHistory const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::SubtractionHistory * >(argp1);
  {
    try {
      result = (unsigned int)((fastjet::contrib::piranha::SubtractionHistory const *)arg1)->nremoved(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubtractionHistory_emdtot__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::SubtractionHistory *arg1 = (fastjet::contrib::piranha::SubtractionHistory *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__SubtractionHistory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubtractionHistory_emdtot" "', argument " "1"" of type '" "fastjet::contrib::piranha::SubtractionHistory *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::SubtractionHistory * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SubtractionHistory_emdtot" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    try {
      (arg1)->emdtot(arg2); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubtractionHistory_emdtot(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "SubtractionHistory_emdtot", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__SubtractionHistory, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SubtractionHistory_emdtot__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__SubtractionHistory, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SubtractionHistory_emdtot__SWIG_1(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'SubtractionHistory_emdtot'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    fastjet::contrib::piranha::SubtractionHistory::emdtot() const\n"
    "    fastjet::contrib::piranha::SubtractionHistory::emdtot(double)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SubtractionHistory_nremoved__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::SubtractionHistory *arg1 = (fastjet::contrib::piranha::SubtractionHistory *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__SubtractionHistory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubtractionHistory_nremoved" "', argument " "1"" of type '" "fastjet::contrib::piranha::SubtractionHistory *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::SubtractionHistory * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SubtractionHistory_nremoved" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      (arg1)->nremoved(arg2); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubtractionHistory_nremoved(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "SubtractionHistory_nremoved", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__SubtractionHistory, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SubtractionHistory_nremoved__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__SubtractionHistory, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SubtractionHistory_nremoved__SWIG_1(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'SubtractionHistory_nremoved'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    fastjet::contrib::piranha::SubtractionHistory::nremoved() const\n"
    "    fastjet::contrib::piranha::SubtractionHistory::nremoved(unsigned int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_SubtractionHistory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::SubtractionHistory *arg1 = (fastjet::contrib::piranha::SubtractionHistory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__SubtractionHistory, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SubtractionHistory" "', argument " "1"" of type '" "fastjet::contrib::piranha::SubtractionHistory *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::SubtractionHistory * >(argp1);
  {
    try {
      delete arg1; 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SubtractionHistory_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_fastjet__contrib__piranha__SubtractionHistory, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *SubtractionHistory_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_GhostGridBase__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  double arg2 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  fastjet::contrib::piranha::GhostGridBase *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_GhostGridBase" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_GhostGridBase" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    try {
      result = (fastjet::contrib::piranha::GhostGridBase *)new fastjet::contrib::piranha::GhostGridBase(arg1,arg2); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__GhostGridBase, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_GhostGridBase__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  fastjet::contrib::piranha::GhostGridBase *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_GhostGridBase" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_GhostGridBase" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (fastjet::contrib::piranha::GhostGridBase *)new fastjet::contrib::piranha::GhostGridBase(arg1,arg2); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__GhostGridBase, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_GhostGridBase(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_GhostGridBase", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_GhostGridBase__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_GhostGridBase__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_GhostGridBase'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    fastjet::contrib::piranha::GhostGridBase::GhostGridBase(double,double)\n"
    "    fastjet::contrib::piranha::GhostGridBase::GhostGridBase(unsigned int,unsigned int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_GhostGridBase(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::GhostGridBase *arg1 = (fastjet::contrib::piranha::GhostGridBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__GhostGridBase, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_GhostGridBase" "', argument " "1"" of type '" "fastjet::contrib::piranha::GhostGridBase *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::GhostGridBase * >(argp1);
  {
    try {
      delete arg1; 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GhostGridBase_description(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::GhostGridBase *arg1 = (fastjet::contrib::piranha::GhostGridBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__GhostGridBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GhostGridBase_description" "', argument " "1"" of type '" "fastjet::contrib::piranha::GhostGridBase const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::GhostGridBase * >(argp1);
  {
    try {
      result = ((fastjet::contrib::piranha::GhostGridBase const *)arg1)->description(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GhostGridBase_drap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::GhostGridBase *arg1 = (fastjet::contrib::piranha::GhostGridBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__GhostGridBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GhostGridBase_drap" "', argument " "1"" of type '" "fastjet::contrib::piranha::GhostGridBase const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::GhostGridBase * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::GhostGridBase const *)arg1)->drap(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GhostGridBase_dphi(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::GhostGridBase *arg1 = (fastjet::contrib::piranha::GhostGridBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__GhostGridBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GhostGridBase_dphi" "', argument " "1"" of type '" "fastjet::contrib::piranha::GhostGridBase const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::GhostGridBase * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::GhostGridBase const *)arg1)->dphi(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GhostGridBase_nrap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::GhostGridBase *arg1 = (fastjet::contrib::piranha::GhostGridBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__GhostGridBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GhostGridBase_nrap" "', argument " "1"" of type '" "fastjet::contrib::piranha::GhostGridBase const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::GhostGridBase * >(argp1);
  {
    try {
      result = (unsigned int)((fastjet::contrib::piranha::GhostGridBase const *)arg1)->nrap(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GhostGridBase_nphi(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::GhostGridBase *arg1 = (fastjet::contrib::piranha::GhostGridBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__GhostGridBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GhostGridBase_nphi" "', argument " "1"" of type '" "fastjet::contrib::piranha::GhostGridBase const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::GhostGridBase * >(argp1);
  {
    try {
      result = (unsigned int)((fastjet::contrib::piranha::GhostGridBase const *)arg1)->nphi(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GhostGridBase_points(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::GhostGridBase *arg1 = (fastjet::contrib::piranha::GhostGridBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > > *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__GhostGridBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GhostGridBase_points" "', argument " "1"" of type '" "fastjet::contrib::piranha::GhostGridBase *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::GhostGridBase * >(argp1);
  {
    try {
      result = (std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > > *) &(arg1)->points(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > > >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GhostGridBase_ghosts(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::GhostGridBase *arg1 = (fastjet::contrib::piranha::GhostGridBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__GhostGridBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GhostGridBase_ghosts" "', argument " "1"" of type '" "fastjet::contrib::piranha::GhostGridBase const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::GhostGridBase * >(argp1);
  {
    try {
      result = (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *) &((fastjet::contrib::piranha::GhostGridBase const *)arg1)->ghosts(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GhostGridBase_nghosts(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::GhostGridBase *arg1 = (fastjet::contrib::piranha::GhostGridBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::size_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__GhostGridBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GhostGridBase_nghosts" "', argument " "1"" of type '" "fastjet::contrib::piranha::GhostGridBase *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::GhostGridBase * >(argp1);
  {
    try {
      result = (arg1)->nghosts(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *GhostGridBase_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_fastjet__contrib__piranha__GhostGridBase, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *GhostGridBase_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_GhostGridRectangle__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  double arg2 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  fastjet::contrib::piranha::GhostGridRectangle *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_GhostGridRectangle" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_GhostGridRectangle" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    try {
      result = (fastjet::contrib::piranha::GhostGridRectangle *)new fastjet::contrib::piranha::GhostGridRectangle(arg1,arg2); 
    }
    CATCH_STD_INVALID_ARGUMENT
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__GhostGridRectangle, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_GhostGridRectangle__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  unsigned int arg2 ;
  double val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  fastjet::contrib::piranha::GhostGridRectangle *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_GhostGridRectangle" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_GhostGridRectangle" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (fastjet::contrib::piranha::GhostGridRectangle *)new fastjet::contrib::piranha::GhostGridRectangle(arg1,arg2); 
    }
    CATCH_STD_INVALID_ARGUMENT
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__GhostGridRectangle, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_GhostGridRectangle__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  fastjet::contrib::piranha::GhostGridRectangle *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_GhostGridRectangle" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_GhostGridRectangle" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_GhostGridRectangle" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  ecode4 = SWIG_AsVal_double(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_GhostGridRectangle" "', argument " "4"" of type '" "double""'");
  } 
  arg4 = static_cast< double >(val4);
  {
    try {
      result = (fastjet::contrib::piranha::GhostGridRectangle *)new fastjet::contrib::piranha::GhostGridRectangle(arg1,arg2,arg3,arg4); 
    }
    CATCH_STD_INVALID_ARGUMENT
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__GhostGridRectangle, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_GhostGridRectangle__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  double arg2 ;
  unsigned int arg3 ;
  unsigned int arg4 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  fastjet::contrib::piranha::GhostGridRectangle *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_GhostGridRectangle" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_GhostGridRectangle" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_GhostGridRectangle" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_GhostGridRectangle" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  {
    try {
      result = (fastjet::contrib::piranha::GhostGridRectangle *)new fastjet::contrib::piranha::GhostGridRectangle(arg1,arg2,arg3,arg4); 
    }
    CATCH_STD_INVALID_ARGUMENT
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__GhostGridRectangle, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_GhostGridRectangle__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  double val5 ;
  int ecode5 = 0 ;
  double val6 ;
  int ecode6 = 0 ;
  fastjet::contrib::piranha::GhostGridRectangle *result = 0 ;
  
  if ((nobjs < 6) || (nobjs > 6)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_GhostGridRectangle" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_GhostGridRectangle" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_GhostGridRectangle" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  ecode4 = SWIG_AsVal_double(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_GhostGridRectangle" "', argument " "4"" of type '" "double""'");
  } 
  arg4 = static_cast< double >(val4);
  ecode5 = SWIG_AsVal_double(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_GhostGridRectangle" "', argument " "5"" of type '" "double""'");
  } 
  arg5 = static_cast< double >(val5);
  ecode6 = SWIG_AsVal_double(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_GhostGridRectangle" "', argument " "6"" of type '" "double""'");
  } 
  arg6 = static_cast< double >(val6);
  {
    try {
      result = (fastjet::contrib::piranha::GhostGridRectangle *)new fastjet::contrib::piranha::GhostGridRectangle(arg1,arg2,arg3,arg4,arg5,arg6); 
    }
    CATCH_STD_INVALID_ARGUMENT
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__GhostGridRectangle, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_GhostGridRectangle__SWIG_5(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  unsigned int arg5 ;
  unsigned int arg6 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  unsigned int val6 ;
  int ecode6 = 0 ;
  fastjet::contrib::piranha::GhostGridRectangle *result = 0 ;
  
  if ((nobjs < 6) || (nobjs > 6)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_GhostGridRectangle" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_GhostGridRectangle" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_GhostGridRectangle" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  ecode4 = SWIG_AsVal_double(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_GhostGridRectangle" "', argument " "4"" of type '" "double""'");
  } 
  arg4 = static_cast< double >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_GhostGridRectangle" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  ecode6 = SWIG_AsVal_unsigned_SS_int(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_GhostGridRectangle" "', argument " "6"" of type '" "unsigned int""'");
  } 
  arg6 = static_cast< unsigned int >(val6);
  {
    try {
      result = (fastjet::contrib::piranha::GhostGridRectangle *)new fastjet::contrib::piranha::GhostGridRectangle(arg1,arg2,arg3,arg4,arg5,arg6); 
    }
    CATCH_STD_INVALID_ARGUMENT
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__GhostGridRectangle, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_GhostGridRectangle(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[7] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_GhostGridRectangle", 0, 6, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_GhostGridRectangle__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_GhostGridRectangle__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_GhostGridRectangle__SWIG_3(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_GhostGridRectangle__SWIG_2(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_unsigned_SS_int(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_new_GhostGridRectangle__SWIG_5(self, argc, argv);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_new_GhostGridRectangle__SWIG_4(self, argc, argv);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_GhostGridRectangle'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    fastjet::contrib::piranha::GhostGridRectangle::GhostGridRectangle(double,double)\n"
    "    fastjet::contrib::piranha::GhostGridRectangle::GhostGridRectangle(double,unsigned int)\n"
    "    fastjet::contrib::piranha::GhostGridRectangle::GhostGridRectangle(double,double,double,double)\n"
    "    fastjet::contrib::piranha::GhostGridRectangle::GhostGridRectangle(double,double,unsigned int,unsigned int)\n"
    "    fastjet::contrib::piranha::GhostGridRectangle::GhostGridRectangle(double,double,double,double,double,double)\n"
    "    fastjet::contrib::piranha::GhostGridRectangle::GhostGridRectangle(double,double,double,double,unsigned int,unsigned int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_GhostGridRectangle_description(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::GhostGridRectangle *arg1 = (fastjet::contrib::piranha::GhostGridRectangle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__GhostGridRectangle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GhostGridRectangle_description" "', argument " "1"" of type '" "fastjet::contrib::piranha::GhostGridRectangle const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::GhostGridRectangle * >(argp1);
  {
    try {
      result = ((fastjet::contrib::piranha::GhostGridRectangle const *)arg1)->description(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GhostGridRectangle_region(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::GhostGridRectangle *arg1 = (fastjet::contrib::piranha::GhostGridRectangle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::pair< std::pair< double,double >,std::pair< double,double > > result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__GhostGridRectangle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GhostGridRectangle_region" "', argument " "1"" of type '" "fastjet::contrib::piranha::GhostGridRectangle const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::GhostGridRectangle * >(argp1);
  {
    try {
      result = ((fastjet::contrib::piranha::GhostGridRectangle const *)arg1)->region(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::pair< std::pair< double,double >,std::pair< double,double > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GhostGridRectangle___str__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::GhostGridRectangle *arg1 = (fastjet::contrib::piranha::GhostGridRectangle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__GhostGridRectangle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GhostGridRectangle___str__" "', argument " "1"" of type '" "fastjet::contrib::piranha::GhostGridRectangle const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::GhostGridRectangle * >(argp1);
  {
    try {
      result = fastjet_contrib_piranha_GhostGridRectangle___str__((fastjet::contrib::piranha::GhostGridRectangle const *)arg1); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GhostGridRectangle___repr__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::GhostGridRectangle *arg1 = (fastjet::contrib::piranha::GhostGridRectangle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__GhostGridRectangle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GhostGridRectangle___repr__" "', argument " "1"" of type '" "fastjet::contrib::piranha::GhostGridRectangle const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::GhostGridRectangle * >(argp1);
  {
    try {
      result = fastjet_contrib_piranha_GhostGridRectangle___repr__((fastjet::contrib::piranha::GhostGridRectangle const *)arg1); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_GhostGridRectangle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::GhostGridRectangle *arg1 = (fastjet::contrib::piranha::GhostGridRectangle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__GhostGridRectangle, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_GhostGridRectangle" "', argument " "1"" of type '" "fastjet::contrib::piranha::GhostGridRectangle *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::GhostGridRectangle * >(argp1);
  {
    try {
      delete arg1; 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *GhostGridRectangle_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_fastjet__contrib__piranha__GhostGridRectangle, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *GhostGridRectangle_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_GhostGridDisk__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  double arg2 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  fastjet::contrib::piranha::GhostGridDisk *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_GhostGridDisk" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_GhostGridDisk" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    try {
      result = (fastjet::contrib::piranha::GhostGridDisk *)new fastjet::contrib::piranha::GhostGridDisk(arg1,arg2); 
    }
    CATCH_STD_INVALID_ARGUMENT
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__GhostGridDisk, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_GhostGridDisk__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  unsigned int arg2 ;
  double val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  fastjet::contrib::piranha::GhostGridDisk *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_GhostGridDisk" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_GhostGridDisk" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (fastjet::contrib::piranha::GhostGridDisk *)new fastjet::contrib::piranha::GhostGridDisk(arg1,arg2); 
    }
    CATCH_STD_INVALID_ARGUMENT
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__GhostGridDisk, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_GhostGridDisk__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  fastjet::contrib::piranha::GhostGridDisk *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_GhostGridDisk" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_GhostGridDisk" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_GhostGridDisk" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  {
    try {
      result = (fastjet::contrib::piranha::GhostGridDisk *)new fastjet::contrib::piranha::GhostGridDisk(arg1,arg2,arg3); 
    }
    CATCH_STD_INVALID_ARGUMENT
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__GhostGridDisk, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_GhostGridDisk__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  double val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  fastjet::contrib::piranha::GhostGridDisk *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_GhostGridDisk" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_GhostGridDisk" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_GhostGridDisk" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  {
    try {
      result = (fastjet::contrib::piranha::GhostGridDisk *)new fastjet::contrib::piranha::GhostGridDisk(arg1,arg2,arg3); 
    }
    CATCH_STD_INVALID_ARGUMENT
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__GhostGridDisk, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_GhostGridDisk(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_GhostGridDisk", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_GhostGridDisk__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_GhostGridDisk__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_GhostGridDisk__SWIG_3(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_GhostGridDisk__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_GhostGridDisk'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    fastjet::contrib::piranha::GhostGridDisk::GhostGridDisk(double,double)\n"
    "    fastjet::contrib::piranha::GhostGridDisk::GhostGridDisk(double,unsigned int)\n"
    "    fastjet::contrib::piranha::GhostGridDisk::GhostGridDisk(double,double,double)\n"
    "    fastjet::contrib::piranha::GhostGridDisk::GhostGridDisk(double,unsigned int,unsigned int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_GhostGridDisk_description(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::GhostGridDisk *arg1 = (fastjet::contrib::piranha::GhostGridDisk *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__GhostGridDisk, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GhostGridDisk_description" "', argument " "1"" of type '" "fastjet::contrib::piranha::GhostGridDisk const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::GhostGridDisk * >(argp1);
  {
    try {
      result = ((fastjet::contrib::piranha::GhostGridDisk const *)arg1)->description(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GhostGridDisk_R(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::GhostGridDisk *arg1 = (fastjet::contrib::piranha::GhostGridDisk *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__GhostGridDisk, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GhostGridDisk_R" "', argument " "1"" of type '" "fastjet::contrib::piranha::GhostGridDisk const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::GhostGridDisk * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::GhostGridDisk const *)arg1)->R(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GhostGridDisk___str__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::GhostGridDisk *arg1 = (fastjet::contrib::piranha::GhostGridDisk *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__GhostGridDisk, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GhostGridDisk___str__" "', argument " "1"" of type '" "fastjet::contrib::piranha::GhostGridDisk const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::GhostGridDisk * >(argp1);
  {
    try {
      result = fastjet_contrib_piranha_GhostGridDisk___str__((fastjet::contrib::piranha::GhostGridDisk const *)arg1); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GhostGridDisk___repr__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::GhostGridDisk *arg1 = (fastjet::contrib::piranha::GhostGridDisk *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__GhostGridDisk, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GhostGridDisk___repr__" "', argument " "1"" of type '" "fastjet::contrib::piranha::GhostGridDisk const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::GhostGridDisk * >(argp1);
  {
    try {
      result = fastjet_contrib_piranha_GhostGridDisk___repr__((fastjet::contrib::piranha::GhostGridDisk const *)arg1); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_GhostGridDisk(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::GhostGridDisk *arg1 = (fastjet::contrib::piranha::GhostGridDisk *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__GhostGridDisk, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_GhostGridDisk" "', argument " "1"" of type '" "fastjet::contrib::piranha::GhostGridDisk *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::GhostGridDisk * >(argp1);
  {
    try {
      delete arg1; 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *GhostGridDisk_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_fastjet__contrib__piranha__GhostGridDisk, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *GhostGridDisk_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_IteratedVoronoiSubtractorDiskBase(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_IteratedVoronoiSubtractorDiskBase", 0, 0, 0)) SWIG_fail;
  {
    try {
      result = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *)new fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk >(); 
    }
    CATCH_STD_INVALID_ARGUMENT
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiDisk_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_IteratedVoronoiSubtractorDiskBase(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiDisk_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_IteratedVoronoiSubtractorDiskBase" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > * >(argp1);
  {
    try {
      delete arg1; 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorDiskBase_description(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiDisk_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorDiskBase_description" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > * >(argp1);
  {
    try {
      result = ((fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > const *)arg1)->description(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorDiskBase_set_z(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"z",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:IteratedVoronoiSubtractorDiskBase_set_z", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiDisk_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorDiskBase_set_z" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IteratedVoronoiSubtractorDiskBase_set_z" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    try {
      (arg1)->set_z(arg2); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorDiskBase_set_zpt(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"z",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:IteratedVoronoiSubtractorDiskBase_set_zpt", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiDisk_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorDiskBase_set_zpt" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IteratedVoronoiSubtractorDiskBase_set_zpt" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    try {
      (arg1)->set_zpt(arg2); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorDiskBase_set_zemd(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"z",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:IteratedVoronoiSubtractorDiskBase_set_zemd", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiDisk_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorDiskBase_set_zemd" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IteratedVoronoiSubtractorDiskBase_set_zemd" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    try {
      (arg1)->set_zemd(arg2); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorDiskBase_set_background_estimator(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *) 0 ;
  fastjet::BackgroundEstimatorBase *arg2 = (fastjet::BackgroundEstimatorBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"bge",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:IteratedVoronoiSubtractorDiskBase_set_background_estimator", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiDisk_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorDiskBase_set_background_estimator" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_fastjet__BackgroundEstimatorBase, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IteratedVoronoiSubtractorDiskBase_set_background_estimator" "', argument " "2"" of type '" "fastjet::BackgroundEstimatorBase *""'"); 
  }
  arg2 = reinterpret_cast< fastjet::BackgroundEstimatorBase * >(argp2);
  {
    try {
      (arg1)->set_background_estimator(arg2); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorDiskBase_set_rho_subtraction_mode(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *) 0 ;
  fastjet::contrib::piranha::RhoSubtractionMode arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"rho_mode",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:IteratedVoronoiSubtractorDiskBase_set_rho_subtraction_mode", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiDisk_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorDiskBase_set_rho_subtraction_mode" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IteratedVoronoiSubtractorDiskBase_set_rho_subtraction_mode" "', argument " "2"" of type '" "fastjet::contrib::piranha::RhoSubtractionMode""'");
  } 
  arg2 = static_cast< fastjet::contrib::piranha::RhoSubtractionMode >(val2);
  {
    try {
      (arg1)->set_rho_subtraction_mode(arg2); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorDiskBase_set_jet_constituents_use_same_rho(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"b",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:IteratedVoronoiSubtractorDiskBase_set_jet_constituents_use_same_rho", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiDisk_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorDiskBase_set_jet_constituents_use_same_rho" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IteratedVoronoiSubtractorDiskBase_set_jet_constituents_use_same_rho" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      (arg1)->set_jet_constituents_use_same_rho(arg2); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorDiskBase_set_subtraction_type(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *) 0 ;
  fastjet::contrib::piranha::SubtractionType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"subtype",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:IteratedVoronoiSubtractorDiskBase_set_subtraction_type", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiDisk_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorDiskBase_set_subtraction_type" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IteratedVoronoiSubtractorDiskBase_set_subtraction_type" "', argument " "2"" of type '" "fastjet::contrib::piranha::SubtractionType""'");
  } 
  arg2 = static_cast< fastjet::contrib::piranha::SubtractionType >(val2);
  {
    try {
      (arg1)->set_subtraction_type(arg2); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorDiskBase_set_R(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"R",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:IteratedVoronoiSubtractorDiskBase_set_R", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiDisk_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorDiskBase_set_R" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IteratedVoronoiSubtractorDiskBase_set_R" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    try {
      (arg1)->set_R(arg2); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorDiskBase_set_allow_repeats(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"allow",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:IteratedVoronoiSubtractorDiskBase_set_allow_repeats", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiDisk_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorDiskBase_set_allow_repeats" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IteratedVoronoiSubtractorDiskBase_set_allow_repeats" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      (arg1)->set_allow_repeats(arg2); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorDiskBase_set_store_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"store",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:IteratedVoronoiSubtractorDiskBase_set_store_history", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiDisk_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorDiskBase_set_store_history" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IteratedVoronoiSubtractorDiskBase_set_store_history" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      (arg1)->set_store_history(arg2); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorDiskBase_zpt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiDisk_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorDiskBase_zpt" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > const *)arg1)->zpt(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorDiskBase_zemd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiDisk_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorDiskBase_zemd" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > const *)arg1)->zemd(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorDiskBase_background_estimator__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  fastjet::BackgroundEstimatorBase *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiDisk_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorDiskBase_background_estimator" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > * >(argp1);
  {
    try {
      result = (fastjet::BackgroundEstimatorBase *)(arg1)->background_estimator(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__BackgroundEstimatorBase, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorDiskBase_background_estimator__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  fastjet::BackgroundEstimatorBase *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiDisk_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorDiskBase_background_estimator" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > * >(argp1);
  {
    try {
      result = (fastjet::BackgroundEstimatorBase *)((fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > const *)arg1)->background_estimator(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__BackgroundEstimatorBase, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorDiskBase_background_estimator(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "IteratedVoronoiSubtractorDiskBase_background_estimator", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiDisk_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_IteratedVoronoiSubtractorDiskBase_background_estimator__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiDisk_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_IteratedVoronoiSubtractorDiskBase_background_estimator__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'IteratedVoronoiSubtractorDiskBase_background_estimator'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk >::background_estimator()\n"
    "    fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk >::background_estimator() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorDiskBase_jet_constituents_use_same_rho(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiDisk_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorDiskBase_jet_constituents_use_same_rho" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > * >(argp1);
  {
    try {
      result = (bool)((fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > const *)arg1)->jet_constituents_use_same_rho(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorDiskBase_rho_subtraction_mode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  fastjet::contrib::piranha::RhoSubtractionMode result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiDisk_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorDiskBase_rho_subtraction_mode" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > * >(argp1);
  {
    try {
      result = (fastjet::contrib::piranha::RhoSubtractionMode)((fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > const *)arg1)->rho_subtraction_mode(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorDiskBase_track_emds(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiDisk_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorDiskBase_track_emds" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > * >(argp1);
  {
    try {
      result = (bool)((fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > const *)arg1)->track_emds(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorDiskBase_total_area(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiDisk_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorDiskBase_total_area" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > const *)arg1)->total_area(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorDiskBase_subtraction_type(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  fastjet::contrib::piranha::SubtractionType result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiDisk_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorDiskBase_subtraction_type" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > * >(argp1);
  {
    try {
      result = (fastjet::contrib::piranha::SubtractionType)((fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > const *)arg1)->subtraction_type(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorDiskBase_R(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiDisk_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorDiskBase_R" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > const *)arg1)->R(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorDiskBase_allow_repeats(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiDisk_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorDiskBase_allow_repeats" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > * >(argp1);
  {
    try {
      result = (bool)((fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > const *)arg1)->allow_repeats(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorDiskBase_store_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiDisk_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorDiskBase_store_history" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > * >(argp1);
  {
    try {
      result = (bool)((fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > const *)arg1)->store_history(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorDiskBase_vor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  fastjet::contrib::piranha::DynamicVoronoiDisk *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiDisk_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorDiskBase_vor" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > * >(argp1);
  {
    try {
      result = (fastjet::contrib::piranha::DynamicVoronoiDisk *) &((fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > const *)arg1)->vor(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__DynamicVoronoiDisk, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorDiskBase_reapply(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiDisk_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorDiskBase_reapply" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > * >(argp1);
  {
    try {
      result = (arg1)->reapply(); 
    }
    CATCH_STD_INVALID_ARGUMENT
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorDiskBase_emd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiDisk_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorDiskBase_emd" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > const *)arg1)->emd(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorDiskBase_nvalid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiDisk_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorDiskBase_nvalid" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > * >(argp1);
  {
    try {
      result = (unsigned int)((fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > const *)arg1)->nvalid(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorDiskBase_nremoved(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiDisk_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorDiskBase_nremoved" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > * >(argp1);
  {
    try {
      result = (unsigned int)((fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > const *)arg1)->nremoved(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorDiskBase_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > > *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiDisk_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorDiskBase_history" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > * >(argp1);
  {
    try {
      result = (std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > > *) &((fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > const *)arg1)->history(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > > >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorDiskBase_hist_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiDisk_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorDiskBase_hist_size" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > * >(argp1);
  {
    try {
      result = (unsigned int)((fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > const *)arg1)->hist_size(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorDiskBase_hist_i_areas_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"i",  NULL 
  };
  unsigned int result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:IteratedVoronoiSubtractorDiskBase_hist_i_areas_size", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiDisk_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorDiskBase_hist_i_areas_size" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IteratedVoronoiSubtractorDiskBase_hist_i_areas_size" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (unsigned int)((fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > const *)arg1)->hist_i_areas_size(arg2); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorDiskBase___str__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiDisk_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorDiskBase___str__" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > * >(argp1);
  {
    try {
      result = fastjet_contrib_piranha_IteratedVoronoiSubtractorBase_Sl_fastjet_contrib_piranha_DynamicVoronoiDisk_Sg____str__((fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > const *)arg1); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorDiskBase___repr__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiDisk_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorDiskBase___repr__" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > * >(argp1);
  {
    try {
      result = fastjet_contrib_piranha_IteratedVoronoiSubtractorBase_Sl_fastjet_contrib_piranha_DynamicVoronoiDisk_Sg____repr__((fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > const *)arg1); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *IteratedVoronoiSubtractorDiskBase_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiDisk_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *IteratedVoronoiSubtractorDiskBase_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_IteratedVoronoiSubtractorCylinderBase(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_IteratedVoronoiSubtractorCylinderBase", 0, 0, 0)) SWIG_fail;
  {
    try {
      result = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *)new fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder >(); 
    }
    CATCH_STD_INVALID_ARGUMENT
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiCylinder_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_IteratedVoronoiSubtractorCylinderBase(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiCylinder_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_IteratedVoronoiSubtractorCylinderBase" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > * >(argp1);
  {
    try {
      delete arg1; 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorCylinderBase_description(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiCylinder_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorCylinderBase_description" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > * >(argp1);
  {
    try {
      result = ((fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > const *)arg1)->description(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorCylinderBase_set_z(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"z",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:IteratedVoronoiSubtractorCylinderBase_set_z", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiCylinder_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorCylinderBase_set_z" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IteratedVoronoiSubtractorCylinderBase_set_z" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    try {
      (arg1)->set_z(arg2); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorCylinderBase_set_zpt(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"z",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:IteratedVoronoiSubtractorCylinderBase_set_zpt", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiCylinder_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorCylinderBase_set_zpt" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IteratedVoronoiSubtractorCylinderBase_set_zpt" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    try {
      (arg1)->set_zpt(arg2); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorCylinderBase_set_zemd(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"z",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:IteratedVoronoiSubtractorCylinderBase_set_zemd", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiCylinder_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorCylinderBase_set_zemd" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IteratedVoronoiSubtractorCylinderBase_set_zemd" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    try {
      (arg1)->set_zemd(arg2); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorCylinderBase_set_background_estimator(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *) 0 ;
  fastjet::BackgroundEstimatorBase *arg2 = (fastjet::BackgroundEstimatorBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"bge",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:IteratedVoronoiSubtractorCylinderBase_set_background_estimator", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiCylinder_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorCylinderBase_set_background_estimator" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_fastjet__BackgroundEstimatorBase, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IteratedVoronoiSubtractorCylinderBase_set_background_estimator" "', argument " "2"" of type '" "fastjet::BackgroundEstimatorBase *""'"); 
  }
  arg2 = reinterpret_cast< fastjet::BackgroundEstimatorBase * >(argp2);
  {
    try {
      (arg1)->set_background_estimator(arg2); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorCylinderBase_set_rho_subtraction_mode(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *) 0 ;
  fastjet::contrib::piranha::RhoSubtractionMode arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"rho_mode",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:IteratedVoronoiSubtractorCylinderBase_set_rho_subtraction_mode", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiCylinder_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorCylinderBase_set_rho_subtraction_mode" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IteratedVoronoiSubtractorCylinderBase_set_rho_subtraction_mode" "', argument " "2"" of type '" "fastjet::contrib::piranha::RhoSubtractionMode""'");
  } 
  arg2 = static_cast< fastjet::contrib::piranha::RhoSubtractionMode >(val2);
  {
    try {
      (arg1)->set_rho_subtraction_mode(arg2); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorCylinderBase_set_jet_constituents_use_same_rho(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"b",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:IteratedVoronoiSubtractorCylinderBase_set_jet_constituents_use_same_rho", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiCylinder_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorCylinderBase_set_jet_constituents_use_same_rho" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IteratedVoronoiSubtractorCylinderBase_set_jet_constituents_use_same_rho" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      (arg1)->set_jet_constituents_use_same_rho(arg2); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorCylinderBase_set_subtraction_type(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *) 0 ;
  fastjet::contrib::piranha::SubtractionType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"subtype",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:IteratedVoronoiSubtractorCylinderBase_set_subtraction_type", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiCylinder_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorCylinderBase_set_subtraction_type" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IteratedVoronoiSubtractorCylinderBase_set_subtraction_type" "', argument " "2"" of type '" "fastjet::contrib::piranha::SubtractionType""'");
  } 
  arg2 = static_cast< fastjet::contrib::piranha::SubtractionType >(val2);
  {
    try {
      (arg1)->set_subtraction_type(arg2); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorCylinderBase_set_R(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"R",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:IteratedVoronoiSubtractorCylinderBase_set_R", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiCylinder_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorCylinderBase_set_R" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IteratedVoronoiSubtractorCylinderBase_set_R" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    try {
      (arg1)->set_R(arg2); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorCylinderBase_set_allow_repeats(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"allow",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:IteratedVoronoiSubtractorCylinderBase_set_allow_repeats", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiCylinder_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorCylinderBase_set_allow_repeats" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IteratedVoronoiSubtractorCylinderBase_set_allow_repeats" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      (arg1)->set_allow_repeats(arg2); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorCylinderBase_set_store_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"store",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:IteratedVoronoiSubtractorCylinderBase_set_store_history", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiCylinder_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorCylinderBase_set_store_history" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IteratedVoronoiSubtractorCylinderBase_set_store_history" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      (arg1)->set_store_history(arg2); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorCylinderBase_zpt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiCylinder_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorCylinderBase_zpt" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > const *)arg1)->zpt(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorCylinderBase_zemd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiCylinder_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorCylinderBase_zemd" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > const *)arg1)->zemd(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorCylinderBase_background_estimator__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  fastjet::BackgroundEstimatorBase *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiCylinder_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorCylinderBase_background_estimator" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > * >(argp1);
  {
    try {
      result = (fastjet::BackgroundEstimatorBase *)(arg1)->background_estimator(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__BackgroundEstimatorBase, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorCylinderBase_background_estimator__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  fastjet::BackgroundEstimatorBase *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiCylinder_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorCylinderBase_background_estimator" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > * >(argp1);
  {
    try {
      result = (fastjet::BackgroundEstimatorBase *)((fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > const *)arg1)->background_estimator(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__BackgroundEstimatorBase, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorCylinderBase_background_estimator(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "IteratedVoronoiSubtractorCylinderBase_background_estimator", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiCylinder_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_IteratedVoronoiSubtractorCylinderBase_background_estimator__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiCylinder_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_IteratedVoronoiSubtractorCylinderBase_background_estimator__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'IteratedVoronoiSubtractorCylinderBase_background_estimator'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder >::background_estimator()\n"
    "    fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder >::background_estimator() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorCylinderBase_jet_constituents_use_same_rho(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiCylinder_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorCylinderBase_jet_constituents_use_same_rho" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > * >(argp1);
  {
    try {
      result = (bool)((fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > const *)arg1)->jet_constituents_use_same_rho(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorCylinderBase_rho_subtraction_mode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  fastjet::contrib::piranha::RhoSubtractionMode result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiCylinder_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorCylinderBase_rho_subtraction_mode" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > * >(argp1);
  {
    try {
      result = (fastjet::contrib::piranha::RhoSubtractionMode)((fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > const *)arg1)->rho_subtraction_mode(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorCylinderBase_track_emds(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiCylinder_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorCylinderBase_track_emds" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > * >(argp1);
  {
    try {
      result = (bool)((fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > const *)arg1)->track_emds(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorCylinderBase_total_area(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiCylinder_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorCylinderBase_total_area" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > const *)arg1)->total_area(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorCylinderBase_subtraction_type(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  fastjet::contrib::piranha::SubtractionType result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiCylinder_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorCylinderBase_subtraction_type" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > * >(argp1);
  {
    try {
      result = (fastjet::contrib::piranha::SubtractionType)((fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > const *)arg1)->subtraction_type(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorCylinderBase_R(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiCylinder_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorCylinderBase_R" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > const *)arg1)->R(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorCylinderBase_allow_repeats(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiCylinder_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorCylinderBase_allow_repeats" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > * >(argp1);
  {
    try {
      result = (bool)((fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > const *)arg1)->allow_repeats(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorCylinderBase_store_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiCylinder_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorCylinderBase_store_history" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > * >(argp1);
  {
    try {
      result = (bool)((fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > const *)arg1)->store_history(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorCylinderBase_vor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  fastjet::contrib::piranha::DynamicVoronoiCylinder *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiCylinder_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorCylinderBase_vor" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > * >(argp1);
  {
    try {
      result = (fastjet::contrib::piranha::DynamicVoronoiCylinder *) &((fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > const *)arg1)->vor(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__DynamicVoronoiCylinder, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorCylinderBase_reapply(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiCylinder_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorCylinderBase_reapply" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > * >(argp1);
  {
    try {
      result = (arg1)->reapply(); 
    }
    CATCH_STD_INVALID_ARGUMENT
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorCylinderBase_emd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiCylinder_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorCylinderBase_emd" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > const *)arg1)->emd(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorCylinderBase_nvalid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiCylinder_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorCylinderBase_nvalid" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > * >(argp1);
  {
    try {
      result = (unsigned int)((fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > const *)arg1)->nvalid(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorCylinderBase_nremoved(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiCylinder_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorCylinderBase_nremoved" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > * >(argp1);
  {
    try {
      result = (unsigned int)((fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > const *)arg1)->nremoved(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorCylinderBase_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > > *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiCylinder_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorCylinderBase_history" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > * >(argp1);
  {
    try {
      result = (std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > > *) &((fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > const *)arg1)->history(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > > >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorCylinderBase_hist_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiCylinder_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorCylinderBase_hist_size" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > * >(argp1);
  {
    try {
      result = (unsigned int)((fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > const *)arg1)->hist_size(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorCylinderBase_hist_i_areas_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"i",  NULL 
  };
  unsigned int result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:IteratedVoronoiSubtractorCylinderBase_hist_i_areas_size", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiCylinder_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorCylinderBase_hist_i_areas_size" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IteratedVoronoiSubtractorCylinderBase_hist_i_areas_size" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (unsigned int)((fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > const *)arg1)->hist_i_areas_size(arg2); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorCylinderBase___str__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiCylinder_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorCylinderBase___str__" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > * >(argp1);
  {
    try {
      result = fastjet_contrib_piranha_IteratedVoronoiSubtractorBase_Sl_fastjet_contrib_piranha_DynamicVoronoiCylinder_Sg____str__((fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > const *)arg1); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorCylinderBase___repr__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiCylinder_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorCylinderBase___repr__" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > * >(argp1);
  {
    try {
      result = fastjet_contrib_piranha_IteratedVoronoiSubtractorBase_Sl_fastjet_contrib_piranha_DynamicVoronoiCylinder_Sg____repr__((fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > const *)arg1); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *IteratedVoronoiSubtractorCylinderBase_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiCylinder_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *IteratedVoronoiSubtractorCylinderBase_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_OptimalTransportSubtractorTransverseMomentumDeltaR__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseMomentum,fastjet::contrib::emd::DeltaR,lemon::NetworkSimplex< > > *arg2 = 0 ;
  fastjet::contrib::piranha::GhostGridDisk *arg3 = 0 ;
  double val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > > *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_OptimalTransportSubtractorTransverseMomentumDeltaR" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseMomentum_fastjet__contrib__emd__DeltaR_lemon__NetworkSimplexT_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OptimalTransportSubtractorTransverseMomentumDeltaR" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseMomentum,fastjet::contrib::emd::DeltaR,lemon::NetworkSimplex< > > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorTransverseMomentumDeltaR" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseMomentum,fastjet::contrib::emd::DeltaR,lemon::NetworkSimplex< > > const &""'"); 
  }
  arg2 = reinterpret_cast< fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseMomentum,fastjet::contrib::emd::DeltaR,lemon::NetworkSimplex< > > * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridDisk,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_OptimalTransportSubtractorTransverseMomentumDeltaR" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridDisk const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorTransverseMomentumDeltaR" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridDisk const &""'"); 
  }
  arg3 = reinterpret_cast< fastjet::contrib::piranha::GhostGridDisk * >(argp3);
  {
    try {
      result = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > > *)new fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > >(arg1,(fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseMomentum,fastjet::contrib::emd::DeltaR,lemon::NetworkSimplex< > > const &)*arg2,(fastjet::contrib::piranha::GhostGridDisk const &)*arg3); 
    }
    CATCH_STD_INVALID_ARGUMENT
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__DeltaR_lemon__NetworkSimplexT_t_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OptimalTransportSubtractorTransverseMomentumDeltaR__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseMomentum,fastjet::contrib::emd::DeltaR,lemon::NetworkSimplex< > > *arg2 = 0 ;
  fastjet::contrib::piranha::GhostGridRectangle *arg3 = 0 ;
  double val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > > *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_OptimalTransportSubtractorTransverseMomentumDeltaR" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseMomentum_fastjet__contrib__emd__DeltaR_lemon__NetworkSimplexT_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OptimalTransportSubtractorTransverseMomentumDeltaR" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseMomentum,fastjet::contrib::emd::DeltaR,lemon::NetworkSimplex< > > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorTransverseMomentumDeltaR" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseMomentum,fastjet::contrib::emd::DeltaR,lemon::NetworkSimplex< > > const &""'"); 
  }
  arg2 = reinterpret_cast< fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseMomentum,fastjet::contrib::emd::DeltaR,lemon::NetworkSimplex< > > * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridRectangle,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_OptimalTransportSubtractorTransverseMomentumDeltaR" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridRectangle const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorTransverseMomentumDeltaR" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridRectangle const &""'"); 
  }
  arg3 = reinterpret_cast< fastjet::contrib::piranha::GhostGridRectangle * >(argp3);
  {
    try {
      result = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > > *)new fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > >(arg1,(fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseMomentum,fastjet::contrib::emd::DeltaR,lemon::NetworkSimplex< > > const &)*arg2,(fastjet::contrib::piranha::GhostGridRectangle const &)*arg3); 
    }
    CATCH_STD_INVALID_ARGUMENT
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__DeltaR_lemon__NetworkSimplexT_t_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OptimalTransportSubtractorTransverseMomentumDeltaR(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_OptimalTransportSubtractorTransverseMomentumDeltaR", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseMomentum_fastjet__contrib__emd__DeltaR_lemon__NetworkSimplexT_t_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridDisk, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_OptimalTransportSubtractorTransverseMomentumDeltaR__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseMomentum_fastjet__contrib__emd__DeltaR_lemon__NetworkSimplexT_t_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridRectangle, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_OptimalTransportSubtractorTransverseMomentumDeltaR__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_OptimalTransportSubtractorTransverseMomentumDeltaR'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > >::OptimalTransportSubtractor(double,fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseMomentum,fastjet::contrib::emd::DeltaR,lemon::NetworkSimplex< > > const &,fastjet::contrib::piranha::GhostGridDisk const &)\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > >::OptimalTransportSubtractor(double,fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseMomentum,fastjet::contrib::emd::DeltaR,lemon::NetworkSimplex< > > const &,fastjet::contrib::piranha::GhostGridRectangle const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseMomentumDeltaR_description(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__DeltaR_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorTransverseMomentumDeltaR_description" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > > * >(argp1);
  {
    try {
      result = ((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > > const *)arg1)->description(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseMomentumDeltaR_emd_obj(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseMomentum,fastjet::contrib::emd::DeltaR,lemon::NetworkSimplex< > > *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__DeltaR_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorTransverseMomentumDeltaR_emd_obj" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > > * >(argp1);
  {
    try {
      result = (fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseMomentum,fastjet::contrib::emd::DeltaR,lemon::NetworkSimplex< > > *) &((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > > const *)arg1)->emd_obj(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseMomentum_fastjet__contrib__emd__DeltaR_lemon__NetworkSimplexT_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseMomentumDeltaR_z(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__DeltaR_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorTransverseMomentumDeltaR_z" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > > * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > > const *)arg1)->z(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseMomentumDeltaR_total_subtracted(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__DeltaR_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorTransverseMomentumDeltaR_total_subtracted" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > > * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > > const *)arg1)->total_subtracted(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseMomentumDeltaR___call____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > > *) 0 ;
  fastjet::PseudoJet *arg2 = 0 ;
  double arg3 = (double) 1e-14 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > result;
  
  if ((nobjs < 2) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__DeltaR_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorTransverseMomentumDeltaR___call__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_fastjet__PseudoJet,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OptimalTransportSubtractorTransverseMomentumDeltaR___call__" "', argument " "2"" of type '" "fastjet::PseudoJet const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OptimalTransportSubtractorTransverseMomentumDeltaR___call__" "', argument " "2"" of type '" "fastjet::PseudoJet const &""'"); 
  }
  arg2 = reinterpret_cast< fastjet::PseudoJet * >(argp2);
  if (swig_obj[2]) {
    ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OptimalTransportSubtractorTransverseMomentumDeltaR___call__" "', argument " "3"" of type '" "double""'");
    } 
    arg3 = static_cast< double >(val3);
  }
  {
    try {
      result = (arg1)->operator ()((fastjet::PseudoJet const &)*arg2,arg3); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseMomentumDeltaR___call____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > > *) 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *arg2 = 0 ;
  fastjet::PseudoJet const &arg3_defvalue = fastjet::PtYPhiM(0, 0, 0) ;
  fastjet::PseudoJet *arg3 = (fastjet::PseudoJet *) &arg3_defvalue ;
  double arg4 = (double) 1e-14 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > result;
  
  if ((nobjs < 2) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__DeltaR_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorTransverseMomentumDeltaR___call__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > > * >(argp1);
  {
    std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *ptr = (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *)0;
    res2 = swig::asptr(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OptimalTransportSubtractorTransverseMomentumDeltaR___call__" "', argument " "2"" of type '" "std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OptimalTransportSubtractorTransverseMomentumDeltaR___call__" "', argument " "2"" of type '" "std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &""'"); 
    }
    arg2 = ptr;
  }
  if (swig_obj[2]) {
    res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_fastjet__PseudoJet,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OptimalTransportSubtractorTransverseMomentumDeltaR___call__" "', argument " "3"" of type '" "fastjet::PseudoJet const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OptimalTransportSubtractorTransverseMomentumDeltaR___call__" "', argument " "3"" of type '" "fastjet::PseudoJet const &""'"); 
    }
    arg3 = reinterpret_cast< fastjet::PseudoJet * >(argp3);
  }
  if (swig_obj[3]) {
    ecode4 = SWIG_AsVal_double(swig_obj[3], &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "OptimalTransportSubtractorTransverseMomentumDeltaR___call__" "', argument " "4"" of type '" "double""'");
    } 
    arg4 = static_cast< double >(val4);
  }
  {
    try {
      result = (arg1)->operator ()((std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &)*arg2,(fastjet::PseudoJet const &)*arg3,arg4); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseMomentumDeltaR___call__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "OptimalTransportSubtractorTransverseMomentumDeltaR___call__", 0, 4, argv))) SWIG_fail;
  --argc;
  if ((argc >= 2) && (argc <= 3)) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__DeltaR_lemon__NetworkSimplexT_t_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_fastjet__PseudoJet, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        if (argc <= 2) {
          return _wrap_OptimalTransportSubtractorTransverseMomentumDeltaR___call____SWIG_0(self, argc, argv);
        }
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_OptimalTransportSubtractorTransverseMomentumDeltaR___call____SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if ((argc >= 2) && (argc <= 4)) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__DeltaR_lemon__NetworkSimplexT_t_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = swig::asptr(argv[1], (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        if (argc <= 2) {
          return _wrap_OptimalTransportSubtractorTransverseMomentumDeltaR___call____SWIG_1(self, argc, argv);
        }
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_fastjet__PseudoJet, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          if (argc <= 3) {
            return _wrap_OptimalTransportSubtractorTransverseMomentumDeltaR___call____SWIG_1(self, argc, argv);
          }
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_OptimalTransportSubtractorTransverseMomentumDeltaR___call____SWIG_1(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'OptimalTransportSubtractorTransverseMomentumDeltaR___call__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > >::operator ()(fastjet::PseudoJet const &,double)\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > >::operator ()(std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &,fastjet::PseudoJet const &,double)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseMomentumDeltaR___str__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__DeltaR_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorTransverseMomentumDeltaR___str__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > > * >(argp1);
  {
    try {
      result = fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_TransverseMomentum_Sc_emd_DeltaR_Sg__Sg____str__((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > > const *)arg1); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseMomentumDeltaR___repr__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__DeltaR_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorTransverseMomentumDeltaR___repr__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > > * >(argp1);
  {
    try {
      result = fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_TransverseMomentum_Sc_emd_DeltaR_Sg__Sg____repr__((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > > const *)arg1); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_OptimalTransportSubtractorTransverseMomentumDeltaR(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__DeltaR_lemon__NetworkSimplexT_t_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OptimalTransportSubtractorTransverseMomentumDeltaR" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > > * >(argp1);
  {
    try {
      delete arg1; 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *OptimalTransportSubtractorTransverseMomentumDeltaR_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__DeltaR_lemon__NetworkSimplexT_t_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *OptimalTransportSubtractorTransverseMomentumDeltaR_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_OptimalTransportSubtractorTransverseMomentumHadronicDot__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseMomentum,fastjet::contrib::emd::HadronicDot,lemon::NetworkSimplex< > > *arg2 = 0 ;
  fastjet::contrib::piranha::GhostGridDisk *arg3 = 0 ;
  double val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > > *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_OptimalTransportSubtractorTransverseMomentumHadronicDot" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseMomentum_fastjet__contrib__emd__HadronicDot_lemon__NetworkSimplexT_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OptimalTransportSubtractorTransverseMomentumHadronicDot" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseMomentum,fastjet::contrib::emd::HadronicDot,lemon::NetworkSimplex< > > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorTransverseMomentumHadronicDot" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseMomentum,fastjet::contrib::emd::HadronicDot,lemon::NetworkSimplex< > > const &""'"); 
  }
  arg2 = reinterpret_cast< fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseMomentum,fastjet::contrib::emd::HadronicDot,lemon::NetworkSimplex< > > * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridDisk,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_OptimalTransportSubtractorTransverseMomentumHadronicDot" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridDisk const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorTransverseMomentumHadronicDot" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridDisk const &""'"); 
  }
  arg3 = reinterpret_cast< fastjet::contrib::piranha::GhostGridDisk * >(argp3);
  {
    try {
      result = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > > *)new fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > >(arg1,(fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseMomentum,fastjet::contrib::emd::HadronicDot,lemon::NetworkSimplex< > > const &)*arg2,(fastjet::contrib::piranha::GhostGridDisk const &)*arg3); 
    }
    CATCH_STD_INVALID_ARGUMENT
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__HadronicDot_lemon__NetworkSimplexT_t_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OptimalTransportSubtractorTransverseMomentumHadronicDot__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseMomentum,fastjet::contrib::emd::HadronicDot,lemon::NetworkSimplex< > > *arg2 = 0 ;
  fastjet::contrib::piranha::GhostGridRectangle *arg3 = 0 ;
  double val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > > *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_OptimalTransportSubtractorTransverseMomentumHadronicDot" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseMomentum_fastjet__contrib__emd__HadronicDot_lemon__NetworkSimplexT_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OptimalTransportSubtractorTransverseMomentumHadronicDot" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseMomentum,fastjet::contrib::emd::HadronicDot,lemon::NetworkSimplex< > > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorTransverseMomentumHadronicDot" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseMomentum,fastjet::contrib::emd::HadronicDot,lemon::NetworkSimplex< > > const &""'"); 
  }
  arg2 = reinterpret_cast< fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseMomentum,fastjet::contrib::emd::HadronicDot,lemon::NetworkSimplex< > > * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridRectangle,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_OptimalTransportSubtractorTransverseMomentumHadronicDot" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridRectangle const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorTransverseMomentumHadronicDot" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridRectangle const &""'"); 
  }
  arg3 = reinterpret_cast< fastjet::contrib::piranha::GhostGridRectangle * >(argp3);
  {
    try {
      result = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > > *)new fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > >(arg1,(fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseMomentum,fastjet::contrib::emd::HadronicDot,lemon::NetworkSimplex< > > const &)*arg2,(fastjet::contrib::piranha::GhostGridRectangle const &)*arg3); 
    }
    CATCH_STD_INVALID_ARGUMENT
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__HadronicDot_lemon__NetworkSimplexT_t_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OptimalTransportSubtractorTransverseMomentumHadronicDot(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_OptimalTransportSubtractorTransverseMomentumHadronicDot", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseMomentum_fastjet__contrib__emd__HadronicDot_lemon__NetworkSimplexT_t_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridDisk, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_OptimalTransportSubtractorTransverseMomentumHadronicDot__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseMomentum_fastjet__contrib__emd__HadronicDot_lemon__NetworkSimplexT_t_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridRectangle, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_OptimalTransportSubtractorTransverseMomentumHadronicDot__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_OptimalTransportSubtractorTransverseMomentumHadronicDot'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > >::OptimalTransportSubtractor(double,fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseMomentum,fastjet::contrib::emd::HadronicDot,lemon::NetworkSimplex< > > const &,fastjet::contrib::piranha::GhostGridDisk const &)\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > >::OptimalTransportSubtractor(double,fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseMomentum,fastjet::contrib::emd::HadronicDot,lemon::NetworkSimplex< > > const &,fastjet::contrib::piranha::GhostGridRectangle const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseMomentumHadronicDot_description(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__HadronicDot_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorTransverseMomentumHadronicDot_description" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > > * >(argp1);
  {
    try {
      result = ((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > > const *)arg1)->description(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseMomentumHadronicDot_emd_obj(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseMomentum,fastjet::contrib::emd::HadronicDot,lemon::NetworkSimplex< > > *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__HadronicDot_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorTransverseMomentumHadronicDot_emd_obj" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > > * >(argp1);
  {
    try {
      result = (fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseMomentum,fastjet::contrib::emd::HadronicDot,lemon::NetworkSimplex< > > *) &((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > > const *)arg1)->emd_obj(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseMomentum_fastjet__contrib__emd__HadronicDot_lemon__NetworkSimplexT_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseMomentumHadronicDot_z(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__HadronicDot_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorTransverseMomentumHadronicDot_z" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > > * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > > const *)arg1)->z(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseMomentumHadronicDot_total_subtracted(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__HadronicDot_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorTransverseMomentumHadronicDot_total_subtracted" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > > * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > > const *)arg1)->total_subtracted(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseMomentumHadronicDot___call____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > > *) 0 ;
  fastjet::PseudoJet *arg2 = 0 ;
  double arg3 = (double) 1e-14 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > result;
  
  if ((nobjs < 2) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__HadronicDot_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorTransverseMomentumHadronicDot___call__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_fastjet__PseudoJet,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OptimalTransportSubtractorTransverseMomentumHadronicDot___call__" "', argument " "2"" of type '" "fastjet::PseudoJet const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OptimalTransportSubtractorTransverseMomentumHadronicDot___call__" "', argument " "2"" of type '" "fastjet::PseudoJet const &""'"); 
  }
  arg2 = reinterpret_cast< fastjet::PseudoJet * >(argp2);
  if (swig_obj[2]) {
    ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OptimalTransportSubtractorTransverseMomentumHadronicDot___call__" "', argument " "3"" of type '" "double""'");
    } 
    arg3 = static_cast< double >(val3);
  }
  {
    try {
      result = (arg1)->operator ()((fastjet::PseudoJet const &)*arg2,arg3); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseMomentumHadronicDot___call____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > > *) 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *arg2 = 0 ;
  fastjet::PseudoJet const &arg3_defvalue = fastjet::PtYPhiM(0, 0, 0) ;
  fastjet::PseudoJet *arg3 = (fastjet::PseudoJet *) &arg3_defvalue ;
  double arg4 = (double) 1e-14 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > result;
  
  if ((nobjs < 2) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__HadronicDot_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorTransverseMomentumHadronicDot___call__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > > * >(argp1);
  {
    std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *ptr = (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *)0;
    res2 = swig::asptr(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OptimalTransportSubtractorTransverseMomentumHadronicDot___call__" "', argument " "2"" of type '" "std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OptimalTransportSubtractorTransverseMomentumHadronicDot___call__" "', argument " "2"" of type '" "std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &""'"); 
    }
    arg2 = ptr;
  }
  if (swig_obj[2]) {
    res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_fastjet__PseudoJet,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OptimalTransportSubtractorTransverseMomentumHadronicDot___call__" "', argument " "3"" of type '" "fastjet::PseudoJet const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OptimalTransportSubtractorTransverseMomentumHadronicDot___call__" "', argument " "3"" of type '" "fastjet::PseudoJet const &""'"); 
    }
    arg3 = reinterpret_cast< fastjet::PseudoJet * >(argp3);
  }
  if (swig_obj[3]) {
    ecode4 = SWIG_AsVal_double(swig_obj[3], &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "OptimalTransportSubtractorTransverseMomentumHadronicDot___call__" "', argument " "4"" of type '" "double""'");
    } 
    arg4 = static_cast< double >(val4);
  }
  {
    try {
      result = (arg1)->operator ()((std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &)*arg2,(fastjet::PseudoJet const &)*arg3,arg4); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseMomentumHadronicDot___call__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "OptimalTransportSubtractorTransverseMomentumHadronicDot___call__", 0, 4, argv))) SWIG_fail;
  --argc;
  if ((argc >= 2) && (argc <= 3)) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__HadronicDot_lemon__NetworkSimplexT_t_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_fastjet__PseudoJet, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        if (argc <= 2) {
          return _wrap_OptimalTransportSubtractorTransverseMomentumHadronicDot___call____SWIG_0(self, argc, argv);
        }
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_OptimalTransportSubtractorTransverseMomentumHadronicDot___call____SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if ((argc >= 2) && (argc <= 4)) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__HadronicDot_lemon__NetworkSimplexT_t_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = swig::asptr(argv[1], (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        if (argc <= 2) {
          return _wrap_OptimalTransportSubtractorTransverseMomentumHadronicDot___call____SWIG_1(self, argc, argv);
        }
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_fastjet__PseudoJet, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          if (argc <= 3) {
            return _wrap_OptimalTransportSubtractorTransverseMomentumHadronicDot___call____SWIG_1(self, argc, argv);
          }
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_OptimalTransportSubtractorTransverseMomentumHadronicDot___call____SWIG_1(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'OptimalTransportSubtractorTransverseMomentumHadronicDot___call__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > >::operator ()(fastjet::PseudoJet const &,double)\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > >::operator ()(std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &,fastjet::PseudoJet const &,double)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseMomentumHadronicDot___str__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__HadronicDot_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorTransverseMomentumHadronicDot___str__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > > * >(argp1);
  {
    try {
      result = fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_TransverseMomentum_Sc_emd_HadronicDot_Sg__Sg____str__((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > > const *)arg1); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseMomentumHadronicDot___repr__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__HadronicDot_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorTransverseMomentumHadronicDot___repr__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > > * >(argp1);
  {
    try {
      result = fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_TransverseMomentum_Sc_emd_HadronicDot_Sg__Sg____repr__((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > > const *)arg1); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_OptimalTransportSubtractorTransverseMomentumHadronicDot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__HadronicDot_lemon__NetworkSimplexT_t_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OptimalTransportSubtractorTransverseMomentumHadronicDot" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > > * >(argp1);
  {
    try {
      delete arg1; 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *OptimalTransportSubtractorTransverseMomentumHadronicDot_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__HadronicDot_lemon__NetworkSimplexT_t_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *OptimalTransportSubtractorTransverseMomentumHadronicDot_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseMomentum,fastjet::contrib::emd::HadronicDotMassive,lemon::NetworkSimplex< > > *arg2 = 0 ;
  fastjet::contrib::piranha::GhostGridDisk *arg3 = 0 ;
  double val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > > *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseMomentum_fastjet__contrib__emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseMomentum,fastjet::contrib::emd::HadronicDotMassive,lemon::NetworkSimplex< > > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseMomentum,fastjet::contrib::emd::HadronicDotMassive,lemon::NetworkSimplex< > > const &""'"); 
  }
  arg2 = reinterpret_cast< fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseMomentum,fastjet::contrib::emd::HadronicDotMassive,lemon::NetworkSimplex< > > * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridDisk,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridDisk const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridDisk const &""'"); 
  }
  arg3 = reinterpret_cast< fastjet::contrib::piranha::GhostGridDisk * >(argp3);
  {
    try {
      result = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > > *)new fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > >(arg1,(fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseMomentum,fastjet::contrib::emd::HadronicDotMassive,lemon::NetworkSimplex< > > const &)*arg2,(fastjet::contrib::piranha::GhostGridDisk const &)*arg3); 
    }
    CATCH_STD_INVALID_ARGUMENT
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseMomentum,fastjet::contrib::emd::HadronicDotMassive,lemon::NetworkSimplex< > > *arg2 = 0 ;
  fastjet::contrib::piranha::GhostGridRectangle *arg3 = 0 ;
  double val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > > *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseMomentum_fastjet__contrib__emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseMomentum,fastjet::contrib::emd::HadronicDotMassive,lemon::NetworkSimplex< > > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseMomentum,fastjet::contrib::emd::HadronicDotMassive,lemon::NetworkSimplex< > > const &""'"); 
  }
  arg2 = reinterpret_cast< fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseMomentum,fastjet::contrib::emd::HadronicDotMassive,lemon::NetworkSimplex< > > * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridRectangle,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridRectangle const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridRectangle const &""'"); 
  }
  arg3 = reinterpret_cast< fastjet::contrib::piranha::GhostGridRectangle * >(argp3);
  {
    try {
      result = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > > *)new fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > >(arg1,(fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseMomentum,fastjet::contrib::emd::HadronicDotMassive,lemon::NetworkSimplex< > > const &)*arg2,(fastjet::contrib::piranha::GhostGridRectangle const &)*arg3); 
    }
    CATCH_STD_INVALID_ARGUMENT
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseMomentum_fastjet__contrib__emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridDisk, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseMomentum_fastjet__contrib__emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridRectangle, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > >::OptimalTransportSubtractor(double,fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseMomentum,fastjet::contrib::emd::HadronicDotMassive,lemon::NetworkSimplex< > > const &,fastjet::contrib::piranha::GhostGridDisk const &)\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > >::OptimalTransportSubtractor(double,fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseMomentum,fastjet::contrib::emd::HadronicDotMassive,lemon::NetworkSimplex< > > const &,fastjet::contrib::piranha::GhostGridRectangle const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive_description(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorTransverseMomentumHadronicDotMassive_description" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > > * >(argp1);
  {
    try {
      result = ((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > > const *)arg1)->description(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive_emd_obj(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseMomentum,fastjet::contrib::emd::HadronicDotMassive,lemon::NetworkSimplex< > > *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorTransverseMomentumHadronicDotMassive_emd_obj" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > > * >(argp1);
  {
    try {
      result = (fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseMomentum,fastjet::contrib::emd::HadronicDotMassive,lemon::NetworkSimplex< > > *) &((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > > const *)arg1)->emd_obj(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseMomentum_fastjet__contrib__emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive_z(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorTransverseMomentumHadronicDotMassive_z" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > > * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > > const *)arg1)->z(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive_total_subtracted(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorTransverseMomentumHadronicDotMassive_total_subtracted" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > > * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > > const *)arg1)->total_subtracted(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive___call____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > > *) 0 ;
  fastjet::PseudoJet *arg2 = 0 ;
  double arg3 = (double) 1e-14 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > result;
  
  if ((nobjs < 2) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorTransverseMomentumHadronicDotMassive___call__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_fastjet__PseudoJet,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OptimalTransportSubtractorTransverseMomentumHadronicDotMassive___call__" "', argument " "2"" of type '" "fastjet::PseudoJet const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OptimalTransportSubtractorTransverseMomentumHadronicDotMassive___call__" "', argument " "2"" of type '" "fastjet::PseudoJet const &""'"); 
  }
  arg2 = reinterpret_cast< fastjet::PseudoJet * >(argp2);
  if (swig_obj[2]) {
    ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OptimalTransportSubtractorTransverseMomentumHadronicDotMassive___call__" "', argument " "3"" of type '" "double""'");
    } 
    arg3 = static_cast< double >(val3);
  }
  {
    try {
      result = (arg1)->operator ()((fastjet::PseudoJet const &)*arg2,arg3); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive___call____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > > *) 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *arg2 = 0 ;
  fastjet::PseudoJet const &arg3_defvalue = fastjet::PtYPhiM(0, 0, 0) ;
  fastjet::PseudoJet *arg3 = (fastjet::PseudoJet *) &arg3_defvalue ;
  double arg4 = (double) 1e-14 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > result;
  
  if ((nobjs < 2) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorTransverseMomentumHadronicDotMassive___call__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > > * >(argp1);
  {
    std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *ptr = (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *)0;
    res2 = swig::asptr(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OptimalTransportSubtractorTransverseMomentumHadronicDotMassive___call__" "', argument " "2"" of type '" "std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OptimalTransportSubtractorTransverseMomentumHadronicDotMassive___call__" "', argument " "2"" of type '" "std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &""'"); 
    }
    arg2 = ptr;
  }
  if (swig_obj[2]) {
    res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_fastjet__PseudoJet,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OptimalTransportSubtractorTransverseMomentumHadronicDotMassive___call__" "', argument " "3"" of type '" "fastjet::PseudoJet const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OptimalTransportSubtractorTransverseMomentumHadronicDotMassive___call__" "', argument " "3"" of type '" "fastjet::PseudoJet const &""'"); 
    }
    arg3 = reinterpret_cast< fastjet::PseudoJet * >(argp3);
  }
  if (swig_obj[3]) {
    ecode4 = SWIG_AsVal_double(swig_obj[3], &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "OptimalTransportSubtractorTransverseMomentumHadronicDotMassive___call__" "', argument " "4"" of type '" "double""'");
    } 
    arg4 = static_cast< double >(val4);
  }
  {
    try {
      result = (arg1)->operator ()((std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &)*arg2,(fastjet::PseudoJet const &)*arg3,arg4); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive___call__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "OptimalTransportSubtractorTransverseMomentumHadronicDotMassive___call__", 0, 4, argv))) SWIG_fail;
  --argc;
  if ((argc >= 2) && (argc <= 3)) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_fastjet__PseudoJet, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        if (argc <= 2) {
          return _wrap_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive___call____SWIG_0(self, argc, argv);
        }
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive___call____SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if ((argc >= 2) && (argc <= 4)) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = swig::asptr(argv[1], (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        if (argc <= 2) {
          return _wrap_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive___call____SWIG_1(self, argc, argv);
        }
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_fastjet__PseudoJet, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          if (argc <= 3) {
            return _wrap_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive___call____SWIG_1(self, argc, argv);
          }
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive___call____SWIG_1(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'OptimalTransportSubtractorTransverseMomentumHadronicDotMassive___call__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > >::operator ()(fastjet::PseudoJet const &,double)\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > >::operator ()(std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &,fastjet::PseudoJet const &,double)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive___str__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorTransverseMomentumHadronicDotMassive___str__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > > * >(argp1);
  {
    try {
      result = fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_TransverseMomentum_Sc_emd_HadronicDotMassive_Sg__Sg____str__((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > > const *)arg1); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive___repr__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorTransverseMomentumHadronicDotMassive___repr__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > > * >(argp1);
  {
    try {
      result = fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_TransverseMomentum_Sc_emd_HadronicDotMassive_Sg__Sg____repr__((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > > const *)arg1); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > > * >(argp1);
  {
    try {
      delete arg1; 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *OptimalTransportSubtractorTransverseMomentumHadronicDotMassive_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *OptimalTransportSubtractorTransverseMomentumHadronicDotMassive_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_OptimalTransportSubtractorTransverseEnergyDeltaR__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseEnergy,fastjet::contrib::emd::DeltaR,lemon::NetworkSimplex< > > *arg2 = 0 ;
  fastjet::contrib::piranha::GhostGridDisk *arg3 = 0 ;
  double val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > > *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_OptimalTransportSubtractorTransverseEnergyDeltaR" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseEnergy_fastjet__contrib__emd__DeltaR_lemon__NetworkSimplexT_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OptimalTransportSubtractorTransverseEnergyDeltaR" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseEnergy,fastjet::contrib::emd::DeltaR,lemon::NetworkSimplex< > > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorTransverseEnergyDeltaR" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseEnergy,fastjet::contrib::emd::DeltaR,lemon::NetworkSimplex< > > const &""'"); 
  }
  arg2 = reinterpret_cast< fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseEnergy,fastjet::contrib::emd::DeltaR,lemon::NetworkSimplex< > > * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridDisk,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_OptimalTransportSubtractorTransverseEnergyDeltaR" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridDisk const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorTransverseEnergyDeltaR" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridDisk const &""'"); 
  }
  arg3 = reinterpret_cast< fastjet::contrib::piranha::GhostGridDisk * >(argp3);
  {
    try {
      result = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > > *)new fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > >(arg1,(fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseEnergy,fastjet::contrib::emd::DeltaR,lemon::NetworkSimplex< > > const &)*arg2,(fastjet::contrib::piranha::GhostGridDisk const &)*arg3); 
    }
    CATCH_STD_INVALID_ARGUMENT
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__DeltaR_lemon__NetworkSimplexT_t_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OptimalTransportSubtractorTransverseEnergyDeltaR__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseEnergy,fastjet::contrib::emd::DeltaR,lemon::NetworkSimplex< > > *arg2 = 0 ;
  fastjet::contrib::piranha::GhostGridRectangle *arg3 = 0 ;
  double val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > > *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_OptimalTransportSubtractorTransverseEnergyDeltaR" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseEnergy_fastjet__contrib__emd__DeltaR_lemon__NetworkSimplexT_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OptimalTransportSubtractorTransverseEnergyDeltaR" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseEnergy,fastjet::contrib::emd::DeltaR,lemon::NetworkSimplex< > > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorTransverseEnergyDeltaR" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseEnergy,fastjet::contrib::emd::DeltaR,lemon::NetworkSimplex< > > const &""'"); 
  }
  arg2 = reinterpret_cast< fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseEnergy,fastjet::contrib::emd::DeltaR,lemon::NetworkSimplex< > > * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridRectangle,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_OptimalTransportSubtractorTransverseEnergyDeltaR" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridRectangle const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorTransverseEnergyDeltaR" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridRectangle const &""'"); 
  }
  arg3 = reinterpret_cast< fastjet::contrib::piranha::GhostGridRectangle * >(argp3);
  {
    try {
      result = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > > *)new fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > >(arg1,(fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseEnergy,fastjet::contrib::emd::DeltaR,lemon::NetworkSimplex< > > const &)*arg2,(fastjet::contrib::piranha::GhostGridRectangle const &)*arg3); 
    }
    CATCH_STD_INVALID_ARGUMENT
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__DeltaR_lemon__NetworkSimplexT_t_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OptimalTransportSubtractorTransverseEnergyDeltaR(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_OptimalTransportSubtractorTransverseEnergyDeltaR", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseEnergy_fastjet__contrib__emd__DeltaR_lemon__NetworkSimplexT_t_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridDisk, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_OptimalTransportSubtractorTransverseEnergyDeltaR__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseEnergy_fastjet__contrib__emd__DeltaR_lemon__NetworkSimplexT_t_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridRectangle, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_OptimalTransportSubtractorTransverseEnergyDeltaR__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_OptimalTransportSubtractorTransverseEnergyDeltaR'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > >::OptimalTransportSubtractor(double,fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseEnergy,fastjet::contrib::emd::DeltaR,lemon::NetworkSimplex< > > const &,fastjet::contrib::piranha::GhostGridDisk const &)\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > >::OptimalTransportSubtractor(double,fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseEnergy,fastjet::contrib::emd::DeltaR,lemon::NetworkSimplex< > > const &,fastjet::contrib::piranha::GhostGridRectangle const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseEnergyDeltaR_description(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__DeltaR_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorTransverseEnergyDeltaR_description" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > > * >(argp1);
  {
    try {
      result = ((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > > const *)arg1)->description(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseEnergyDeltaR_emd_obj(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseEnergy,fastjet::contrib::emd::DeltaR,lemon::NetworkSimplex< > > *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__DeltaR_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorTransverseEnergyDeltaR_emd_obj" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > > * >(argp1);
  {
    try {
      result = (fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseEnergy,fastjet::contrib::emd::DeltaR,lemon::NetworkSimplex< > > *) &((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > > const *)arg1)->emd_obj(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseEnergy_fastjet__contrib__emd__DeltaR_lemon__NetworkSimplexT_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseEnergyDeltaR_z(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__DeltaR_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorTransverseEnergyDeltaR_z" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > > * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > > const *)arg1)->z(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseEnergyDeltaR_total_subtracted(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__DeltaR_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorTransverseEnergyDeltaR_total_subtracted" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > > * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > > const *)arg1)->total_subtracted(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseEnergyDeltaR___call____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > > *) 0 ;
  fastjet::PseudoJet *arg2 = 0 ;
  double arg3 = (double) 1e-14 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > result;
  
  if ((nobjs < 2) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__DeltaR_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorTransverseEnergyDeltaR___call__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_fastjet__PseudoJet,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OptimalTransportSubtractorTransverseEnergyDeltaR___call__" "', argument " "2"" of type '" "fastjet::PseudoJet const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OptimalTransportSubtractorTransverseEnergyDeltaR___call__" "', argument " "2"" of type '" "fastjet::PseudoJet const &""'"); 
  }
  arg2 = reinterpret_cast< fastjet::PseudoJet * >(argp2);
  if (swig_obj[2]) {
    ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OptimalTransportSubtractorTransverseEnergyDeltaR___call__" "', argument " "3"" of type '" "double""'");
    } 
    arg3 = static_cast< double >(val3);
  }
  {
    try {
      result = (arg1)->operator ()((fastjet::PseudoJet const &)*arg2,arg3); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseEnergyDeltaR___call____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > > *) 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *arg2 = 0 ;
  fastjet::PseudoJet const &arg3_defvalue = fastjet::PtYPhiM(0, 0, 0) ;
  fastjet::PseudoJet *arg3 = (fastjet::PseudoJet *) &arg3_defvalue ;
  double arg4 = (double) 1e-14 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > result;
  
  if ((nobjs < 2) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__DeltaR_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorTransverseEnergyDeltaR___call__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > > * >(argp1);
  {
    std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *ptr = (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *)0;
    res2 = swig::asptr(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OptimalTransportSubtractorTransverseEnergyDeltaR___call__" "', argument " "2"" of type '" "std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OptimalTransportSubtractorTransverseEnergyDeltaR___call__" "', argument " "2"" of type '" "std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &""'"); 
    }
    arg2 = ptr;
  }
  if (swig_obj[2]) {
    res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_fastjet__PseudoJet,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OptimalTransportSubtractorTransverseEnergyDeltaR___call__" "', argument " "3"" of type '" "fastjet::PseudoJet const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OptimalTransportSubtractorTransverseEnergyDeltaR___call__" "', argument " "3"" of type '" "fastjet::PseudoJet const &""'"); 
    }
    arg3 = reinterpret_cast< fastjet::PseudoJet * >(argp3);
  }
  if (swig_obj[3]) {
    ecode4 = SWIG_AsVal_double(swig_obj[3], &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "OptimalTransportSubtractorTransverseEnergyDeltaR___call__" "', argument " "4"" of type '" "double""'");
    } 
    arg4 = static_cast< double >(val4);
  }
  {
    try {
      result = (arg1)->operator ()((std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &)*arg2,(fastjet::PseudoJet const &)*arg3,arg4); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseEnergyDeltaR___call__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "OptimalTransportSubtractorTransverseEnergyDeltaR___call__", 0, 4, argv))) SWIG_fail;
  --argc;
  if ((argc >= 2) && (argc <= 3)) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__DeltaR_lemon__NetworkSimplexT_t_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_fastjet__PseudoJet, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        if (argc <= 2) {
          return _wrap_OptimalTransportSubtractorTransverseEnergyDeltaR___call____SWIG_0(self, argc, argv);
        }
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_OptimalTransportSubtractorTransverseEnergyDeltaR___call____SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if ((argc >= 2) && (argc <= 4)) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__DeltaR_lemon__NetworkSimplexT_t_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = swig::asptr(argv[1], (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        if (argc <= 2) {
          return _wrap_OptimalTransportSubtractorTransverseEnergyDeltaR___call____SWIG_1(self, argc, argv);
        }
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_fastjet__PseudoJet, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          if (argc <= 3) {
            return _wrap_OptimalTransportSubtractorTransverseEnergyDeltaR___call____SWIG_1(self, argc, argv);
          }
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_OptimalTransportSubtractorTransverseEnergyDeltaR___call____SWIG_1(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'OptimalTransportSubtractorTransverseEnergyDeltaR___call__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > >::operator ()(fastjet::PseudoJet const &,double)\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > >::operator ()(std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &,fastjet::PseudoJet const &,double)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseEnergyDeltaR___str__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__DeltaR_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorTransverseEnergyDeltaR___str__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > > * >(argp1);
  {
    try {
      result = fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_TransverseEnergy_Sc_emd_DeltaR_Sg__Sg____str__((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > > const *)arg1); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseEnergyDeltaR___repr__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__DeltaR_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorTransverseEnergyDeltaR___repr__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > > * >(argp1);
  {
    try {
      result = fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_TransverseEnergy_Sc_emd_DeltaR_Sg__Sg____repr__((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > > const *)arg1); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_OptimalTransportSubtractorTransverseEnergyDeltaR(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__DeltaR_lemon__NetworkSimplexT_t_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OptimalTransportSubtractorTransverseEnergyDeltaR" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > > * >(argp1);
  {
    try {
      delete arg1; 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *OptimalTransportSubtractorTransverseEnergyDeltaR_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__DeltaR_lemon__NetworkSimplexT_t_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *OptimalTransportSubtractorTransverseEnergyDeltaR_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_OptimalTransportSubtractorTransverseEnergyHadronicDot__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseEnergy,fastjet::contrib::emd::HadronicDot,lemon::NetworkSimplex< > > *arg2 = 0 ;
  fastjet::contrib::piranha::GhostGridDisk *arg3 = 0 ;
  double val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > > *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_OptimalTransportSubtractorTransverseEnergyHadronicDot" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseEnergy_fastjet__contrib__emd__HadronicDot_lemon__NetworkSimplexT_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OptimalTransportSubtractorTransverseEnergyHadronicDot" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseEnergy,fastjet::contrib::emd::HadronicDot,lemon::NetworkSimplex< > > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorTransverseEnergyHadronicDot" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseEnergy,fastjet::contrib::emd::HadronicDot,lemon::NetworkSimplex< > > const &""'"); 
  }
  arg2 = reinterpret_cast< fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseEnergy,fastjet::contrib::emd::HadronicDot,lemon::NetworkSimplex< > > * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridDisk,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_OptimalTransportSubtractorTransverseEnergyHadronicDot" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridDisk const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorTransverseEnergyHadronicDot" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridDisk const &""'"); 
  }
  arg3 = reinterpret_cast< fastjet::contrib::piranha::GhostGridDisk * >(argp3);
  {
    try {
      result = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > > *)new fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > >(arg1,(fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseEnergy,fastjet::contrib::emd::HadronicDot,lemon::NetworkSimplex< > > const &)*arg2,(fastjet::contrib::piranha::GhostGridDisk const &)*arg3); 
    }
    CATCH_STD_INVALID_ARGUMENT
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__HadronicDot_lemon__NetworkSimplexT_t_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OptimalTransportSubtractorTransverseEnergyHadronicDot__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseEnergy,fastjet::contrib::emd::HadronicDot,lemon::NetworkSimplex< > > *arg2 = 0 ;
  fastjet::contrib::piranha::GhostGridRectangle *arg3 = 0 ;
  double val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > > *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_OptimalTransportSubtractorTransverseEnergyHadronicDot" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseEnergy_fastjet__contrib__emd__HadronicDot_lemon__NetworkSimplexT_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OptimalTransportSubtractorTransverseEnergyHadronicDot" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseEnergy,fastjet::contrib::emd::HadronicDot,lemon::NetworkSimplex< > > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorTransverseEnergyHadronicDot" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseEnergy,fastjet::contrib::emd::HadronicDot,lemon::NetworkSimplex< > > const &""'"); 
  }
  arg2 = reinterpret_cast< fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseEnergy,fastjet::contrib::emd::HadronicDot,lemon::NetworkSimplex< > > * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridRectangle,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_OptimalTransportSubtractorTransverseEnergyHadronicDot" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridRectangle const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorTransverseEnergyHadronicDot" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridRectangle const &""'"); 
  }
  arg3 = reinterpret_cast< fastjet::contrib::piranha::GhostGridRectangle * >(argp3);
  {
    try {
      result = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > > *)new fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > >(arg1,(fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseEnergy,fastjet::contrib::emd::HadronicDot,lemon::NetworkSimplex< > > const &)*arg2,(fastjet::contrib::piranha::GhostGridRectangle const &)*arg3); 
    }
    CATCH_STD_INVALID_ARGUMENT
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__HadronicDot_lemon__NetworkSimplexT_t_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OptimalTransportSubtractorTransverseEnergyHadronicDot(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_OptimalTransportSubtractorTransverseEnergyHadronicDot", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseEnergy_fastjet__contrib__emd__HadronicDot_lemon__NetworkSimplexT_t_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridDisk, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_OptimalTransportSubtractorTransverseEnergyHadronicDot__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseEnergy_fastjet__contrib__emd__HadronicDot_lemon__NetworkSimplexT_t_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridRectangle, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_OptimalTransportSubtractorTransverseEnergyHadronicDot__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_OptimalTransportSubtractorTransverseEnergyHadronicDot'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > >::OptimalTransportSubtractor(double,fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseEnergy,fastjet::contrib::emd::HadronicDot,lemon::NetworkSimplex< > > const &,fastjet::contrib::piranha::GhostGridDisk const &)\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > >::OptimalTransportSubtractor(double,fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseEnergy,fastjet::contrib::emd::HadronicDot,lemon::NetworkSimplex< > > const &,fastjet::contrib::piranha::GhostGridRectangle const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseEnergyHadronicDot_description(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__HadronicDot_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorTransverseEnergyHadronicDot_description" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > > * >(argp1);
  {
    try {
      result = ((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > > const *)arg1)->description(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseEnergyHadronicDot_emd_obj(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseEnergy,fastjet::contrib::emd::HadronicDot,lemon::NetworkSimplex< > > *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__HadronicDot_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorTransverseEnergyHadronicDot_emd_obj" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > > * >(argp1);
  {
    try {
      result = (fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseEnergy,fastjet::contrib::emd::HadronicDot,lemon::NetworkSimplex< > > *) &((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > > const *)arg1)->emd_obj(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseEnergy_fastjet__contrib__emd__HadronicDot_lemon__NetworkSimplexT_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseEnergyHadronicDot_z(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__HadronicDot_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorTransverseEnergyHadronicDot_z" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > > * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > > const *)arg1)->z(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseEnergyHadronicDot_total_subtracted(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__HadronicDot_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorTransverseEnergyHadronicDot_total_subtracted" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > > * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > > const *)arg1)->total_subtracted(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseEnergyHadronicDot___call____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > > *) 0 ;
  fastjet::PseudoJet *arg2 = 0 ;
  double arg3 = (double) 1e-14 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > result;
  
  if ((nobjs < 2) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__HadronicDot_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorTransverseEnergyHadronicDot___call__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_fastjet__PseudoJet,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OptimalTransportSubtractorTransverseEnergyHadronicDot___call__" "', argument " "2"" of type '" "fastjet::PseudoJet const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OptimalTransportSubtractorTransverseEnergyHadronicDot___call__" "', argument " "2"" of type '" "fastjet::PseudoJet const &""'"); 
  }
  arg2 = reinterpret_cast< fastjet::PseudoJet * >(argp2);
  if (swig_obj[2]) {
    ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OptimalTransportSubtractorTransverseEnergyHadronicDot___call__" "', argument " "3"" of type '" "double""'");
    } 
    arg3 = static_cast< double >(val3);
  }
  {
    try {
      result = (arg1)->operator ()((fastjet::PseudoJet const &)*arg2,arg3); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseEnergyHadronicDot___call____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > > *) 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *arg2 = 0 ;
  fastjet::PseudoJet const &arg3_defvalue = fastjet::PtYPhiM(0, 0, 0) ;
  fastjet::PseudoJet *arg3 = (fastjet::PseudoJet *) &arg3_defvalue ;
  double arg4 = (double) 1e-14 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > result;
  
  if ((nobjs < 2) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__HadronicDot_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorTransverseEnergyHadronicDot___call__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > > * >(argp1);
  {
    std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *ptr = (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *)0;
    res2 = swig::asptr(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OptimalTransportSubtractorTransverseEnergyHadronicDot___call__" "', argument " "2"" of type '" "std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OptimalTransportSubtractorTransverseEnergyHadronicDot___call__" "', argument " "2"" of type '" "std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &""'"); 
    }
    arg2 = ptr;
  }
  if (swig_obj[2]) {
    res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_fastjet__PseudoJet,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OptimalTransportSubtractorTransverseEnergyHadronicDot___call__" "', argument " "3"" of type '" "fastjet::PseudoJet const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OptimalTransportSubtractorTransverseEnergyHadronicDot___call__" "', argument " "3"" of type '" "fastjet::PseudoJet const &""'"); 
    }
    arg3 = reinterpret_cast< fastjet::PseudoJet * >(argp3);
  }
  if (swig_obj[3]) {
    ecode4 = SWIG_AsVal_double(swig_obj[3], &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "OptimalTransportSubtractorTransverseEnergyHadronicDot___call__" "', argument " "4"" of type '" "double""'");
    } 
    arg4 = static_cast< double >(val4);
  }
  {
    try {
      result = (arg1)->operator ()((std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &)*arg2,(fastjet::PseudoJet const &)*arg3,arg4); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseEnergyHadronicDot___call__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "OptimalTransportSubtractorTransverseEnergyHadronicDot___call__", 0, 4, argv))) SWIG_fail;
  --argc;
  if ((argc >= 2) && (argc <= 3)) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__HadronicDot_lemon__NetworkSimplexT_t_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_fastjet__PseudoJet, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        if (argc <= 2) {
          return _wrap_OptimalTransportSubtractorTransverseEnergyHadronicDot___call____SWIG_0(self, argc, argv);
        }
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_OptimalTransportSubtractorTransverseEnergyHadronicDot___call____SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if ((argc >= 2) && (argc <= 4)) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__HadronicDot_lemon__NetworkSimplexT_t_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = swig::asptr(argv[1], (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        if (argc <= 2) {
          return _wrap_OptimalTransportSubtractorTransverseEnergyHadronicDot___call____SWIG_1(self, argc, argv);
        }
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_fastjet__PseudoJet, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          if (argc <= 3) {
            return _wrap_OptimalTransportSubtractorTransverseEnergyHadronicDot___call____SWIG_1(self, argc, argv);
          }
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_OptimalTransportSubtractorTransverseEnergyHadronicDot___call____SWIG_1(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'OptimalTransportSubtractorTransverseEnergyHadronicDot___call__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > >::operator ()(fastjet::PseudoJet const &,double)\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > >::operator ()(std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &,fastjet::PseudoJet const &,double)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseEnergyHadronicDot___str__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__HadronicDot_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorTransverseEnergyHadronicDot___str__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > > * >(argp1);
  {
    try {
      result = fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_TransverseEnergy_Sc_emd_HadronicDot_Sg__Sg____str__((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > > const *)arg1); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseEnergyHadronicDot___repr__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__HadronicDot_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorTransverseEnergyHadronicDot___repr__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > > * >(argp1);
  {
    try {
      result = fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_TransverseEnergy_Sc_emd_HadronicDot_Sg__Sg____repr__((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > > const *)arg1); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_OptimalTransportSubtractorTransverseEnergyHadronicDot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__HadronicDot_lemon__NetworkSimplexT_t_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OptimalTransportSubtractorTransverseEnergyHadronicDot" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > > * >(argp1);
  {
    try {
      delete arg1; 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *OptimalTransportSubtractorTransverseEnergyHadronicDot_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__HadronicDot_lemon__NetworkSimplexT_t_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *OptimalTransportSubtractorTransverseEnergyHadronicDot_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseEnergy,fastjet::contrib::emd::HadronicDotMassive,lemon::NetworkSimplex< > > *arg2 = 0 ;
  fastjet::contrib::piranha::GhostGridDisk *arg3 = 0 ;
  double val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > > *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseEnergy_fastjet__contrib__emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseEnergy,fastjet::contrib::emd::HadronicDotMassive,lemon::NetworkSimplex< > > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseEnergy,fastjet::contrib::emd::HadronicDotMassive,lemon::NetworkSimplex< > > const &""'"); 
  }
  arg2 = reinterpret_cast< fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseEnergy,fastjet::contrib::emd::HadronicDotMassive,lemon::NetworkSimplex< > > * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridDisk,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridDisk const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridDisk const &""'"); 
  }
  arg3 = reinterpret_cast< fastjet::contrib::piranha::GhostGridDisk * >(argp3);
  {
    try {
      result = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > > *)new fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > >(arg1,(fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseEnergy,fastjet::contrib::emd::HadronicDotMassive,lemon::NetworkSimplex< > > const &)*arg2,(fastjet::contrib::piranha::GhostGridDisk const &)*arg3); 
    }
    CATCH_STD_INVALID_ARGUMENT
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseEnergy,fastjet::contrib::emd::HadronicDotMassive,lemon::NetworkSimplex< > > *arg2 = 0 ;
  fastjet::contrib::piranha::GhostGridRectangle *arg3 = 0 ;
  double val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > > *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseEnergy_fastjet__contrib__emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseEnergy,fastjet::contrib::emd::HadronicDotMassive,lemon::NetworkSimplex< > > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseEnergy,fastjet::contrib::emd::HadronicDotMassive,lemon::NetworkSimplex< > > const &""'"); 
  }
  arg2 = reinterpret_cast< fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseEnergy,fastjet::contrib::emd::HadronicDotMassive,lemon::NetworkSimplex< > > * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridRectangle,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridRectangle const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridRectangle const &""'"); 
  }
  arg3 = reinterpret_cast< fastjet::contrib::piranha::GhostGridRectangle * >(argp3);
  {
    try {
      result = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > > *)new fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > >(arg1,(fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseEnergy,fastjet::contrib::emd::HadronicDotMassive,lemon::NetworkSimplex< > > const &)*arg2,(fastjet::contrib::piranha::GhostGridRectangle const &)*arg3); 
    }
    CATCH_STD_INVALID_ARGUMENT
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseEnergy_fastjet__contrib__emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridDisk, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseEnergy_fastjet__contrib__emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridRectangle, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > >::OptimalTransportSubtractor(double,fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseEnergy,fastjet::contrib::emd::HadronicDotMassive,lemon::NetworkSimplex< > > const &,fastjet::contrib::piranha::GhostGridDisk const &)\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > >::OptimalTransportSubtractor(double,fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseEnergy,fastjet::contrib::emd::HadronicDotMassive,lemon::NetworkSimplex< > > const &,fastjet::contrib::piranha::GhostGridRectangle const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive_description(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorTransverseEnergyHadronicDotMassive_description" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > > * >(argp1);
  {
    try {
      result = ((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > > const *)arg1)->description(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive_emd_obj(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseEnergy,fastjet::contrib::emd::HadronicDotMassive,lemon::NetworkSimplex< > > *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorTransverseEnergyHadronicDotMassive_emd_obj" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > > * >(argp1);
  {
    try {
      result = (fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseEnergy,fastjet::contrib::emd::HadronicDotMassive,lemon::NetworkSimplex< > > *) &((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > > const *)arg1)->emd_obj(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseEnergy_fastjet__contrib__emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive_z(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorTransverseEnergyHadronicDotMassive_z" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > > * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > > const *)arg1)->z(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive_total_subtracted(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorTransverseEnergyHadronicDotMassive_total_subtracted" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > > * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > > const *)arg1)->total_subtracted(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive___call____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > > *) 0 ;
  fastjet::PseudoJet *arg2 = 0 ;
  double arg3 = (double) 1e-14 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > result;
  
  if ((nobjs < 2) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorTransverseEnergyHadronicDotMassive___call__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_fastjet__PseudoJet,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OptimalTransportSubtractorTransverseEnergyHadronicDotMassive___call__" "', argument " "2"" of type '" "fastjet::PseudoJet const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OptimalTransportSubtractorTransverseEnergyHadronicDotMassive___call__" "', argument " "2"" of type '" "fastjet::PseudoJet const &""'"); 
  }
  arg2 = reinterpret_cast< fastjet::PseudoJet * >(argp2);
  if (swig_obj[2]) {
    ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OptimalTransportSubtractorTransverseEnergyHadronicDotMassive___call__" "', argument " "3"" of type '" "double""'");
    } 
    arg3 = static_cast< double >(val3);
  }
  {
    try {
      result = (arg1)->operator ()((fastjet::PseudoJet const &)*arg2,arg3); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive___call____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > > *) 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *arg2 = 0 ;
  fastjet::PseudoJet const &arg3_defvalue = fastjet::PtYPhiM(0, 0, 0) ;
  fastjet::PseudoJet *arg3 = (fastjet::PseudoJet *) &arg3_defvalue ;
  double arg4 = (double) 1e-14 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > result;
  
  if ((nobjs < 2) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorTransverseEnergyHadronicDotMassive___call__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > > * >(argp1);
  {
    std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *ptr = (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *)0;
    res2 = swig::asptr(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OptimalTransportSubtractorTransverseEnergyHadronicDotMassive___call__" "', argument " "2"" of type '" "std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OptimalTransportSubtractorTransverseEnergyHadronicDotMassive___call__" "', argument " "2"" of type '" "std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &""'"); 
    }
    arg2 = ptr;
  }
  if (swig_obj[2]) {
    res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_fastjet__PseudoJet,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OptimalTransportSubtractorTransverseEnergyHadronicDotMassive___call__" "', argument " "3"" of type '" "fastjet::PseudoJet const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OptimalTransportSubtractorTransverseEnergyHadronicDotMassive___call__" "', argument " "3"" of type '" "fastjet::PseudoJet const &""'"); 
    }
    arg3 = reinterpret_cast< fastjet::PseudoJet * >(argp3);
  }
  if (swig_obj[3]) {
    ecode4 = SWIG_AsVal_double(swig_obj[3], &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "OptimalTransportSubtractorTransverseEnergyHadronicDotMassive___call__" "', argument " "4"" of type '" "double""'");
    } 
    arg4 = static_cast< double >(val4);
  }
  {
    try {
      result = (arg1)->operator ()((std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &)*arg2,(fastjet::PseudoJet const &)*arg3,arg4); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive___call__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "OptimalTransportSubtractorTransverseEnergyHadronicDotMassive___call__", 0, 4, argv))) SWIG_fail;
  --argc;
  if ((argc >= 2) && (argc <= 3)) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_fastjet__PseudoJet, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        if (argc <= 2) {
          return _wrap_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive___call____SWIG_0(self, argc, argv);
        }
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive___call____SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if ((argc >= 2) && (argc <= 4)) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = swig::asptr(argv[1], (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        if (argc <= 2) {
          return _wrap_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive___call____SWIG_1(self, argc, argv);
        }
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_fastjet__PseudoJet, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          if (argc <= 3) {
            return _wrap_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive___call____SWIG_1(self, argc, argv);
          }
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive___call____SWIG_1(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'OptimalTransportSubtractorTransverseEnergyHadronicDotMassive___call__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > >::operator ()(fastjet::PseudoJet const &,double)\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > >::operator ()(std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &,fastjet::PseudoJet const &,double)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive___str__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorTransverseEnergyHadronicDotMassive___str__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > > * >(argp1);
  {
    try {
      result = fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_TransverseEnergy_Sc_emd_HadronicDotMassive_Sg__Sg____str__((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > > const *)arg1); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive___repr__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorTransverseEnergyHadronicDotMassive___repr__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > > * >(argp1);
  {
    try {
      result = fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_TransverseEnergy_Sc_emd_HadronicDotMassive_Sg__Sg____repr__((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > > const *)arg1); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > > * >(argp1);
  {
    try {
      delete arg1; 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *OptimalTransportSubtractorTransverseEnergyHadronicDotMassive_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *OptimalTransportSubtractorTransverseEnergyHadronicDotMassive_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_OptimalTransportSubtractorMomentumEEDot__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEDot,lemon::NetworkSimplex< > > *arg2 = 0 ;
  fastjet::contrib::piranha::GhostGridDisk *arg3 = 0 ;
  double val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > > *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_OptimalTransportSubtractorMomentumEEDot" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Momentum_fastjet__contrib__emd__EEDot_lemon__NetworkSimplexT_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OptimalTransportSubtractorMomentumEEDot" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEDot,lemon::NetworkSimplex< > > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorMomentumEEDot" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEDot,lemon::NetworkSimplex< > > const &""'"); 
  }
  arg2 = reinterpret_cast< fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEDot,lemon::NetworkSimplex< > > * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridDisk,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_OptimalTransportSubtractorMomentumEEDot" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridDisk const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorMomentumEEDot" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridDisk const &""'"); 
  }
  arg3 = reinterpret_cast< fastjet::contrib::piranha::GhostGridDisk * >(argp3);
  {
    try {
      result = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > > *)new fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > >(arg1,(fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEDot,lemon::NetworkSimplex< > > const &)*arg2,(fastjet::contrib::piranha::GhostGridDisk const &)*arg3); 
    }
    CATCH_STD_INVALID_ARGUMENT
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEDot_lemon__NetworkSimplexT_t_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OptimalTransportSubtractorMomentumEEDot__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEDot,lemon::NetworkSimplex< > > *arg2 = 0 ;
  fastjet::contrib::piranha::GhostGridRectangle *arg3 = 0 ;
  double val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > > *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_OptimalTransportSubtractorMomentumEEDot" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Momentum_fastjet__contrib__emd__EEDot_lemon__NetworkSimplexT_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OptimalTransportSubtractorMomentumEEDot" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEDot,lemon::NetworkSimplex< > > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorMomentumEEDot" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEDot,lemon::NetworkSimplex< > > const &""'"); 
  }
  arg2 = reinterpret_cast< fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEDot,lemon::NetworkSimplex< > > * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridRectangle,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_OptimalTransportSubtractorMomentumEEDot" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridRectangle const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorMomentumEEDot" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridRectangle const &""'"); 
  }
  arg3 = reinterpret_cast< fastjet::contrib::piranha::GhostGridRectangle * >(argp3);
  {
    try {
      result = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > > *)new fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > >(arg1,(fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEDot,lemon::NetworkSimplex< > > const &)*arg2,(fastjet::contrib::piranha::GhostGridRectangle const &)*arg3); 
    }
    CATCH_STD_INVALID_ARGUMENT
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEDot_lemon__NetworkSimplexT_t_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OptimalTransportSubtractorMomentumEEDot(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_OptimalTransportSubtractorMomentumEEDot", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Momentum_fastjet__contrib__emd__EEDot_lemon__NetworkSimplexT_t_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridDisk, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_OptimalTransportSubtractorMomentumEEDot__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Momentum_fastjet__contrib__emd__EEDot_lemon__NetworkSimplexT_t_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridRectangle, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_OptimalTransportSubtractorMomentumEEDot__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_OptimalTransportSubtractorMomentumEEDot'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > >::OptimalTransportSubtractor(double,fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEDot,lemon::NetworkSimplex< > > const &,fastjet::contrib::piranha::GhostGridDisk const &)\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > >::OptimalTransportSubtractor(double,fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEDot,lemon::NetworkSimplex< > > const &,fastjet::contrib::piranha::GhostGridRectangle const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorMomentumEEDot_description(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEDot_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorMomentumEEDot_description" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > > * >(argp1);
  {
    try {
      result = ((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > > const *)arg1)->description(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorMomentumEEDot_emd_obj(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEDot,lemon::NetworkSimplex< > > *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEDot_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorMomentumEEDot_emd_obj" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > > * >(argp1);
  {
    try {
      result = (fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEDot,lemon::NetworkSimplex< > > *) &((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > > const *)arg1)->emd_obj(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Momentum_fastjet__contrib__emd__EEDot_lemon__NetworkSimplexT_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorMomentumEEDot_z(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEDot_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorMomentumEEDot_z" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > > * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > > const *)arg1)->z(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorMomentumEEDot_total_subtracted(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEDot_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorMomentumEEDot_total_subtracted" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > > * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > > const *)arg1)->total_subtracted(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorMomentumEEDot___call____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > > *) 0 ;
  fastjet::PseudoJet *arg2 = 0 ;
  double arg3 = (double) 1e-14 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > result;
  
  if ((nobjs < 2) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEDot_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorMomentumEEDot___call__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_fastjet__PseudoJet,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OptimalTransportSubtractorMomentumEEDot___call__" "', argument " "2"" of type '" "fastjet::PseudoJet const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OptimalTransportSubtractorMomentumEEDot___call__" "', argument " "2"" of type '" "fastjet::PseudoJet const &""'"); 
  }
  arg2 = reinterpret_cast< fastjet::PseudoJet * >(argp2);
  if (swig_obj[2]) {
    ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OptimalTransportSubtractorMomentumEEDot___call__" "', argument " "3"" of type '" "double""'");
    } 
    arg3 = static_cast< double >(val3);
  }
  {
    try {
      result = (arg1)->operator ()((fastjet::PseudoJet const &)*arg2,arg3); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorMomentumEEDot___call____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > > *) 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *arg2 = 0 ;
  fastjet::PseudoJet const &arg3_defvalue = fastjet::PtYPhiM(0, 0, 0) ;
  fastjet::PseudoJet *arg3 = (fastjet::PseudoJet *) &arg3_defvalue ;
  double arg4 = (double) 1e-14 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > result;
  
  if ((nobjs < 2) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEDot_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorMomentumEEDot___call__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > > * >(argp1);
  {
    std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *ptr = (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *)0;
    res2 = swig::asptr(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OptimalTransportSubtractorMomentumEEDot___call__" "', argument " "2"" of type '" "std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OptimalTransportSubtractorMomentumEEDot___call__" "', argument " "2"" of type '" "std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &""'"); 
    }
    arg2 = ptr;
  }
  if (swig_obj[2]) {
    res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_fastjet__PseudoJet,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OptimalTransportSubtractorMomentumEEDot___call__" "', argument " "3"" of type '" "fastjet::PseudoJet const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OptimalTransportSubtractorMomentumEEDot___call__" "', argument " "3"" of type '" "fastjet::PseudoJet const &""'"); 
    }
    arg3 = reinterpret_cast< fastjet::PseudoJet * >(argp3);
  }
  if (swig_obj[3]) {
    ecode4 = SWIG_AsVal_double(swig_obj[3], &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "OptimalTransportSubtractorMomentumEEDot___call__" "', argument " "4"" of type '" "double""'");
    } 
    arg4 = static_cast< double >(val4);
  }
  {
    try {
      result = (arg1)->operator ()((std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &)*arg2,(fastjet::PseudoJet const &)*arg3,arg4); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorMomentumEEDot___call__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "OptimalTransportSubtractorMomentumEEDot___call__", 0, 4, argv))) SWIG_fail;
  --argc;
  if ((argc >= 2) && (argc <= 3)) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEDot_lemon__NetworkSimplexT_t_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_fastjet__PseudoJet, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        if (argc <= 2) {
          return _wrap_OptimalTransportSubtractorMomentumEEDot___call____SWIG_0(self, argc, argv);
        }
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_OptimalTransportSubtractorMomentumEEDot___call____SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if ((argc >= 2) && (argc <= 4)) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEDot_lemon__NetworkSimplexT_t_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = swig::asptr(argv[1], (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        if (argc <= 2) {
          return _wrap_OptimalTransportSubtractorMomentumEEDot___call____SWIG_1(self, argc, argv);
        }
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_fastjet__PseudoJet, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          if (argc <= 3) {
            return _wrap_OptimalTransportSubtractorMomentumEEDot___call____SWIG_1(self, argc, argv);
          }
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_OptimalTransportSubtractorMomentumEEDot___call____SWIG_1(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'OptimalTransportSubtractorMomentumEEDot___call__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > >::operator ()(fastjet::PseudoJet const &,double)\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > >::operator ()(std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &,fastjet::PseudoJet const &,double)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorMomentumEEDot___str__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEDot_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorMomentumEEDot___str__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > > * >(argp1);
  {
    try {
      result = fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_Momentum_Sc_emd_EEDot_Sg__Sg____str__((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > > const *)arg1); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorMomentumEEDot___repr__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEDot_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorMomentumEEDot___repr__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > > * >(argp1);
  {
    try {
      result = fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_Momentum_Sc_emd_EEDot_Sg__Sg____repr__((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > > const *)arg1); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_OptimalTransportSubtractorMomentumEEDot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEDot_lemon__NetworkSimplexT_t_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OptimalTransportSubtractorMomentumEEDot" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > > * >(argp1);
  {
    try {
      delete arg1; 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *OptimalTransportSubtractorMomentumEEDot_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEDot_lemon__NetworkSimplexT_t_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *OptimalTransportSubtractorMomentumEEDot_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_OptimalTransportSubtractorMomentumEEDotMassive__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEDotMassive,lemon::NetworkSimplex< > > *arg2 = 0 ;
  fastjet::contrib::piranha::GhostGridDisk *arg3 = 0 ;
  double val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > > *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_OptimalTransportSubtractorMomentumEEDotMassive" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Momentum_fastjet__contrib__emd__EEDotMassive_lemon__NetworkSimplexT_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OptimalTransportSubtractorMomentumEEDotMassive" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEDotMassive,lemon::NetworkSimplex< > > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorMomentumEEDotMassive" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEDotMassive,lemon::NetworkSimplex< > > const &""'"); 
  }
  arg2 = reinterpret_cast< fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEDotMassive,lemon::NetworkSimplex< > > * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridDisk,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_OptimalTransportSubtractorMomentumEEDotMassive" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridDisk const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorMomentumEEDotMassive" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridDisk const &""'"); 
  }
  arg3 = reinterpret_cast< fastjet::contrib::piranha::GhostGridDisk * >(argp3);
  {
    try {
      result = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > > *)new fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > >(arg1,(fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEDotMassive,lemon::NetworkSimplex< > > const &)*arg2,(fastjet::contrib::piranha::GhostGridDisk const &)*arg3); 
    }
    CATCH_STD_INVALID_ARGUMENT
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEDotMassive_lemon__NetworkSimplexT_t_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OptimalTransportSubtractorMomentumEEDotMassive__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEDotMassive,lemon::NetworkSimplex< > > *arg2 = 0 ;
  fastjet::contrib::piranha::GhostGridRectangle *arg3 = 0 ;
  double val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > > *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_OptimalTransportSubtractorMomentumEEDotMassive" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Momentum_fastjet__contrib__emd__EEDotMassive_lemon__NetworkSimplexT_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OptimalTransportSubtractorMomentumEEDotMassive" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEDotMassive,lemon::NetworkSimplex< > > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorMomentumEEDotMassive" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEDotMassive,lemon::NetworkSimplex< > > const &""'"); 
  }
  arg2 = reinterpret_cast< fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEDotMassive,lemon::NetworkSimplex< > > * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridRectangle,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_OptimalTransportSubtractorMomentumEEDotMassive" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridRectangle const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorMomentumEEDotMassive" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridRectangle const &""'"); 
  }
  arg3 = reinterpret_cast< fastjet::contrib::piranha::GhostGridRectangle * >(argp3);
  {
    try {
      result = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > > *)new fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > >(arg1,(fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEDotMassive,lemon::NetworkSimplex< > > const &)*arg2,(fastjet::contrib::piranha::GhostGridRectangle const &)*arg3); 
    }
    CATCH_STD_INVALID_ARGUMENT
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEDotMassive_lemon__NetworkSimplexT_t_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OptimalTransportSubtractorMomentumEEDotMassive(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_OptimalTransportSubtractorMomentumEEDotMassive", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Momentum_fastjet__contrib__emd__EEDotMassive_lemon__NetworkSimplexT_t_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridDisk, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_OptimalTransportSubtractorMomentumEEDotMassive__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Momentum_fastjet__contrib__emd__EEDotMassive_lemon__NetworkSimplexT_t_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridRectangle, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_OptimalTransportSubtractorMomentumEEDotMassive__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_OptimalTransportSubtractorMomentumEEDotMassive'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > >::OptimalTransportSubtractor(double,fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEDotMassive,lemon::NetworkSimplex< > > const &,fastjet::contrib::piranha::GhostGridDisk const &)\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > >::OptimalTransportSubtractor(double,fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEDotMassive,lemon::NetworkSimplex< > > const &,fastjet::contrib::piranha::GhostGridRectangle const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorMomentumEEDotMassive_description(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEDotMassive_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorMomentumEEDotMassive_description" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > > * >(argp1);
  {
    try {
      result = ((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > > const *)arg1)->description(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorMomentumEEDotMassive_emd_obj(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEDotMassive,lemon::NetworkSimplex< > > *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEDotMassive_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorMomentumEEDotMassive_emd_obj" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > > * >(argp1);
  {
    try {
      result = (fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEDotMassive,lemon::NetworkSimplex< > > *) &((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > > const *)arg1)->emd_obj(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Momentum_fastjet__contrib__emd__EEDotMassive_lemon__NetworkSimplexT_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorMomentumEEDotMassive_z(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEDotMassive_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorMomentumEEDotMassive_z" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > > * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > > const *)arg1)->z(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorMomentumEEDotMassive_total_subtracted(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEDotMassive_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorMomentumEEDotMassive_total_subtracted" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > > * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > > const *)arg1)->total_subtracted(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorMomentumEEDotMassive___call____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > > *) 0 ;
  fastjet::PseudoJet *arg2 = 0 ;
  double arg3 = (double) 1e-14 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > result;
  
  if ((nobjs < 2) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEDotMassive_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorMomentumEEDotMassive___call__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_fastjet__PseudoJet,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OptimalTransportSubtractorMomentumEEDotMassive___call__" "', argument " "2"" of type '" "fastjet::PseudoJet const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OptimalTransportSubtractorMomentumEEDotMassive___call__" "', argument " "2"" of type '" "fastjet::PseudoJet const &""'"); 
  }
  arg2 = reinterpret_cast< fastjet::PseudoJet * >(argp2);
  if (swig_obj[2]) {
    ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OptimalTransportSubtractorMomentumEEDotMassive___call__" "', argument " "3"" of type '" "double""'");
    } 
    arg3 = static_cast< double >(val3);
  }
  {
    try {
      result = (arg1)->operator ()((fastjet::PseudoJet const &)*arg2,arg3); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorMomentumEEDotMassive___call____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > > *) 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *arg2 = 0 ;
  fastjet::PseudoJet const &arg3_defvalue = fastjet::PtYPhiM(0, 0, 0) ;
  fastjet::PseudoJet *arg3 = (fastjet::PseudoJet *) &arg3_defvalue ;
  double arg4 = (double) 1e-14 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > result;
  
  if ((nobjs < 2) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEDotMassive_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorMomentumEEDotMassive___call__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > > * >(argp1);
  {
    std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *ptr = (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *)0;
    res2 = swig::asptr(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OptimalTransportSubtractorMomentumEEDotMassive___call__" "', argument " "2"" of type '" "std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OptimalTransportSubtractorMomentumEEDotMassive___call__" "', argument " "2"" of type '" "std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &""'"); 
    }
    arg2 = ptr;
  }
  if (swig_obj[2]) {
    res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_fastjet__PseudoJet,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OptimalTransportSubtractorMomentumEEDotMassive___call__" "', argument " "3"" of type '" "fastjet::PseudoJet const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OptimalTransportSubtractorMomentumEEDotMassive___call__" "', argument " "3"" of type '" "fastjet::PseudoJet const &""'"); 
    }
    arg3 = reinterpret_cast< fastjet::PseudoJet * >(argp3);
  }
  if (swig_obj[3]) {
    ecode4 = SWIG_AsVal_double(swig_obj[3], &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "OptimalTransportSubtractorMomentumEEDotMassive___call__" "', argument " "4"" of type '" "double""'");
    } 
    arg4 = static_cast< double >(val4);
  }
  {
    try {
      result = (arg1)->operator ()((std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &)*arg2,(fastjet::PseudoJet const &)*arg3,arg4); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorMomentumEEDotMassive___call__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "OptimalTransportSubtractorMomentumEEDotMassive___call__", 0, 4, argv))) SWIG_fail;
  --argc;
  if ((argc >= 2) && (argc <= 3)) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEDotMassive_lemon__NetworkSimplexT_t_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_fastjet__PseudoJet, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        if (argc <= 2) {
          return _wrap_OptimalTransportSubtractorMomentumEEDotMassive___call____SWIG_0(self, argc, argv);
        }
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_OptimalTransportSubtractorMomentumEEDotMassive___call____SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if ((argc >= 2) && (argc <= 4)) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEDotMassive_lemon__NetworkSimplexT_t_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = swig::asptr(argv[1], (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        if (argc <= 2) {
          return _wrap_OptimalTransportSubtractorMomentumEEDotMassive___call____SWIG_1(self, argc, argv);
        }
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_fastjet__PseudoJet, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          if (argc <= 3) {
            return _wrap_OptimalTransportSubtractorMomentumEEDotMassive___call____SWIG_1(self, argc, argv);
          }
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_OptimalTransportSubtractorMomentumEEDotMassive___call____SWIG_1(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'OptimalTransportSubtractorMomentumEEDotMassive___call__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > >::operator ()(fastjet::PseudoJet const &,double)\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > >::operator ()(std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &,fastjet::PseudoJet const &,double)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorMomentumEEDotMassive___str__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEDotMassive_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorMomentumEEDotMassive___str__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > > * >(argp1);
  {
    try {
      result = fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_Momentum_Sc_emd_EEDotMassive_Sg__Sg____str__((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > > const *)arg1); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorMomentumEEDotMassive___repr__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEDotMassive_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorMomentumEEDotMassive___repr__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > > * >(argp1);
  {
    try {
      result = fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_Momentum_Sc_emd_EEDotMassive_Sg__Sg____repr__((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > > const *)arg1); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_OptimalTransportSubtractorMomentumEEDotMassive(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEDotMassive_lemon__NetworkSimplexT_t_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OptimalTransportSubtractorMomentumEEDotMassive" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > > * >(argp1);
  {
    try {
      delete arg1; 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *OptimalTransportSubtractorMomentumEEDotMassive_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEDotMassive_lemon__NetworkSimplexT_t_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *OptimalTransportSubtractorMomentumEEDotMassive_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_OptimalTransportSubtractorMomentumEEArcLength__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEArcLength,lemon::NetworkSimplex< > > *arg2 = 0 ;
  fastjet::contrib::piranha::GhostGridDisk *arg3 = 0 ;
  double val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > > *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_OptimalTransportSubtractorMomentumEEArcLength" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Momentum_fastjet__contrib__emd__EEArcLength_lemon__NetworkSimplexT_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OptimalTransportSubtractorMomentumEEArcLength" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEArcLength,lemon::NetworkSimplex< > > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorMomentumEEArcLength" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEArcLength,lemon::NetworkSimplex< > > const &""'"); 
  }
  arg2 = reinterpret_cast< fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEArcLength,lemon::NetworkSimplex< > > * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridDisk,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_OptimalTransportSubtractorMomentumEEArcLength" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridDisk const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorMomentumEEArcLength" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridDisk const &""'"); 
  }
  arg3 = reinterpret_cast< fastjet::contrib::piranha::GhostGridDisk * >(argp3);
  {
    try {
      result = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > > *)new fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > >(arg1,(fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEArcLength,lemon::NetworkSimplex< > > const &)*arg2,(fastjet::contrib::piranha::GhostGridDisk const &)*arg3); 
    }
    CATCH_STD_INVALID_ARGUMENT
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEArcLength_lemon__NetworkSimplexT_t_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OptimalTransportSubtractorMomentumEEArcLength__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEArcLength,lemon::NetworkSimplex< > > *arg2 = 0 ;
  fastjet::contrib::piranha::GhostGridRectangle *arg3 = 0 ;
  double val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > > *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_OptimalTransportSubtractorMomentumEEArcLength" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Momentum_fastjet__contrib__emd__EEArcLength_lemon__NetworkSimplexT_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OptimalTransportSubtractorMomentumEEArcLength" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEArcLength,lemon::NetworkSimplex< > > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorMomentumEEArcLength" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEArcLength,lemon::NetworkSimplex< > > const &""'"); 
  }
  arg2 = reinterpret_cast< fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEArcLength,lemon::NetworkSimplex< > > * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridRectangle,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_OptimalTransportSubtractorMomentumEEArcLength" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridRectangle const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorMomentumEEArcLength" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridRectangle const &""'"); 
  }
  arg3 = reinterpret_cast< fastjet::contrib::piranha::GhostGridRectangle * >(argp3);
  {
    try {
      result = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > > *)new fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > >(arg1,(fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEArcLength,lemon::NetworkSimplex< > > const &)*arg2,(fastjet::contrib::piranha::GhostGridRectangle const &)*arg3); 
    }
    CATCH_STD_INVALID_ARGUMENT
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEArcLength_lemon__NetworkSimplexT_t_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OptimalTransportSubtractorMomentumEEArcLength(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_OptimalTransportSubtractorMomentumEEArcLength", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Momentum_fastjet__contrib__emd__EEArcLength_lemon__NetworkSimplexT_t_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridDisk, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_OptimalTransportSubtractorMomentumEEArcLength__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Momentum_fastjet__contrib__emd__EEArcLength_lemon__NetworkSimplexT_t_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridRectangle, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_OptimalTransportSubtractorMomentumEEArcLength__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_OptimalTransportSubtractorMomentumEEArcLength'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > >::OptimalTransportSubtractor(double,fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEArcLength,lemon::NetworkSimplex< > > const &,fastjet::contrib::piranha::GhostGridDisk const &)\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > >::OptimalTransportSubtractor(double,fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEArcLength,lemon::NetworkSimplex< > > const &,fastjet::contrib::piranha::GhostGridRectangle const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorMomentumEEArcLength_description(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEArcLength_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorMomentumEEArcLength_description" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > > * >(argp1);
  {
    try {
      result = ((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > > const *)arg1)->description(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorMomentumEEArcLength_emd_obj(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEArcLength,lemon::NetworkSimplex< > > *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEArcLength_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorMomentumEEArcLength_emd_obj" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > > * >(argp1);
  {
    try {
      result = (fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEArcLength,lemon::NetworkSimplex< > > *) &((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > > const *)arg1)->emd_obj(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Momentum_fastjet__contrib__emd__EEArcLength_lemon__NetworkSimplexT_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorMomentumEEArcLength_z(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEArcLength_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorMomentumEEArcLength_z" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > > * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > > const *)arg1)->z(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorMomentumEEArcLength_total_subtracted(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEArcLength_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorMomentumEEArcLength_total_subtracted" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > > * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > > const *)arg1)->total_subtracted(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorMomentumEEArcLength___call____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > > *) 0 ;
  fastjet::PseudoJet *arg2 = 0 ;
  double arg3 = (double) 1e-14 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > result;
  
  if ((nobjs < 2) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEArcLength_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorMomentumEEArcLength___call__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_fastjet__PseudoJet,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OptimalTransportSubtractorMomentumEEArcLength___call__" "', argument " "2"" of type '" "fastjet::PseudoJet const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OptimalTransportSubtractorMomentumEEArcLength___call__" "', argument " "2"" of type '" "fastjet::PseudoJet const &""'"); 
  }
  arg2 = reinterpret_cast< fastjet::PseudoJet * >(argp2);
  if (swig_obj[2]) {
    ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OptimalTransportSubtractorMomentumEEArcLength___call__" "', argument " "3"" of type '" "double""'");
    } 
    arg3 = static_cast< double >(val3);
  }
  {
    try {
      result = (arg1)->operator ()((fastjet::PseudoJet const &)*arg2,arg3); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorMomentumEEArcLength___call____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > > *) 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *arg2 = 0 ;
  fastjet::PseudoJet const &arg3_defvalue = fastjet::PtYPhiM(0, 0, 0) ;
  fastjet::PseudoJet *arg3 = (fastjet::PseudoJet *) &arg3_defvalue ;
  double arg4 = (double) 1e-14 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > result;
  
  if ((nobjs < 2) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEArcLength_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorMomentumEEArcLength___call__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > > * >(argp1);
  {
    std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *ptr = (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *)0;
    res2 = swig::asptr(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OptimalTransportSubtractorMomentumEEArcLength___call__" "', argument " "2"" of type '" "std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OptimalTransportSubtractorMomentumEEArcLength___call__" "', argument " "2"" of type '" "std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &""'"); 
    }
    arg2 = ptr;
  }
  if (swig_obj[2]) {
    res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_fastjet__PseudoJet,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OptimalTransportSubtractorMomentumEEArcLength___call__" "', argument " "3"" of type '" "fastjet::PseudoJet const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OptimalTransportSubtractorMomentumEEArcLength___call__" "', argument " "3"" of type '" "fastjet::PseudoJet const &""'"); 
    }
    arg3 = reinterpret_cast< fastjet::PseudoJet * >(argp3);
  }
  if (swig_obj[3]) {
    ecode4 = SWIG_AsVal_double(swig_obj[3], &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "OptimalTransportSubtractorMomentumEEArcLength___call__" "', argument " "4"" of type '" "double""'");
    } 
    arg4 = static_cast< double >(val4);
  }
  {
    try {
      result = (arg1)->operator ()((std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &)*arg2,(fastjet::PseudoJet const &)*arg3,arg4); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorMomentumEEArcLength___call__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "OptimalTransportSubtractorMomentumEEArcLength___call__", 0, 4, argv))) SWIG_fail;
  --argc;
  if ((argc >= 2) && (argc <= 3)) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEArcLength_lemon__NetworkSimplexT_t_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_fastjet__PseudoJet, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        if (argc <= 2) {
          return _wrap_OptimalTransportSubtractorMomentumEEArcLength___call____SWIG_0(self, argc, argv);
        }
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_OptimalTransportSubtractorMomentumEEArcLength___call____SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if ((argc >= 2) && (argc <= 4)) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEArcLength_lemon__NetworkSimplexT_t_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = swig::asptr(argv[1], (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        if (argc <= 2) {
          return _wrap_OptimalTransportSubtractorMomentumEEArcLength___call____SWIG_1(self, argc, argv);
        }
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_fastjet__PseudoJet, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          if (argc <= 3) {
            return _wrap_OptimalTransportSubtractorMomentumEEArcLength___call____SWIG_1(self, argc, argv);
          }
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_OptimalTransportSubtractorMomentumEEArcLength___call____SWIG_1(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'OptimalTransportSubtractorMomentumEEArcLength___call__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > >::operator ()(fastjet::PseudoJet const &,double)\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > >::operator ()(std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &,fastjet::PseudoJet const &,double)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorMomentumEEArcLength___str__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEArcLength_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorMomentumEEArcLength___str__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > > * >(argp1);
  {
    try {
      result = fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_Momentum_Sc_emd_EEArcLength_Sg__Sg____str__((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > > const *)arg1); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorMomentumEEArcLength___repr__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEArcLength_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorMomentumEEArcLength___repr__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > > * >(argp1);
  {
    try {
      result = fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_Momentum_Sc_emd_EEArcLength_Sg__Sg____repr__((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > > const *)arg1); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_OptimalTransportSubtractorMomentumEEArcLength(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEArcLength_lemon__NetworkSimplexT_t_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OptimalTransportSubtractorMomentumEEArcLength" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > > * >(argp1);
  {
    try {
      delete arg1; 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *OptimalTransportSubtractorMomentumEEArcLength_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEArcLength_lemon__NetworkSimplexT_t_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *OptimalTransportSubtractorMomentumEEArcLength_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_OptimalTransportSubtractorMomentumEEArcLengthMassive__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEArcLengthMassive,lemon::NetworkSimplex< > > *arg2 = 0 ;
  fastjet::contrib::piranha::GhostGridDisk *arg3 = 0 ;
  double val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > > *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_OptimalTransportSubtractorMomentumEEArcLengthMassive" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Momentum_fastjet__contrib__emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OptimalTransportSubtractorMomentumEEArcLengthMassive" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEArcLengthMassive,lemon::NetworkSimplex< > > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorMomentumEEArcLengthMassive" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEArcLengthMassive,lemon::NetworkSimplex< > > const &""'"); 
  }
  arg2 = reinterpret_cast< fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEArcLengthMassive,lemon::NetworkSimplex< > > * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridDisk,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_OptimalTransportSubtractorMomentumEEArcLengthMassive" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridDisk const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorMomentumEEArcLengthMassive" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridDisk const &""'"); 
  }
  arg3 = reinterpret_cast< fastjet::contrib::piranha::GhostGridDisk * >(argp3);
  {
    try {
      result = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > > *)new fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > >(arg1,(fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEArcLengthMassive,lemon::NetworkSimplex< > > const &)*arg2,(fastjet::contrib::piranha::GhostGridDisk const &)*arg3); 
    }
    CATCH_STD_INVALID_ARGUMENT
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OptimalTransportSubtractorMomentumEEArcLengthMassive__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEArcLengthMassive,lemon::NetworkSimplex< > > *arg2 = 0 ;
  fastjet::contrib::piranha::GhostGridRectangle *arg3 = 0 ;
  double val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > > *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_OptimalTransportSubtractorMomentumEEArcLengthMassive" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Momentum_fastjet__contrib__emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OptimalTransportSubtractorMomentumEEArcLengthMassive" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEArcLengthMassive,lemon::NetworkSimplex< > > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorMomentumEEArcLengthMassive" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEArcLengthMassive,lemon::NetworkSimplex< > > const &""'"); 
  }
  arg2 = reinterpret_cast< fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEArcLengthMassive,lemon::NetworkSimplex< > > * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridRectangle,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_OptimalTransportSubtractorMomentumEEArcLengthMassive" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridRectangle const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorMomentumEEArcLengthMassive" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridRectangle const &""'"); 
  }
  arg3 = reinterpret_cast< fastjet::contrib::piranha::GhostGridRectangle * >(argp3);
  {
    try {
      result = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > > *)new fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > >(arg1,(fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEArcLengthMassive,lemon::NetworkSimplex< > > const &)*arg2,(fastjet::contrib::piranha::GhostGridRectangle const &)*arg3); 
    }
    CATCH_STD_INVALID_ARGUMENT
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OptimalTransportSubtractorMomentumEEArcLengthMassive(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_OptimalTransportSubtractorMomentumEEArcLengthMassive", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Momentum_fastjet__contrib__emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridDisk, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_OptimalTransportSubtractorMomentumEEArcLengthMassive__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Momentum_fastjet__contrib__emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridRectangle, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_OptimalTransportSubtractorMomentumEEArcLengthMassive__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_OptimalTransportSubtractorMomentumEEArcLengthMassive'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > >::OptimalTransportSubtractor(double,fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEArcLengthMassive,lemon::NetworkSimplex< > > const &,fastjet::contrib::piranha::GhostGridDisk const &)\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > >::OptimalTransportSubtractor(double,fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEArcLengthMassive,lemon::NetworkSimplex< > > const &,fastjet::contrib::piranha::GhostGridRectangle const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorMomentumEEArcLengthMassive_description(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorMomentumEEArcLengthMassive_description" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > > * >(argp1);
  {
    try {
      result = ((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > > const *)arg1)->description(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorMomentumEEArcLengthMassive_emd_obj(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEArcLengthMassive,lemon::NetworkSimplex< > > *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorMomentumEEArcLengthMassive_emd_obj" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > > * >(argp1);
  {
    try {
      result = (fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEArcLengthMassive,lemon::NetworkSimplex< > > *) &((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > > const *)arg1)->emd_obj(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Momentum_fastjet__contrib__emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorMomentumEEArcLengthMassive_z(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorMomentumEEArcLengthMassive_z" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > > * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > > const *)arg1)->z(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorMomentumEEArcLengthMassive_total_subtracted(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorMomentumEEArcLengthMassive_total_subtracted" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > > * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > > const *)arg1)->total_subtracted(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorMomentumEEArcLengthMassive___call____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > > *) 0 ;
  fastjet::PseudoJet *arg2 = 0 ;
  double arg3 = (double) 1e-14 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > result;
  
  if ((nobjs < 2) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorMomentumEEArcLengthMassive___call__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_fastjet__PseudoJet,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OptimalTransportSubtractorMomentumEEArcLengthMassive___call__" "', argument " "2"" of type '" "fastjet::PseudoJet const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OptimalTransportSubtractorMomentumEEArcLengthMassive___call__" "', argument " "2"" of type '" "fastjet::PseudoJet const &""'"); 
  }
  arg2 = reinterpret_cast< fastjet::PseudoJet * >(argp2);
  if (swig_obj[2]) {
    ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OptimalTransportSubtractorMomentumEEArcLengthMassive___call__" "', argument " "3"" of type '" "double""'");
    } 
    arg3 = static_cast< double >(val3);
  }
  {
    try {
      result = (arg1)->operator ()((fastjet::PseudoJet const &)*arg2,arg3); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorMomentumEEArcLengthMassive___call____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > > *) 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *arg2 = 0 ;
  fastjet::PseudoJet const &arg3_defvalue = fastjet::PtYPhiM(0, 0, 0) ;
  fastjet::PseudoJet *arg3 = (fastjet::PseudoJet *) &arg3_defvalue ;
  double arg4 = (double) 1e-14 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > result;
  
  if ((nobjs < 2) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorMomentumEEArcLengthMassive___call__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > > * >(argp1);
  {
    std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *ptr = (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *)0;
    res2 = swig::asptr(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OptimalTransportSubtractorMomentumEEArcLengthMassive___call__" "', argument " "2"" of type '" "std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OptimalTransportSubtractorMomentumEEArcLengthMassive___call__" "', argument " "2"" of type '" "std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &""'"); 
    }
    arg2 = ptr;
  }
  if (swig_obj[2]) {
    res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_fastjet__PseudoJet,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OptimalTransportSubtractorMomentumEEArcLengthMassive___call__" "', argument " "3"" of type '" "fastjet::PseudoJet const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OptimalTransportSubtractorMomentumEEArcLengthMassive___call__" "', argument " "3"" of type '" "fastjet::PseudoJet const &""'"); 
    }
    arg3 = reinterpret_cast< fastjet::PseudoJet * >(argp3);
  }
  if (swig_obj[3]) {
    ecode4 = SWIG_AsVal_double(swig_obj[3], &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "OptimalTransportSubtractorMomentumEEArcLengthMassive___call__" "', argument " "4"" of type '" "double""'");
    } 
    arg4 = static_cast< double >(val4);
  }
  {
    try {
      result = (arg1)->operator ()((std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &)*arg2,(fastjet::PseudoJet const &)*arg3,arg4); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorMomentumEEArcLengthMassive___call__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "OptimalTransportSubtractorMomentumEEArcLengthMassive___call__", 0, 4, argv))) SWIG_fail;
  --argc;
  if ((argc >= 2) && (argc <= 3)) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_fastjet__PseudoJet, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        if (argc <= 2) {
          return _wrap_OptimalTransportSubtractorMomentumEEArcLengthMassive___call____SWIG_0(self, argc, argv);
        }
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_OptimalTransportSubtractorMomentumEEArcLengthMassive___call____SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if ((argc >= 2) && (argc <= 4)) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = swig::asptr(argv[1], (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        if (argc <= 2) {
          return _wrap_OptimalTransportSubtractorMomentumEEArcLengthMassive___call____SWIG_1(self, argc, argv);
        }
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_fastjet__PseudoJet, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          if (argc <= 3) {
            return _wrap_OptimalTransportSubtractorMomentumEEArcLengthMassive___call____SWIG_1(self, argc, argv);
          }
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_OptimalTransportSubtractorMomentumEEArcLengthMassive___call____SWIG_1(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'OptimalTransportSubtractorMomentumEEArcLengthMassive___call__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > >::operator ()(fastjet::PseudoJet const &,double)\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > >::operator ()(std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &,fastjet::PseudoJet const &,double)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorMomentumEEArcLengthMassive___str__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorMomentumEEArcLengthMassive___str__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > > * >(argp1);
  {
    try {
      result = fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_Momentum_Sc_emd_EEArcLengthMassive_Sg__Sg____str__((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > > const *)arg1); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorMomentumEEArcLengthMassive___repr__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorMomentumEEArcLengthMassive___repr__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > > * >(argp1);
  {
    try {
      result = fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_Momentum_Sc_emd_EEArcLengthMassive_Sg__Sg____repr__((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > > const *)arg1); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_OptimalTransportSubtractorMomentumEEArcLengthMassive(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OptimalTransportSubtractorMomentumEEArcLengthMassive" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > > * >(argp1);
  {
    try {
      delete arg1; 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *OptimalTransportSubtractorMomentumEEArcLengthMassive_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *OptimalTransportSubtractorMomentumEEArcLengthMassive_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_OptimalTransportSubtractorEnergyEEDot__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEDot,lemon::NetworkSimplex< > > *arg2 = 0 ;
  fastjet::contrib::piranha::GhostGridDisk *arg3 = 0 ;
  double val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > > *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_OptimalTransportSubtractorEnergyEEDot" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Energy_fastjet__contrib__emd__EEDot_lemon__NetworkSimplexT_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OptimalTransportSubtractorEnergyEEDot" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEDot,lemon::NetworkSimplex< > > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorEnergyEEDot" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEDot,lemon::NetworkSimplex< > > const &""'"); 
  }
  arg2 = reinterpret_cast< fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEDot,lemon::NetworkSimplex< > > * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridDisk,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_OptimalTransportSubtractorEnergyEEDot" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridDisk const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorEnergyEEDot" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridDisk const &""'"); 
  }
  arg3 = reinterpret_cast< fastjet::contrib::piranha::GhostGridDisk * >(argp3);
  {
    try {
      result = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > > *)new fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > >(arg1,(fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEDot,lemon::NetworkSimplex< > > const &)*arg2,(fastjet::contrib::piranha::GhostGridDisk const &)*arg3); 
    }
    CATCH_STD_INVALID_ARGUMENT
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEDot_lemon__NetworkSimplexT_t_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OptimalTransportSubtractorEnergyEEDot__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEDot,lemon::NetworkSimplex< > > *arg2 = 0 ;
  fastjet::contrib::piranha::GhostGridRectangle *arg3 = 0 ;
  double val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > > *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_OptimalTransportSubtractorEnergyEEDot" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Energy_fastjet__contrib__emd__EEDot_lemon__NetworkSimplexT_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OptimalTransportSubtractorEnergyEEDot" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEDot,lemon::NetworkSimplex< > > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorEnergyEEDot" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEDot,lemon::NetworkSimplex< > > const &""'"); 
  }
  arg2 = reinterpret_cast< fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEDot,lemon::NetworkSimplex< > > * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridRectangle,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_OptimalTransportSubtractorEnergyEEDot" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridRectangle const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorEnergyEEDot" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridRectangle const &""'"); 
  }
  arg3 = reinterpret_cast< fastjet::contrib::piranha::GhostGridRectangle * >(argp3);
  {
    try {
      result = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > > *)new fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > >(arg1,(fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEDot,lemon::NetworkSimplex< > > const &)*arg2,(fastjet::contrib::piranha::GhostGridRectangle const &)*arg3); 
    }
    CATCH_STD_INVALID_ARGUMENT
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEDot_lemon__NetworkSimplexT_t_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OptimalTransportSubtractorEnergyEEDot(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_OptimalTransportSubtractorEnergyEEDot", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Energy_fastjet__contrib__emd__EEDot_lemon__NetworkSimplexT_t_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridDisk, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_OptimalTransportSubtractorEnergyEEDot__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Energy_fastjet__contrib__emd__EEDot_lemon__NetworkSimplexT_t_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridRectangle, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_OptimalTransportSubtractorEnergyEEDot__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_OptimalTransportSubtractorEnergyEEDot'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > >::OptimalTransportSubtractor(double,fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEDot,lemon::NetworkSimplex< > > const &,fastjet::contrib::piranha::GhostGridDisk const &)\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > >::OptimalTransportSubtractor(double,fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEDot,lemon::NetworkSimplex< > > const &,fastjet::contrib::piranha::GhostGridRectangle const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorEnergyEEDot_description(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEDot_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorEnergyEEDot_description" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > > * >(argp1);
  {
    try {
      result = ((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > > const *)arg1)->description(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorEnergyEEDot_emd_obj(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEDot,lemon::NetworkSimplex< > > *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEDot_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorEnergyEEDot_emd_obj" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > > * >(argp1);
  {
    try {
      result = (fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEDot,lemon::NetworkSimplex< > > *) &((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > > const *)arg1)->emd_obj(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Energy_fastjet__contrib__emd__EEDot_lemon__NetworkSimplexT_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorEnergyEEDot_z(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEDot_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorEnergyEEDot_z" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > > * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > > const *)arg1)->z(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorEnergyEEDot_total_subtracted(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEDot_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorEnergyEEDot_total_subtracted" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > > * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > > const *)arg1)->total_subtracted(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorEnergyEEDot___call____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > > *) 0 ;
  fastjet::PseudoJet *arg2 = 0 ;
  double arg3 = (double) 1e-14 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > result;
  
  if ((nobjs < 2) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEDot_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorEnergyEEDot___call__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_fastjet__PseudoJet,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OptimalTransportSubtractorEnergyEEDot___call__" "', argument " "2"" of type '" "fastjet::PseudoJet const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OptimalTransportSubtractorEnergyEEDot___call__" "', argument " "2"" of type '" "fastjet::PseudoJet const &""'"); 
  }
  arg2 = reinterpret_cast< fastjet::PseudoJet * >(argp2);
  if (swig_obj[2]) {
    ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OptimalTransportSubtractorEnergyEEDot___call__" "', argument " "3"" of type '" "double""'");
    } 
    arg3 = static_cast< double >(val3);
  }
  {
    try {
      result = (arg1)->operator ()((fastjet::PseudoJet const &)*arg2,arg3); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorEnergyEEDot___call____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > > *) 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *arg2 = 0 ;
  fastjet::PseudoJet const &arg3_defvalue = fastjet::PtYPhiM(0, 0, 0) ;
  fastjet::PseudoJet *arg3 = (fastjet::PseudoJet *) &arg3_defvalue ;
  double arg4 = (double) 1e-14 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > result;
  
  if ((nobjs < 2) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEDot_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorEnergyEEDot___call__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > > * >(argp1);
  {
    std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *ptr = (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *)0;
    res2 = swig::asptr(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OptimalTransportSubtractorEnergyEEDot___call__" "', argument " "2"" of type '" "std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OptimalTransportSubtractorEnergyEEDot___call__" "', argument " "2"" of type '" "std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &""'"); 
    }
    arg2 = ptr;
  }
  if (swig_obj[2]) {
    res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_fastjet__PseudoJet,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OptimalTransportSubtractorEnergyEEDot___call__" "', argument " "3"" of type '" "fastjet::PseudoJet const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OptimalTransportSubtractorEnergyEEDot___call__" "', argument " "3"" of type '" "fastjet::PseudoJet const &""'"); 
    }
    arg3 = reinterpret_cast< fastjet::PseudoJet * >(argp3);
  }
  if (swig_obj[3]) {
    ecode4 = SWIG_AsVal_double(swig_obj[3], &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "OptimalTransportSubtractorEnergyEEDot___call__" "', argument " "4"" of type '" "double""'");
    } 
    arg4 = static_cast< double >(val4);
  }
  {
    try {
      result = (arg1)->operator ()((std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &)*arg2,(fastjet::PseudoJet const &)*arg3,arg4); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorEnergyEEDot___call__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "OptimalTransportSubtractorEnergyEEDot___call__", 0, 4, argv))) SWIG_fail;
  --argc;
  if ((argc >= 2) && (argc <= 3)) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEDot_lemon__NetworkSimplexT_t_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_fastjet__PseudoJet, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        if (argc <= 2) {
          return _wrap_OptimalTransportSubtractorEnergyEEDot___call____SWIG_0(self, argc, argv);
        }
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_OptimalTransportSubtractorEnergyEEDot___call____SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if ((argc >= 2) && (argc <= 4)) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEDot_lemon__NetworkSimplexT_t_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = swig::asptr(argv[1], (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        if (argc <= 2) {
          return _wrap_OptimalTransportSubtractorEnergyEEDot___call____SWIG_1(self, argc, argv);
        }
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_fastjet__PseudoJet, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          if (argc <= 3) {
            return _wrap_OptimalTransportSubtractorEnergyEEDot___call____SWIG_1(self, argc, argv);
          }
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_OptimalTransportSubtractorEnergyEEDot___call____SWIG_1(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'OptimalTransportSubtractorEnergyEEDot___call__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > >::operator ()(fastjet::PseudoJet const &,double)\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > >::operator ()(std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &,fastjet::PseudoJet const &,double)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorEnergyEEDot___str__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEDot_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorEnergyEEDot___str__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > > * >(argp1);
  {
    try {
      result = fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_Energy_Sc_emd_EEDot_Sg__Sg____str__((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > > const *)arg1); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorEnergyEEDot___repr__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEDot_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorEnergyEEDot___repr__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > > * >(argp1);
  {
    try {
      result = fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_Energy_Sc_emd_EEDot_Sg__Sg____repr__((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > > const *)arg1); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_OptimalTransportSubtractorEnergyEEDot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEDot_lemon__NetworkSimplexT_t_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OptimalTransportSubtractorEnergyEEDot" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > > * >(argp1);
  {
    try {
      delete arg1; 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *OptimalTransportSubtractorEnergyEEDot_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEDot_lemon__NetworkSimplexT_t_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *OptimalTransportSubtractorEnergyEEDot_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_OptimalTransportSubtractorEnergyEEDotMassive__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEDotMassive,lemon::NetworkSimplex< > > *arg2 = 0 ;
  fastjet::contrib::piranha::GhostGridDisk *arg3 = 0 ;
  double val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > > *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_OptimalTransportSubtractorEnergyEEDotMassive" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Energy_fastjet__contrib__emd__EEDotMassive_lemon__NetworkSimplexT_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OptimalTransportSubtractorEnergyEEDotMassive" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEDotMassive,lemon::NetworkSimplex< > > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorEnergyEEDotMassive" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEDotMassive,lemon::NetworkSimplex< > > const &""'"); 
  }
  arg2 = reinterpret_cast< fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEDotMassive,lemon::NetworkSimplex< > > * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridDisk,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_OptimalTransportSubtractorEnergyEEDotMassive" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridDisk const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorEnergyEEDotMassive" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridDisk const &""'"); 
  }
  arg3 = reinterpret_cast< fastjet::contrib::piranha::GhostGridDisk * >(argp3);
  {
    try {
      result = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > > *)new fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > >(arg1,(fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEDotMassive,lemon::NetworkSimplex< > > const &)*arg2,(fastjet::contrib::piranha::GhostGridDisk const &)*arg3); 
    }
    CATCH_STD_INVALID_ARGUMENT
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEDotMassive_lemon__NetworkSimplexT_t_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OptimalTransportSubtractorEnergyEEDotMassive__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEDotMassive,lemon::NetworkSimplex< > > *arg2 = 0 ;
  fastjet::contrib::piranha::GhostGridRectangle *arg3 = 0 ;
  double val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > > *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_OptimalTransportSubtractorEnergyEEDotMassive" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Energy_fastjet__contrib__emd__EEDotMassive_lemon__NetworkSimplexT_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OptimalTransportSubtractorEnergyEEDotMassive" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEDotMassive,lemon::NetworkSimplex< > > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorEnergyEEDotMassive" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEDotMassive,lemon::NetworkSimplex< > > const &""'"); 
  }
  arg2 = reinterpret_cast< fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEDotMassive,lemon::NetworkSimplex< > > * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridRectangle,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_OptimalTransportSubtractorEnergyEEDotMassive" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridRectangle const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorEnergyEEDotMassive" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridRectangle const &""'"); 
  }
  arg3 = reinterpret_cast< fastjet::contrib::piranha::GhostGridRectangle * >(argp3);
  {
    try {
      result = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > > *)new fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > >(arg1,(fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEDotMassive,lemon::NetworkSimplex< > > const &)*arg2,(fastjet::contrib::piranha::GhostGridRectangle const &)*arg3); 
    }
    CATCH_STD_INVALID_ARGUMENT
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEDotMassive_lemon__NetworkSimplexT_t_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OptimalTransportSubtractorEnergyEEDotMassive(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_OptimalTransportSubtractorEnergyEEDotMassive", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Energy_fastjet__contrib__emd__EEDotMassive_lemon__NetworkSimplexT_t_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridDisk, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_OptimalTransportSubtractorEnergyEEDotMassive__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Energy_fastjet__contrib__emd__EEDotMassive_lemon__NetworkSimplexT_t_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridRectangle, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_OptimalTransportSubtractorEnergyEEDotMassive__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_OptimalTransportSubtractorEnergyEEDotMassive'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > >::OptimalTransportSubtractor(double,fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEDotMassive,lemon::NetworkSimplex< > > const &,fastjet::contrib::piranha::GhostGridDisk const &)\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > >::OptimalTransportSubtractor(double,fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEDotMassive,lemon::NetworkSimplex< > > const &,fastjet::contrib::piranha::GhostGridRectangle const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorEnergyEEDotMassive_description(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEDotMassive_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorEnergyEEDotMassive_description" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > > * >(argp1);
  {
    try {
      result = ((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > > const *)arg1)->description(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorEnergyEEDotMassive_emd_obj(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEDotMassive,lemon::NetworkSimplex< > > *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEDotMassive_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorEnergyEEDotMassive_emd_obj" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > > * >(argp1);
  {
    try {
      result = (fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEDotMassive,lemon::NetworkSimplex< > > *) &((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > > const *)arg1)->emd_obj(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Energy_fastjet__contrib__emd__EEDotMassive_lemon__NetworkSimplexT_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorEnergyEEDotMassive_z(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEDotMassive_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorEnergyEEDotMassive_z" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > > * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > > const *)arg1)->z(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorEnergyEEDotMassive_total_subtracted(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEDotMassive_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorEnergyEEDotMassive_total_subtracted" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > > * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > > const *)arg1)->total_subtracted(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorEnergyEEDotMassive___call____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > > *) 0 ;
  fastjet::PseudoJet *arg2 = 0 ;
  double arg3 = (double) 1e-14 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > result;
  
  if ((nobjs < 2) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEDotMassive_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorEnergyEEDotMassive___call__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_fastjet__PseudoJet,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OptimalTransportSubtractorEnergyEEDotMassive___call__" "', argument " "2"" of type '" "fastjet::PseudoJet const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OptimalTransportSubtractorEnergyEEDotMassive___call__" "', argument " "2"" of type '" "fastjet::PseudoJet const &""'"); 
  }
  arg2 = reinterpret_cast< fastjet::PseudoJet * >(argp2);
  if (swig_obj[2]) {
    ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OptimalTransportSubtractorEnergyEEDotMassive___call__" "', argument " "3"" of type '" "double""'");
    } 
    arg3 = static_cast< double >(val3);
  }
  {
    try {
      result = (arg1)->operator ()((fastjet::PseudoJet const &)*arg2,arg3); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorEnergyEEDotMassive___call____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > > *) 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *arg2 = 0 ;
  fastjet::PseudoJet const &arg3_defvalue = fastjet::PtYPhiM(0, 0, 0) ;
  fastjet::PseudoJet *arg3 = (fastjet::PseudoJet *) &arg3_defvalue ;
  double arg4 = (double) 1e-14 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > result;
  
  if ((nobjs < 2) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEDotMassive_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorEnergyEEDotMassive___call__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > > * >(argp1);
  {
    std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *ptr = (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *)0;
    res2 = swig::asptr(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OptimalTransportSubtractorEnergyEEDotMassive___call__" "', argument " "2"" of type '" "std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OptimalTransportSubtractorEnergyEEDotMassive___call__" "', argument " "2"" of type '" "std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &""'"); 
    }
    arg2 = ptr;
  }
  if (swig_obj[2]) {
    res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_fastjet__PseudoJet,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OptimalTransportSubtractorEnergyEEDotMassive___call__" "', argument " "3"" of type '" "fastjet::PseudoJet const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OptimalTransportSubtractorEnergyEEDotMassive___call__" "', argument " "3"" of type '" "fastjet::PseudoJet const &""'"); 
    }
    arg3 = reinterpret_cast< fastjet::PseudoJet * >(argp3);
  }
  if (swig_obj[3]) {
    ecode4 = SWIG_AsVal_double(swig_obj[3], &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "OptimalTransportSubtractorEnergyEEDotMassive___call__" "', argument " "4"" of type '" "double""'");
    } 
    arg4 = static_cast< double >(val4);
  }
  {
    try {
      result = (arg1)->operator ()((std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &)*arg2,(fastjet::PseudoJet const &)*arg3,arg4); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorEnergyEEDotMassive___call__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "OptimalTransportSubtractorEnergyEEDotMassive___call__", 0, 4, argv))) SWIG_fail;
  --argc;
  if ((argc >= 2) && (argc <= 3)) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEDotMassive_lemon__NetworkSimplexT_t_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_fastjet__PseudoJet, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        if (argc <= 2) {
          return _wrap_OptimalTransportSubtractorEnergyEEDotMassive___call____SWIG_0(self, argc, argv);
        }
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_OptimalTransportSubtractorEnergyEEDotMassive___call____SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if ((argc >= 2) && (argc <= 4)) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEDotMassive_lemon__NetworkSimplexT_t_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = swig::asptr(argv[1], (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        if (argc <= 2) {
          return _wrap_OptimalTransportSubtractorEnergyEEDotMassive___call____SWIG_1(self, argc, argv);
        }
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_fastjet__PseudoJet, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          if (argc <= 3) {
            return _wrap_OptimalTransportSubtractorEnergyEEDotMassive___call____SWIG_1(self, argc, argv);
          }
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_OptimalTransportSubtractorEnergyEEDotMassive___call____SWIG_1(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'OptimalTransportSubtractorEnergyEEDotMassive___call__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > >::operator ()(fastjet::PseudoJet const &,double)\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > >::operator ()(std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &,fastjet::PseudoJet const &,double)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorEnergyEEDotMassive___str__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEDotMassive_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorEnergyEEDotMassive___str__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > > * >(argp1);
  {
    try {
      result = fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_Energy_Sc_emd_EEDotMassive_Sg__Sg____str__((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > > const *)arg1); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorEnergyEEDotMassive___repr__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEDotMassive_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorEnergyEEDotMassive___repr__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > > * >(argp1);
  {
    try {
      result = fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_Energy_Sc_emd_EEDotMassive_Sg__Sg____repr__((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > > const *)arg1); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_OptimalTransportSubtractorEnergyEEDotMassive(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEDotMassive_lemon__NetworkSimplexT_t_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OptimalTransportSubtractorEnergyEEDotMassive" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > > * >(argp1);
  {
    try {
      delete arg1; 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *OptimalTransportSubtractorEnergyEEDotMassive_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEDotMassive_lemon__NetworkSimplexT_t_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *OptimalTransportSubtractorEnergyEEDotMassive_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_OptimalTransportSubtractorEnergyEEArcLength__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEArcLength,lemon::NetworkSimplex< > > *arg2 = 0 ;
  fastjet::contrib::piranha::GhostGridDisk *arg3 = 0 ;
  double val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > > *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_OptimalTransportSubtractorEnergyEEArcLength" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Energy_fastjet__contrib__emd__EEArcLength_lemon__NetworkSimplexT_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OptimalTransportSubtractorEnergyEEArcLength" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEArcLength,lemon::NetworkSimplex< > > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorEnergyEEArcLength" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEArcLength,lemon::NetworkSimplex< > > const &""'"); 
  }
  arg2 = reinterpret_cast< fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEArcLength,lemon::NetworkSimplex< > > * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridDisk,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_OptimalTransportSubtractorEnergyEEArcLength" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridDisk const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorEnergyEEArcLength" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridDisk const &""'"); 
  }
  arg3 = reinterpret_cast< fastjet::contrib::piranha::GhostGridDisk * >(argp3);
  {
    try {
      result = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > > *)new fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > >(arg1,(fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEArcLength,lemon::NetworkSimplex< > > const &)*arg2,(fastjet::contrib::piranha::GhostGridDisk const &)*arg3); 
    }
    CATCH_STD_INVALID_ARGUMENT
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEArcLength_lemon__NetworkSimplexT_t_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OptimalTransportSubtractorEnergyEEArcLength__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEArcLength,lemon::NetworkSimplex< > > *arg2 = 0 ;
  fastjet::contrib::piranha::GhostGridRectangle *arg3 = 0 ;
  double val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > > *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_OptimalTransportSubtractorEnergyEEArcLength" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Energy_fastjet__contrib__emd__EEArcLength_lemon__NetworkSimplexT_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OptimalTransportSubtractorEnergyEEArcLength" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEArcLength,lemon::NetworkSimplex< > > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorEnergyEEArcLength" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEArcLength,lemon::NetworkSimplex< > > const &""'"); 
  }
  arg2 = reinterpret_cast< fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEArcLength,lemon::NetworkSimplex< > > * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridRectangle,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_OptimalTransportSubtractorEnergyEEArcLength" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridRectangle const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorEnergyEEArcLength" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridRectangle const &""'"); 
  }
  arg3 = reinterpret_cast< fastjet::contrib::piranha::GhostGridRectangle * >(argp3);
  {
    try {
      result = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > > *)new fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > >(arg1,(fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEArcLength,lemon::NetworkSimplex< > > const &)*arg2,(fastjet::contrib::piranha::GhostGridRectangle const &)*arg3); 
    }
    CATCH_STD_INVALID_ARGUMENT
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEArcLength_lemon__NetworkSimplexT_t_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OptimalTransportSubtractorEnergyEEArcLength(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_OptimalTransportSubtractorEnergyEEArcLength", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Energy_fastjet__contrib__emd__EEArcLength_lemon__NetworkSimplexT_t_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridDisk, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_OptimalTransportSubtractorEnergyEEArcLength__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Energy_fastjet__contrib__emd__EEArcLength_lemon__NetworkSimplexT_t_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridRectangle, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_OptimalTransportSubtractorEnergyEEArcLength__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_OptimalTransportSubtractorEnergyEEArcLength'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > >::OptimalTransportSubtractor(double,fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEArcLength,lemon::NetworkSimplex< > > const &,fastjet::contrib::piranha::GhostGridDisk const &)\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > >::OptimalTransportSubtractor(double,fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEArcLength,lemon::NetworkSimplex< > > const &,fastjet::contrib::piranha::GhostGridRectangle const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorEnergyEEArcLength_description(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEArcLength_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorEnergyEEArcLength_description" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > > * >(argp1);
  {
    try {
      result = ((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > > const *)arg1)->description(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorEnergyEEArcLength_emd_obj(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEArcLength,lemon::NetworkSimplex< > > *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEArcLength_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorEnergyEEArcLength_emd_obj" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > > * >(argp1);
  {
    try {
      result = (fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEArcLength,lemon::NetworkSimplex< > > *) &((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > > const *)arg1)->emd_obj(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Energy_fastjet__contrib__emd__EEArcLength_lemon__NetworkSimplexT_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorEnergyEEArcLength_z(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEArcLength_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorEnergyEEArcLength_z" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > > * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > > const *)arg1)->z(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorEnergyEEArcLength_total_subtracted(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEArcLength_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorEnergyEEArcLength_total_subtracted" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > > * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > > const *)arg1)->total_subtracted(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorEnergyEEArcLength___call____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > > *) 0 ;
  fastjet::PseudoJet *arg2 = 0 ;
  double arg3 = (double) 1e-14 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > result;
  
  if ((nobjs < 2) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEArcLength_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorEnergyEEArcLength___call__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_fastjet__PseudoJet,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OptimalTransportSubtractorEnergyEEArcLength___call__" "', argument " "2"" of type '" "fastjet::PseudoJet const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OptimalTransportSubtractorEnergyEEArcLength___call__" "', argument " "2"" of type '" "fastjet::PseudoJet const &""'"); 
  }
  arg2 = reinterpret_cast< fastjet::PseudoJet * >(argp2);
  if (swig_obj[2]) {
    ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OptimalTransportSubtractorEnergyEEArcLength___call__" "', argument " "3"" of type '" "double""'");
    } 
    arg3 = static_cast< double >(val3);
  }
  {
    try {
      result = (arg1)->operator ()((fastjet::PseudoJet const &)*arg2,arg3); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorEnergyEEArcLength___call____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > > *) 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *arg2 = 0 ;
  fastjet::PseudoJet const &arg3_defvalue = fastjet::PtYPhiM(0, 0, 0) ;
  fastjet::PseudoJet *arg3 = (fastjet::PseudoJet *) &arg3_defvalue ;
  double arg4 = (double) 1e-14 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > result;
  
  if ((nobjs < 2) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEArcLength_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorEnergyEEArcLength___call__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > > * >(argp1);
  {
    std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *ptr = (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *)0;
    res2 = swig::asptr(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OptimalTransportSubtractorEnergyEEArcLength___call__" "', argument " "2"" of type '" "std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OptimalTransportSubtractorEnergyEEArcLength___call__" "', argument " "2"" of type '" "std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &""'"); 
    }
    arg2 = ptr;
  }
  if (swig_obj[2]) {
    res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_fastjet__PseudoJet,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OptimalTransportSubtractorEnergyEEArcLength___call__" "', argument " "3"" of type '" "fastjet::PseudoJet const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OptimalTransportSubtractorEnergyEEArcLength___call__" "', argument " "3"" of type '" "fastjet::PseudoJet const &""'"); 
    }
    arg3 = reinterpret_cast< fastjet::PseudoJet * >(argp3);
  }
  if (swig_obj[3]) {
    ecode4 = SWIG_AsVal_double(swig_obj[3], &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "OptimalTransportSubtractorEnergyEEArcLength___call__" "', argument " "4"" of type '" "double""'");
    } 
    arg4 = static_cast< double >(val4);
  }
  {
    try {
      result = (arg1)->operator ()((std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &)*arg2,(fastjet::PseudoJet const &)*arg3,arg4); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorEnergyEEArcLength___call__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "OptimalTransportSubtractorEnergyEEArcLength___call__", 0, 4, argv))) SWIG_fail;
  --argc;
  if ((argc >= 2) && (argc <= 3)) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEArcLength_lemon__NetworkSimplexT_t_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_fastjet__PseudoJet, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        if (argc <= 2) {
          return _wrap_OptimalTransportSubtractorEnergyEEArcLength___call____SWIG_0(self, argc, argv);
        }
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_OptimalTransportSubtractorEnergyEEArcLength___call____SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if ((argc >= 2) && (argc <= 4)) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEArcLength_lemon__NetworkSimplexT_t_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = swig::asptr(argv[1], (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        if (argc <= 2) {
          return _wrap_OptimalTransportSubtractorEnergyEEArcLength___call____SWIG_1(self, argc, argv);
        }
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_fastjet__PseudoJet, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          if (argc <= 3) {
            return _wrap_OptimalTransportSubtractorEnergyEEArcLength___call____SWIG_1(self, argc, argv);
          }
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_OptimalTransportSubtractorEnergyEEArcLength___call____SWIG_1(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'OptimalTransportSubtractorEnergyEEArcLength___call__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > >::operator ()(fastjet::PseudoJet const &,double)\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > >::operator ()(std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &,fastjet::PseudoJet const &,double)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorEnergyEEArcLength___str__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEArcLength_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorEnergyEEArcLength___str__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > > * >(argp1);
  {
    try {
      result = fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_Energy_Sc_emd_EEArcLength_Sg__Sg____str__((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > > const *)arg1); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorEnergyEEArcLength___repr__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEArcLength_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorEnergyEEArcLength___repr__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > > * >(argp1);
  {
    try {
      result = fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_Energy_Sc_emd_EEArcLength_Sg__Sg____repr__((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > > const *)arg1); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_OptimalTransportSubtractorEnergyEEArcLength(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEArcLength_lemon__NetworkSimplexT_t_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OptimalTransportSubtractorEnergyEEArcLength" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > > * >(argp1);
  {
    try {
      delete arg1; 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *OptimalTransportSubtractorEnergyEEArcLength_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEArcLength_lemon__NetworkSimplexT_t_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *OptimalTransportSubtractorEnergyEEArcLength_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_OptimalTransportSubtractorEnergyEEArcLengthMassive__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEArcLengthMassive,lemon::NetworkSimplex< > > *arg2 = 0 ;
  fastjet::contrib::piranha::GhostGridDisk *arg3 = 0 ;
  double val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > > *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_OptimalTransportSubtractorEnergyEEArcLengthMassive" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Energy_fastjet__contrib__emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OptimalTransportSubtractorEnergyEEArcLengthMassive" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEArcLengthMassive,lemon::NetworkSimplex< > > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorEnergyEEArcLengthMassive" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEArcLengthMassive,lemon::NetworkSimplex< > > const &""'"); 
  }
  arg2 = reinterpret_cast< fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEArcLengthMassive,lemon::NetworkSimplex< > > * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridDisk,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_OptimalTransportSubtractorEnergyEEArcLengthMassive" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridDisk const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorEnergyEEArcLengthMassive" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridDisk const &""'"); 
  }
  arg3 = reinterpret_cast< fastjet::contrib::piranha::GhostGridDisk * >(argp3);
  {
    try {
      result = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > > *)new fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > >(arg1,(fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEArcLengthMassive,lemon::NetworkSimplex< > > const &)*arg2,(fastjet::contrib::piranha::GhostGridDisk const &)*arg3); 
    }
    CATCH_STD_INVALID_ARGUMENT
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OptimalTransportSubtractorEnergyEEArcLengthMassive__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEArcLengthMassive,lemon::NetworkSimplex< > > *arg2 = 0 ;
  fastjet::contrib::piranha::GhostGridRectangle *arg3 = 0 ;
  double val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > > *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_OptimalTransportSubtractorEnergyEEArcLengthMassive" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Energy_fastjet__contrib__emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OptimalTransportSubtractorEnergyEEArcLengthMassive" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEArcLengthMassive,lemon::NetworkSimplex< > > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorEnergyEEArcLengthMassive" "', argument " "2"" of type '" "fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEArcLengthMassive,lemon::NetworkSimplex< > > const &""'"); 
  }
  arg2 = reinterpret_cast< fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEArcLengthMassive,lemon::NetworkSimplex< > > * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridRectangle,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_OptimalTransportSubtractorEnergyEEArcLengthMassive" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridRectangle const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OptimalTransportSubtractorEnergyEEArcLengthMassive" "', argument " "3"" of type '" "fastjet::contrib::piranha::GhostGridRectangle const &""'"); 
  }
  arg3 = reinterpret_cast< fastjet::contrib::piranha::GhostGridRectangle * >(argp3);
  {
    try {
      result = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > > *)new fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > >(arg1,(fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEArcLengthMassive,lemon::NetworkSimplex< > > const &)*arg2,(fastjet::contrib::piranha::GhostGridRectangle const &)*arg3); 
    }
    CATCH_STD_INVALID_ARGUMENT
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OptimalTransportSubtractorEnergyEEArcLengthMassive(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_OptimalTransportSubtractorEnergyEEArcLengthMassive", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Energy_fastjet__contrib__emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridDisk, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_OptimalTransportSubtractorEnergyEEArcLengthMassive__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Energy_fastjet__contrib__emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_fastjet__contrib__piranha__GhostGridRectangle, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_OptimalTransportSubtractorEnergyEEArcLengthMassive__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_OptimalTransportSubtractorEnergyEEArcLengthMassive'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > >::OptimalTransportSubtractor(double,fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEArcLengthMassive,lemon::NetworkSimplex< > > const &,fastjet::contrib::piranha::GhostGridDisk const &)\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > >::OptimalTransportSubtractor(double,fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEArcLengthMassive,lemon::NetworkSimplex< > > const &,fastjet::contrib::piranha::GhostGridRectangle const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorEnergyEEArcLengthMassive_description(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorEnergyEEArcLengthMassive_description" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > > * >(argp1);
  {
    try {
      result = ((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > > const *)arg1)->description(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorEnergyEEArcLengthMassive_emd_obj(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEArcLengthMassive,lemon::NetworkSimplex< > > *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorEnergyEEArcLengthMassive_emd_obj" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > > * >(argp1);
  {
    try {
      result = (fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEArcLengthMassive,lemon::NetworkSimplex< > > *) &((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > > const *)arg1)->emd_obj(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Energy_fastjet__contrib__emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorEnergyEEArcLengthMassive_z(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorEnergyEEArcLengthMassive_z" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > > * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > > const *)arg1)->z(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorEnergyEEArcLengthMassive_total_subtracted(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorEnergyEEArcLengthMassive_total_subtracted" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > > * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > > const *)arg1)->total_subtracted(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorEnergyEEArcLengthMassive___call____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > > *) 0 ;
  fastjet::PseudoJet *arg2 = 0 ;
  double arg3 = (double) 1e-14 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > result;
  
  if ((nobjs < 2) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorEnergyEEArcLengthMassive___call__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_fastjet__PseudoJet,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OptimalTransportSubtractorEnergyEEArcLengthMassive___call__" "', argument " "2"" of type '" "fastjet::PseudoJet const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OptimalTransportSubtractorEnergyEEArcLengthMassive___call__" "', argument " "2"" of type '" "fastjet::PseudoJet const &""'"); 
  }
  arg2 = reinterpret_cast< fastjet::PseudoJet * >(argp2);
  if (swig_obj[2]) {
    ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OptimalTransportSubtractorEnergyEEArcLengthMassive___call__" "', argument " "3"" of type '" "double""'");
    } 
    arg3 = static_cast< double >(val3);
  }
  {
    try {
      result = (arg1)->operator ()((fastjet::PseudoJet const &)*arg2,arg3); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorEnergyEEArcLengthMassive___call____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > > *) 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *arg2 = 0 ;
  fastjet::PseudoJet const &arg3_defvalue = fastjet::PtYPhiM(0, 0, 0) ;
  fastjet::PseudoJet *arg3 = (fastjet::PseudoJet *) &arg3_defvalue ;
  double arg4 = (double) 1e-14 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > result;
  
  if ((nobjs < 2) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorEnergyEEArcLengthMassive___call__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > > * >(argp1);
  {
    std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *ptr = (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *)0;
    res2 = swig::asptr(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OptimalTransportSubtractorEnergyEEArcLengthMassive___call__" "', argument " "2"" of type '" "std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OptimalTransportSubtractorEnergyEEArcLengthMassive___call__" "', argument " "2"" of type '" "std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &""'"); 
    }
    arg2 = ptr;
  }
  if (swig_obj[2]) {
    res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_fastjet__PseudoJet,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OptimalTransportSubtractorEnergyEEArcLengthMassive___call__" "', argument " "3"" of type '" "fastjet::PseudoJet const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OptimalTransportSubtractorEnergyEEArcLengthMassive___call__" "', argument " "3"" of type '" "fastjet::PseudoJet const &""'"); 
    }
    arg3 = reinterpret_cast< fastjet::PseudoJet * >(argp3);
  }
  if (swig_obj[3]) {
    ecode4 = SWIG_AsVal_double(swig_obj[3], &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "OptimalTransportSubtractorEnergyEEArcLengthMassive___call__" "', argument " "4"" of type '" "double""'");
    } 
    arg4 = static_cast< double >(val4);
  }
  {
    try {
      result = (arg1)->operator ()((std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &)*arg2,(fastjet::PseudoJet const &)*arg3,arg4); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorEnergyEEArcLengthMassive___call__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "OptimalTransportSubtractorEnergyEEArcLengthMassive___call__", 0, 4, argv))) SWIG_fail;
  --argc;
  if ((argc >= 2) && (argc <= 3)) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_fastjet__PseudoJet, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        if (argc <= 2) {
          return _wrap_OptimalTransportSubtractorEnergyEEArcLengthMassive___call____SWIG_0(self, argc, argv);
        }
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_OptimalTransportSubtractorEnergyEEArcLengthMassive___call____SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if ((argc >= 2) && (argc <= 4)) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = swig::asptr(argv[1], (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        if (argc <= 2) {
          return _wrap_OptimalTransportSubtractorEnergyEEArcLengthMassive___call____SWIG_1(self, argc, argv);
        }
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_fastjet__PseudoJet, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          if (argc <= 3) {
            return _wrap_OptimalTransportSubtractorEnergyEEArcLengthMassive___call____SWIG_1(self, argc, argv);
          }
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_OptimalTransportSubtractorEnergyEEArcLengthMassive___call____SWIG_1(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'OptimalTransportSubtractorEnergyEEArcLengthMassive___call__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > >::operator ()(fastjet::PseudoJet const &,double)\n"
    "    fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > >::operator ()(std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &,fastjet::PseudoJet const &,double)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorEnergyEEArcLengthMassive___str__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorEnergyEEArcLengthMassive___str__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > > * >(argp1);
  {
    try {
      result = fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_Energy_Sc_emd_EEArcLengthMassive_Sg__Sg____str__((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > > const *)arg1); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptimalTransportSubtractorEnergyEEArcLengthMassive___repr__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptimalTransportSubtractorEnergyEEArcLengthMassive___repr__" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > > * >(argp1);
  {
    try {
      result = fastjet_contrib_piranha_OptimalTransportSubtractor_Sl_fastjet_contrib_emd_EMD_Sl_emd_Energy_Sc_emd_EEArcLengthMassive_Sg__Sg____repr__((fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > > const *)arg1); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_OptimalTransportSubtractorEnergyEEArcLengthMassive(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > > *arg1 = (fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OptimalTransportSubtractorEnergyEEArcLengthMassive" "', argument " "1"" of type '" "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > > * >(argp1);
  {
    try {
      delete arg1; 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *OptimalTransportSubtractorEnergyEEArcLengthMassive_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *OptimalTransportSubtractorEnergyEEArcLengthMassive_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_IteratedVoronoiSubtractorCylinder__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  fastjet::contrib::piranha::SubtractionType arg2 = (fastjet::contrib::piranha::SubtractionType) fastjet::contrib::piranha::SubtractionType::Area ;
  double arg3 = (double) 1.0 ;
  bool arg4 = (bool) false ;
  bool arg5 = (bool) false ;
  double val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorCylinder *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 5)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_IteratedVoronoiSubtractorCylinder" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  if (swig_obj[1]) {
    ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_IteratedVoronoiSubtractorCylinder" "', argument " "2"" of type '" "fastjet::contrib::piranha::SubtractionType""'");
    } 
    arg2 = static_cast< fastjet::contrib::piranha::SubtractionType >(val2);
  }
  if (swig_obj[2]) {
    ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_IteratedVoronoiSubtractorCylinder" "', argument " "3"" of type '" "double""'");
    } 
    arg3 = static_cast< double >(val3);
  }
  if (swig_obj[3]) {
    ecode4 = SWIG_AsVal_bool(swig_obj[3], &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_IteratedVoronoiSubtractorCylinder" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
  }
  if (swig_obj[4]) {
    ecode5 = SWIG_AsVal_bool(swig_obj[4], &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_IteratedVoronoiSubtractorCylinder" "', argument " "5"" of type '" "bool""'");
    } 
    arg5 = static_cast< bool >(val5);
  }
  {
    try {
      result = (fastjet::contrib::piranha::IteratedVoronoiSubtractorCylinder *)new fastjet::contrib::piranha::IteratedVoronoiSubtractorCylinder(arg1,arg2,arg3,arg4,arg5); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorCylinder, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_IteratedVoronoiSubtractorCylinder__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  fastjet::contrib::piranha::SubtractionType arg5 = (fastjet::contrib::piranha::SubtractionType) fastjet::contrib::piranha::SubtractionType::Area ;
  double arg6 = (double) 1.0 ;
  bool arg7 = (bool) false ;
  bool arg8 = (bool) false ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  double val6 ;
  int ecode6 = 0 ;
  bool val7 ;
  int ecode7 = 0 ;
  bool val8 ;
  int ecode8 = 0 ;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorCylinder *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 8)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_IteratedVoronoiSubtractorCylinder" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_IteratedVoronoiSubtractorCylinder" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_IteratedVoronoiSubtractorCylinder" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  ecode4 = SWIG_AsVal_double(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_IteratedVoronoiSubtractorCylinder" "', argument " "4"" of type '" "double""'");
  } 
  arg4 = static_cast< double >(val4);
  if (swig_obj[4]) {
    ecode5 = SWIG_AsVal_int(swig_obj[4], &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_IteratedVoronoiSubtractorCylinder" "', argument " "5"" of type '" "fastjet::contrib::piranha::SubtractionType""'");
    } 
    arg5 = static_cast< fastjet::contrib::piranha::SubtractionType >(val5);
  }
  if (swig_obj[5]) {
    ecode6 = SWIG_AsVal_double(swig_obj[5], &val6);
    if (!SWIG_IsOK(ecode6)) {
      SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_IteratedVoronoiSubtractorCylinder" "', argument " "6"" of type '" "double""'");
    } 
    arg6 = static_cast< double >(val6);
  }
  if (swig_obj[6]) {
    ecode7 = SWIG_AsVal_bool(swig_obj[6], &val7);
    if (!SWIG_IsOK(ecode7)) {
      SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_IteratedVoronoiSubtractorCylinder" "', argument " "7"" of type '" "bool""'");
    } 
    arg7 = static_cast< bool >(val7);
  }
  if (swig_obj[7]) {
    ecode8 = SWIG_AsVal_bool(swig_obj[7], &val8);
    if (!SWIG_IsOK(ecode8)) {
      SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_IteratedVoronoiSubtractorCylinder" "', argument " "8"" of type '" "bool""'");
    } 
    arg8 = static_cast< bool >(val8);
  }
  {
    try {
      result = (fastjet::contrib::piranha::IteratedVoronoiSubtractorCylinder *)new fastjet::contrib::piranha::IteratedVoronoiSubtractorCylinder(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorCylinder, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_IteratedVoronoiSubtractorCylinder(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[9] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_IteratedVoronoiSubtractorCylinder", 0, 8, argv))) SWIG_fail;
  --argc;
  if ((argc >= 1) && (argc <= 5)) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      if (argc <= 1) {
        return _wrap_new_IteratedVoronoiSubtractorCylinder__SWIG_0(self, argc, argv);
      }
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        if (argc <= 2) {
          return _wrap_new_IteratedVoronoiSubtractorCylinder__SWIG_0(self, argc, argv);
        }
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          if (argc <= 3) {
            return _wrap_new_IteratedVoronoiSubtractorCylinder__SWIG_0(self, argc, argv);
          }
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            if (argc <= 4) {
              return _wrap_new_IteratedVoronoiSubtractorCylinder__SWIG_0(self, argc, argv);
            }
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_new_IteratedVoronoiSubtractorCylinder__SWIG_0(self, argc, argv);
            }
          }
        }
      }
    }
  }
  if ((argc >= 4) && (argc <= 8)) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            if (argc <= 4) {
              return _wrap_new_IteratedVoronoiSubtractorCylinder__SWIG_1(self, argc, argv);
            }
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              if (argc <= 5) {
                return _wrap_new_IteratedVoronoiSubtractorCylinder__SWIG_1(self, argc, argv);
              }
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                if (argc <= 6) {
                  return _wrap_new_IteratedVoronoiSubtractorCylinder__SWIG_1(self, argc, argv);
                }
                {
                  int res = SWIG_AsVal_bool(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  if (argc <= 7) {
                    return _wrap_new_IteratedVoronoiSubtractorCylinder__SWIG_1(self, argc, argv);
                  }
                  {
                    int res = SWIG_AsVal_bool(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    return _wrap_new_IteratedVoronoiSubtractorCylinder__SWIG_1(self, argc, argv);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_IteratedVoronoiSubtractorCylinder'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    fastjet::contrib::piranha::IteratedVoronoiSubtractorCylinder::IteratedVoronoiSubtractorCylinder(double,fastjet::contrib::piranha::SubtractionType,double,bool,bool)\n"
    "    fastjet::contrib::piranha::IteratedVoronoiSubtractorCylinder::IteratedVoronoiSubtractorCylinder(double,double,double,double,fastjet::contrib::piranha::SubtractionType,double,bool,bool)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorCylinder___call____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorCylinder *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorCylinder *) 0 ;
  fastjet::PseudoJet *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorCylinder, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorCylinder___call__" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorCylinder *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorCylinder * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_fastjet__PseudoJet,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IteratedVoronoiSubtractorCylinder___call__" "', argument " "2"" of type '" "fastjet::PseudoJet const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IteratedVoronoiSubtractorCylinder___call__" "', argument " "2"" of type '" "fastjet::PseudoJet const &""'"); 
  }
  arg2 = reinterpret_cast< fastjet::PseudoJet * >(argp2);
  {
    try {
      result = (arg1)->operator ()((fastjet::PseudoJet const &)*arg2); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorCylinder___call____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorCylinder *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorCylinder *) 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorCylinder, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorCylinder___call__" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorCylinder *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorCylinder * >(argp1);
  {
    std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *ptr = (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *)0;
    res2 = swig::asptr(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IteratedVoronoiSubtractorCylinder___call__" "', argument " "2"" of type '" "std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IteratedVoronoiSubtractorCylinder___call__" "', argument " "2"" of type '" "std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      result = (arg1)->operator ()((std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &)*arg2); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorCylinder___call__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "IteratedVoronoiSubtractorCylinder___call__", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorCylinder, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_fastjet__PseudoJet, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_IteratedVoronoiSubtractorCylinder___call____SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorCylinder, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = swig::asptr(argv[1], (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_IteratedVoronoiSubtractorCylinder___call____SWIG_1(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'IteratedVoronoiSubtractorCylinder___call__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    fastjet::contrib::piranha::IteratedVoronoiSubtractorCylinder::operator ()(fastjet::PseudoJet const &)\n"
    "    fastjet::contrib::piranha::IteratedVoronoiSubtractorCylinder::operator ()(std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_IteratedVoronoiSubtractorCylinder(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorCylinder *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorCylinder *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorCylinder, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_IteratedVoronoiSubtractorCylinder" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorCylinder *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorCylinder * >(argp1);
  {
    try {
      delete arg1; 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *IteratedVoronoiSubtractorCylinder_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorCylinder, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *IteratedVoronoiSubtractorCylinder_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_IteratedVoronoiSubtractorDisk(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  double arg1 ;
  fastjet::contrib::piranha::SubtractionType arg2 = (fastjet::contrib::piranha::SubtractionType) fastjet::contrib::piranha::SubtractionType::Area ;
  bool arg3 = (bool) false ;
  bool arg4 = (bool) false ;
  bool arg5 = (bool) true ;
  double val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char * kwnames[] = {
    (char *)"R",  (char *)"subtype",  (char *)"allow_repeats",  (char *)"store_history",  (char *)"ensure_consistent_phi",  NULL 
  };
  fastjet::contrib::piranha::IteratedVoronoiSubtractorDisk *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "O|OOOO:new_IteratedVoronoiSubtractorDisk", kwnames, &obj0, &obj1, &obj2, &obj3, &obj4)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_IteratedVoronoiSubtractorDisk" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  if (obj1) {
    ecode2 = SWIG_AsVal_int(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_IteratedVoronoiSubtractorDisk" "', argument " "2"" of type '" "fastjet::contrib::piranha::SubtractionType""'");
    } 
    arg2 = static_cast< fastjet::contrib::piranha::SubtractionType >(val2);
  }
  if (obj2) {
    ecode3 = SWIG_AsVal_bool(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_IteratedVoronoiSubtractorDisk" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
  }
  if (obj3) {
    ecode4 = SWIG_AsVal_bool(obj3, &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_IteratedVoronoiSubtractorDisk" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
  }
  if (obj4) {
    ecode5 = SWIG_AsVal_bool(obj4, &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_IteratedVoronoiSubtractorDisk" "', argument " "5"" of type '" "bool""'");
    } 
    arg5 = static_cast< bool >(val5);
  }
  {
    try {
      result = (fastjet::contrib::piranha::IteratedVoronoiSubtractorDisk *)new fastjet::contrib::piranha::IteratedVoronoiSubtractorDisk(arg1,arg2,arg3,arg4,arg5); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorDisk, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorDisk___call____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorDisk *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorDisk *) 0 ;
  fastjet::PseudoJet *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorDisk, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorDisk___call__" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorDisk *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorDisk * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_fastjet__PseudoJet,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IteratedVoronoiSubtractorDisk___call__" "', argument " "2"" of type '" "fastjet::PseudoJet const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IteratedVoronoiSubtractorDisk___call__" "', argument " "2"" of type '" "fastjet::PseudoJet const &""'"); 
  }
  arg2 = reinterpret_cast< fastjet::PseudoJet * >(argp2);
  {
    try {
      result = (arg1)->operator ()((fastjet::PseudoJet const &)*arg2); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorDisk___call____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorDisk *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorDisk *) 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorDisk, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorDisk___call__" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorDisk *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorDisk * >(argp1);
  {
    std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *ptr = (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *)0;
    res2 = swig::asptr(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IteratedVoronoiSubtractorDisk___call__" "', argument " "2"" of type '" "std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IteratedVoronoiSubtractorDisk___call__" "', argument " "2"" of type '" "std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      result = (arg1)->operator ()((std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &)*arg2); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorDisk___call____SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorDisk *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorDisk *) 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *arg2 = 0 ;
  fastjet::PseudoJet *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorDisk, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IteratedVoronoiSubtractorDisk___call__" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorDisk *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorDisk * >(argp1);
  {
    std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *ptr = (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *)0;
    res2 = swig::asptr(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IteratedVoronoiSubtractorDisk___call__" "', argument " "2"" of type '" "std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IteratedVoronoiSubtractorDisk___call__" "', argument " "2"" of type '" "std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_fastjet__PseudoJet,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IteratedVoronoiSubtractorDisk___call__" "', argument " "3"" of type '" "fastjet::PseudoJet const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IteratedVoronoiSubtractorDisk___call__" "', argument " "3"" of type '" "fastjet::PseudoJet const &""'"); 
  }
  arg3 = reinterpret_cast< fastjet::PseudoJet * >(argp3);
  {
    try {
      result = (arg1)->operator ()((std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &)*arg2,(fastjet::PseudoJet const &)*arg3); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_IteratedVoronoiSubtractorDisk___call__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "IteratedVoronoiSubtractorDisk___call__", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorDisk, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_fastjet__PseudoJet, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_IteratedVoronoiSubtractorDisk___call____SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorDisk, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = swig::asptr(argv[1], (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_IteratedVoronoiSubtractorDisk___call____SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorDisk, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = swig::asptr(argv[1], (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_fastjet__PseudoJet, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_IteratedVoronoiSubtractorDisk___call____SWIG_2(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'IteratedVoronoiSubtractorDisk___call__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    fastjet::contrib::piranha::IteratedVoronoiSubtractorDisk::operator ()(fastjet::PseudoJet const &)\n"
    "    fastjet::contrib::piranha::IteratedVoronoiSubtractorDisk::operator ()(std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &)\n"
    "    fastjet::contrib::piranha::IteratedVoronoiSubtractorDisk::operator ()(std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &,fastjet::PseudoJet const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_IteratedVoronoiSubtractorDisk(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::IteratedVoronoiSubtractorDisk *arg1 = (fastjet::contrib::piranha::IteratedVoronoiSubtractorDisk *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorDisk, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_IteratedVoronoiSubtractorDisk" "', argument " "1"" of type '" "fastjet::contrib::piranha::IteratedVoronoiSubtractorDisk *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::IteratedVoronoiSubtractorDisk * >(argp1);
  {
    try {
      delete arg1; 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *IteratedVoronoiSubtractorDisk_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorDisk, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *IteratedVoronoiSubtractorDisk_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_RecursiveSafeSubtractorTransverseMomentum(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  double arg1 ;
  double arg2 = (double) 1 ;
  fastjet::JetAlgorithm arg3 = (fastjet::JetAlgorithm) fastjet::cambridge_algorithm ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"z",  (char *)"f",  (char *)"jet_alg",  NULL 
  };
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "O|OO:new_RecursiveSafeSubtractorTransverseMomentum", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_RecursiveSafeSubtractorTransverseMomentum" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  if (obj1) {
    ecode2 = SWIG_AsVal_double(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_RecursiveSafeSubtractorTransverseMomentum" "', argument " "2"" of type '" "double""'");
    } 
    arg2 = static_cast< double >(val2);
  }
  if (obj2) {
    ecode3 = SWIG_AsVal_int(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_RecursiveSafeSubtractorTransverseMomentum" "', argument " "3"" of type '" "fastjet::JetAlgorithm""'");
    } 
    arg3 = static_cast< fastjet::JetAlgorithm >(val3);
  }
  {
    try {
      result = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > *)new fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum >(arg1,arg2,arg3); 
    }
    CATCH_STD_INVALID_ARGUMENT
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__TransverseMomentum_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorTransverseMomentum_description(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__TransverseMomentum_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RecursiveSafeSubtractorTransverseMomentum_description" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > * >(argp1);
  {
    try {
      result = ((fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > const *)arg1)->description(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorTransverseMomentum_default_z(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__TransverseMomentum_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RecursiveSafeSubtractorTransverseMomentum_default_z" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > const *)arg1)->default_z(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorTransverseMomentum_default_f(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__TransverseMomentum_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RecursiveSafeSubtractorTransverseMomentum_default_f" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > const *)arg1)->default_f(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorTransverseMomentum_jet_alg(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  fastjet::JetAlgorithm result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__TransverseMomentum_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RecursiveSafeSubtractorTransverseMomentum_jet_alg" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > * >(argp1);
  {
    try {
      result = (fastjet::JetAlgorithm)((fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > const *)arg1)->jet_alg(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorTransverseMomentum_weight_sums(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< double,std::allocator< double > > *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__TransverseMomentum_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RecursiveSafeSubtractorTransverseMomentum_weight_sums" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > * >(argp1);
  {
    try {
      result = (std::vector< double,std::allocator< double > > *) &((fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > const *)arg1)->weight_sums(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< double,std::allocator< double > > >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorTransverseMomentum_total_weight(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__TransverseMomentum_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RecursiveSafeSubtractorTransverseMomentum_total_weight" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > const *)arg1)->total_weight(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorTransverseMomentum_reclustered_jet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  fastjet::PseudoJet *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__TransverseMomentum_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RecursiveSafeSubtractorTransverseMomentum_reclustered_jet" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > * >(argp1);
  {
    try {
      result = (fastjet::PseudoJet *) &((fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > const *)arg1)->reclustered_jet(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__PseudoJet, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorTransverseMomentum___str__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__TransverseMomentum_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RecursiveSafeSubtractorTransverseMomentum___str__" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > * >(argp1);
  {
    try {
      result = fastjet_contrib_piranha_RecursiveSafeSubtractor_Sl_emd_TransverseMomentum_Sg____str__((fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > const *)arg1); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorTransverseMomentum___repr__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__TransverseMomentum_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RecursiveSafeSubtractorTransverseMomentum___repr__" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > * >(argp1);
  {
    try {
      result = fastjet_contrib_piranha_RecursiveSafeSubtractor_Sl_emd_TransverseMomentum_Sg____repr__((fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > const *)arg1); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorTransverseMomentum___call____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > *) 0 ;
  fastjet::PseudoJet *arg2 = 0 ;
  int arg3 = (int) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > result;
  
  if ((nobjs < 2) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__TransverseMomentum_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RecursiveSafeSubtractorTransverseMomentum___call__" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_fastjet__PseudoJet,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RecursiveSafeSubtractorTransverseMomentum___call__" "', argument " "2"" of type '" "fastjet::PseudoJet const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RecursiveSafeSubtractorTransverseMomentum___call__" "', argument " "2"" of type '" "fastjet::PseudoJet const &""'"); 
  }
  arg2 = reinterpret_cast< fastjet::PseudoJet * >(argp2);
  if (swig_obj[2]) {
    ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "RecursiveSafeSubtractorTransverseMomentum___call__" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
  }
  {
    try {
      result = fastjet_contrib_piranha_RecursiveSafeSubtractor_Sl_emd_TransverseMomentum_Sg__operator_Sp__SP___SWIG_0(arg1,(fastjet::PseudoJet const &)*arg2,arg3); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorTransverseMomentum___call____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > *) 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *arg2 = 0 ;
  int arg3 = (int) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int val3 ;
  int ecode3 = 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > result;
  
  if ((nobjs < 2) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__TransverseMomentum_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RecursiveSafeSubtractorTransverseMomentum___call__" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > * >(argp1);
  {
    std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *ptr = (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *)0;
    res2 = swig::asptr(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RecursiveSafeSubtractorTransverseMomentum___call__" "', argument " "2"" of type '" "std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RecursiveSafeSubtractorTransverseMomentum___call__" "', argument " "2"" of type '" "std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &""'"); 
    }
    arg2 = ptr;
  }
  if (swig_obj[2]) {
    ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "RecursiveSafeSubtractorTransverseMomentum___call__" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
  }
  {
    try {
      result = fastjet_contrib_piranha_RecursiveSafeSubtractor_Sl_emd_TransverseMomentum_Sg__operator_Sp__SP___SWIG_1(arg1,(std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &)*arg2,arg3); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorTransverseMomentum___call__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "RecursiveSafeSubtractorTransverseMomentum___call__", 0, 3, argv))) SWIG_fail;
  --argc;
  if ((argc >= 2) && (argc <= 3)) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__TransverseMomentum_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_fastjet__PseudoJet, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        if (argc <= 2) {
          return _wrap_RecursiveSafeSubtractorTransverseMomentum___call____SWIG_0(self, argc, argv);
        }
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_RecursiveSafeSubtractorTransverseMomentum___call____SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if ((argc >= 2) && (argc <= 3)) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__TransverseMomentum_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = swig::asptr(argv[1], (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        if (argc <= 2) {
          return _wrap_RecursiveSafeSubtractorTransverseMomentum___call____SWIG_1(self, argc, argv);
        }
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_RecursiveSafeSubtractorTransverseMomentum___call____SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'RecursiveSafeSubtractorTransverseMomentum___call__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum >::operator ()(fastjet::PseudoJet const &,int)\n"
    "    fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum >::operator ()(std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &,int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorTransverseMomentum_apply(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > *) 0 ;
  double arg2 ;
  double arg3 ;
  int arg4 = (int) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"z",  (char *)"f",  (char *)"_",  NULL 
  };
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO|O:RecursiveSafeSubtractorTransverseMomentum_apply", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__TransverseMomentum_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RecursiveSafeSubtractorTransverseMomentum_apply" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RecursiveSafeSubtractorTransverseMomentum_apply" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "RecursiveSafeSubtractorTransverseMomentum_apply" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  if (obj3) {
    ecode4 = SWIG_AsVal_int(obj3, &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "RecursiveSafeSubtractorTransverseMomentum_apply" "', argument " "4"" of type '" "int""'");
    } 
    arg4 = static_cast< int >(val4);
  }
  {
    try {
      result = fastjet_contrib_piranha_RecursiveSafeSubtractor_Sl_emd_TransverseMomentum_Sg__apply(arg1,arg2,arg3,arg4); 
    }
    CATCH_STD_INVALID_ARGUMENT
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_RecursiveSafeSubtractorTransverseMomentum(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__TransverseMomentum_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_RecursiveSafeSubtractorTransverseMomentum" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > * >(argp1);
  {
    try {
      delete arg1; 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *RecursiveSafeSubtractorTransverseMomentum_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__TransverseMomentum_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *RecursiveSafeSubtractorTransverseMomentum_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_RecursiveSafeSubtractorTransverseEnergy(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  double arg1 ;
  double arg2 = (double) 1 ;
  fastjet::JetAlgorithm arg3 = (fastjet::JetAlgorithm) fastjet::cambridge_algorithm ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"z",  (char *)"f",  (char *)"jet_alg",  NULL 
  };
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "O|OO:new_RecursiveSafeSubtractorTransverseEnergy", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_RecursiveSafeSubtractorTransverseEnergy" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  if (obj1) {
    ecode2 = SWIG_AsVal_double(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_RecursiveSafeSubtractorTransverseEnergy" "', argument " "2"" of type '" "double""'");
    } 
    arg2 = static_cast< double >(val2);
  }
  if (obj2) {
    ecode3 = SWIG_AsVal_int(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_RecursiveSafeSubtractorTransverseEnergy" "', argument " "3"" of type '" "fastjet::JetAlgorithm""'");
    } 
    arg3 = static_cast< fastjet::JetAlgorithm >(val3);
  }
  {
    try {
      result = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > *)new fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy >(arg1,arg2,arg3); 
    }
    CATCH_STD_INVALID_ARGUMENT
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__TransverseEnergy_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorTransverseEnergy_description(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__TransverseEnergy_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RecursiveSafeSubtractorTransverseEnergy_description" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > * >(argp1);
  {
    try {
      result = ((fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > const *)arg1)->description(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorTransverseEnergy_default_z(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__TransverseEnergy_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RecursiveSafeSubtractorTransverseEnergy_default_z" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > const *)arg1)->default_z(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorTransverseEnergy_default_f(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__TransverseEnergy_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RecursiveSafeSubtractorTransverseEnergy_default_f" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > const *)arg1)->default_f(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorTransverseEnergy_jet_alg(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  fastjet::JetAlgorithm result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__TransverseEnergy_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RecursiveSafeSubtractorTransverseEnergy_jet_alg" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > * >(argp1);
  {
    try {
      result = (fastjet::JetAlgorithm)((fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > const *)arg1)->jet_alg(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorTransverseEnergy_weight_sums(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< double,std::allocator< double > > *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__TransverseEnergy_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RecursiveSafeSubtractorTransverseEnergy_weight_sums" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > * >(argp1);
  {
    try {
      result = (std::vector< double,std::allocator< double > > *) &((fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > const *)arg1)->weight_sums(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< double,std::allocator< double > > >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorTransverseEnergy_total_weight(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__TransverseEnergy_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RecursiveSafeSubtractorTransverseEnergy_total_weight" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > const *)arg1)->total_weight(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorTransverseEnergy_reclustered_jet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  fastjet::PseudoJet *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__TransverseEnergy_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RecursiveSafeSubtractorTransverseEnergy_reclustered_jet" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > * >(argp1);
  {
    try {
      result = (fastjet::PseudoJet *) &((fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > const *)arg1)->reclustered_jet(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__PseudoJet, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorTransverseEnergy___str__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__TransverseEnergy_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RecursiveSafeSubtractorTransverseEnergy___str__" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > * >(argp1);
  {
    try {
      result = fastjet_contrib_piranha_RecursiveSafeSubtractor_Sl_emd_TransverseEnergy_Sg____str__((fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > const *)arg1); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorTransverseEnergy___repr__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__TransverseEnergy_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RecursiveSafeSubtractorTransverseEnergy___repr__" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > * >(argp1);
  {
    try {
      result = fastjet_contrib_piranha_RecursiveSafeSubtractor_Sl_emd_TransverseEnergy_Sg____repr__((fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > const *)arg1); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorTransverseEnergy___call____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > *) 0 ;
  fastjet::PseudoJet *arg2 = 0 ;
  int arg3 = (int) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > result;
  
  if ((nobjs < 2) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__TransverseEnergy_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RecursiveSafeSubtractorTransverseEnergy___call__" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_fastjet__PseudoJet,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RecursiveSafeSubtractorTransverseEnergy___call__" "', argument " "2"" of type '" "fastjet::PseudoJet const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RecursiveSafeSubtractorTransverseEnergy___call__" "', argument " "2"" of type '" "fastjet::PseudoJet const &""'"); 
  }
  arg2 = reinterpret_cast< fastjet::PseudoJet * >(argp2);
  if (swig_obj[2]) {
    ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "RecursiveSafeSubtractorTransverseEnergy___call__" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
  }
  {
    try {
      result = fastjet_contrib_piranha_RecursiveSafeSubtractor_Sl_emd_TransverseEnergy_Sg__operator_Sp__SP___SWIG_0(arg1,(fastjet::PseudoJet const &)*arg2,arg3); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorTransverseEnergy___call____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > *) 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *arg2 = 0 ;
  int arg3 = (int) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int val3 ;
  int ecode3 = 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > result;
  
  if ((nobjs < 2) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__TransverseEnergy_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RecursiveSafeSubtractorTransverseEnergy___call__" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > * >(argp1);
  {
    std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *ptr = (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *)0;
    res2 = swig::asptr(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RecursiveSafeSubtractorTransverseEnergy___call__" "', argument " "2"" of type '" "std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RecursiveSafeSubtractorTransverseEnergy___call__" "', argument " "2"" of type '" "std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &""'"); 
    }
    arg2 = ptr;
  }
  if (swig_obj[2]) {
    ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "RecursiveSafeSubtractorTransverseEnergy___call__" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
  }
  {
    try {
      result = fastjet_contrib_piranha_RecursiveSafeSubtractor_Sl_emd_TransverseEnergy_Sg__operator_Sp__SP___SWIG_1(arg1,(std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &)*arg2,arg3); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorTransverseEnergy___call__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "RecursiveSafeSubtractorTransverseEnergy___call__", 0, 3, argv))) SWIG_fail;
  --argc;
  if ((argc >= 2) && (argc <= 3)) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__TransverseEnergy_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_fastjet__PseudoJet, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        if (argc <= 2) {
          return _wrap_RecursiveSafeSubtractorTransverseEnergy___call____SWIG_0(self, argc, argv);
        }
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_RecursiveSafeSubtractorTransverseEnergy___call____SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if ((argc >= 2) && (argc <= 3)) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__TransverseEnergy_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = swig::asptr(argv[1], (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        if (argc <= 2) {
          return _wrap_RecursiveSafeSubtractorTransverseEnergy___call____SWIG_1(self, argc, argv);
        }
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_RecursiveSafeSubtractorTransverseEnergy___call____SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'RecursiveSafeSubtractorTransverseEnergy___call__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy >::operator ()(fastjet::PseudoJet const &,int)\n"
    "    fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy >::operator ()(std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &,int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorTransverseEnergy_apply(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > *) 0 ;
  double arg2 ;
  double arg3 ;
  int arg4 = (int) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"z",  (char *)"f",  (char *)"_",  NULL 
  };
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO|O:RecursiveSafeSubtractorTransverseEnergy_apply", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__TransverseEnergy_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RecursiveSafeSubtractorTransverseEnergy_apply" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RecursiveSafeSubtractorTransverseEnergy_apply" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "RecursiveSafeSubtractorTransverseEnergy_apply" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  if (obj3) {
    ecode4 = SWIG_AsVal_int(obj3, &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "RecursiveSafeSubtractorTransverseEnergy_apply" "', argument " "4"" of type '" "int""'");
    } 
    arg4 = static_cast< int >(val4);
  }
  {
    try {
      result = fastjet_contrib_piranha_RecursiveSafeSubtractor_Sl_emd_TransverseEnergy_Sg__apply(arg1,arg2,arg3,arg4); 
    }
    CATCH_STD_INVALID_ARGUMENT
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_RecursiveSafeSubtractorTransverseEnergy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__TransverseEnergy_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_RecursiveSafeSubtractorTransverseEnergy" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > * >(argp1);
  {
    try {
      delete arg1; 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *RecursiveSafeSubtractorTransverseEnergy_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__TransverseEnergy_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *RecursiveSafeSubtractorTransverseEnergy_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_RecursiveSafeSubtractorEnergy(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  double arg1 ;
  double arg2 = (double) 1 ;
  fastjet::JetAlgorithm arg3 = (fastjet::JetAlgorithm) fastjet::cambridge_algorithm ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"z",  (char *)"f",  (char *)"jet_alg",  NULL 
  };
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "O|OO:new_RecursiveSafeSubtractorEnergy", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_RecursiveSafeSubtractorEnergy" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  if (obj1) {
    ecode2 = SWIG_AsVal_double(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_RecursiveSafeSubtractorEnergy" "', argument " "2"" of type '" "double""'");
    } 
    arg2 = static_cast< double >(val2);
  }
  if (obj2) {
    ecode3 = SWIG_AsVal_int(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_RecursiveSafeSubtractorEnergy" "', argument " "3"" of type '" "fastjet::JetAlgorithm""'");
    } 
    arg3 = static_cast< fastjet::JetAlgorithm >(val3);
  }
  {
    try {
      result = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > *)new fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy >(arg1,arg2,arg3); 
    }
    CATCH_STD_INVALID_ARGUMENT
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__Energy_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorEnergy_description(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__Energy_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RecursiveSafeSubtractorEnergy_description" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > * >(argp1);
  {
    try {
      result = ((fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > const *)arg1)->description(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorEnergy_default_z(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__Energy_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RecursiveSafeSubtractorEnergy_default_z" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > const *)arg1)->default_z(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorEnergy_default_f(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__Energy_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RecursiveSafeSubtractorEnergy_default_f" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > const *)arg1)->default_f(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorEnergy_jet_alg(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  fastjet::JetAlgorithm result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__Energy_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RecursiveSafeSubtractorEnergy_jet_alg" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > * >(argp1);
  {
    try {
      result = (fastjet::JetAlgorithm)((fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > const *)arg1)->jet_alg(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorEnergy_weight_sums(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< double,std::allocator< double > > *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__Energy_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RecursiveSafeSubtractorEnergy_weight_sums" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > * >(argp1);
  {
    try {
      result = (std::vector< double,std::allocator< double > > *) &((fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > const *)arg1)->weight_sums(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< double,std::allocator< double > > >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorEnergy_total_weight(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__Energy_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RecursiveSafeSubtractorEnergy_total_weight" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > const *)arg1)->total_weight(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorEnergy_reclustered_jet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  fastjet::PseudoJet *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__Energy_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RecursiveSafeSubtractorEnergy_reclustered_jet" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > * >(argp1);
  {
    try {
      result = (fastjet::PseudoJet *) &((fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > const *)arg1)->reclustered_jet(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__PseudoJet, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorEnergy___str__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__Energy_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RecursiveSafeSubtractorEnergy___str__" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > * >(argp1);
  {
    try {
      result = fastjet_contrib_piranha_RecursiveSafeSubtractor_Sl_emd_Energy_Sg____str__((fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > const *)arg1); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorEnergy___repr__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__Energy_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RecursiveSafeSubtractorEnergy___repr__" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > * >(argp1);
  {
    try {
      result = fastjet_contrib_piranha_RecursiveSafeSubtractor_Sl_emd_Energy_Sg____repr__((fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > const *)arg1); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorEnergy___call____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > *) 0 ;
  fastjet::PseudoJet *arg2 = 0 ;
  int arg3 = (int) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > result;
  
  if ((nobjs < 2) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__Energy_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RecursiveSafeSubtractorEnergy___call__" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_fastjet__PseudoJet,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RecursiveSafeSubtractorEnergy___call__" "', argument " "2"" of type '" "fastjet::PseudoJet const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RecursiveSafeSubtractorEnergy___call__" "', argument " "2"" of type '" "fastjet::PseudoJet const &""'"); 
  }
  arg2 = reinterpret_cast< fastjet::PseudoJet * >(argp2);
  if (swig_obj[2]) {
    ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "RecursiveSafeSubtractorEnergy___call__" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
  }
  {
    try {
      result = fastjet_contrib_piranha_RecursiveSafeSubtractor_Sl_emd_Energy_Sg__operator_Sp__SP___SWIG_0(arg1,(fastjet::PseudoJet const &)*arg2,arg3); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorEnergy___call____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > *) 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *arg2 = 0 ;
  int arg3 = (int) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int val3 ;
  int ecode3 = 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > result;
  
  if ((nobjs < 2) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__Energy_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RecursiveSafeSubtractorEnergy___call__" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > * >(argp1);
  {
    std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *ptr = (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *)0;
    res2 = swig::asptr(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RecursiveSafeSubtractorEnergy___call__" "', argument " "2"" of type '" "std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RecursiveSafeSubtractorEnergy___call__" "', argument " "2"" of type '" "std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &""'"); 
    }
    arg2 = ptr;
  }
  if (swig_obj[2]) {
    ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "RecursiveSafeSubtractorEnergy___call__" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
  }
  {
    try {
      result = fastjet_contrib_piranha_RecursiveSafeSubtractor_Sl_emd_Energy_Sg__operator_Sp__SP___SWIG_1(arg1,(std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &)*arg2,arg3); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorEnergy___call__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "RecursiveSafeSubtractorEnergy___call__", 0, 3, argv))) SWIG_fail;
  --argc;
  if ((argc >= 2) && (argc <= 3)) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__Energy_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_fastjet__PseudoJet, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        if (argc <= 2) {
          return _wrap_RecursiveSafeSubtractorEnergy___call____SWIG_0(self, argc, argv);
        }
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_RecursiveSafeSubtractorEnergy___call____SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if ((argc >= 2) && (argc <= 3)) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__Energy_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = swig::asptr(argv[1], (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        if (argc <= 2) {
          return _wrap_RecursiveSafeSubtractorEnergy___call____SWIG_1(self, argc, argv);
        }
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_RecursiveSafeSubtractorEnergy___call____SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'RecursiveSafeSubtractorEnergy___call__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy >::operator ()(fastjet::PseudoJet const &,int)\n"
    "    fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy >::operator ()(std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &,int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorEnergy_apply(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > *) 0 ;
  double arg2 ;
  double arg3 ;
  int arg4 = (int) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"z",  (char *)"f",  (char *)"_",  NULL 
  };
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO|O:RecursiveSafeSubtractorEnergy_apply", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__Energy_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RecursiveSafeSubtractorEnergy_apply" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RecursiveSafeSubtractorEnergy_apply" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "RecursiveSafeSubtractorEnergy_apply" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  if (obj3) {
    ecode4 = SWIG_AsVal_int(obj3, &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "RecursiveSafeSubtractorEnergy_apply" "', argument " "4"" of type '" "int""'");
    } 
    arg4 = static_cast< int >(val4);
  }
  {
    try {
      result = fastjet_contrib_piranha_RecursiveSafeSubtractor_Sl_emd_Energy_Sg__apply(arg1,arg2,arg3,arg4); 
    }
    CATCH_STD_INVALID_ARGUMENT
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_RecursiveSafeSubtractorEnergy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__Energy_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_RecursiveSafeSubtractorEnergy" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > * >(argp1);
  {
    try {
      delete arg1; 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *RecursiveSafeSubtractorEnergy_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__Energy_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *RecursiveSafeSubtractorEnergy_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_RecursiveSafeSubtractorMomentum(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  double arg1 ;
  double arg2 = (double) 1 ;
  fastjet::JetAlgorithm arg3 = (fastjet::JetAlgorithm) fastjet::cambridge_algorithm ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"z",  (char *)"f",  (char *)"jet_alg",  NULL 
  };
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "O|OO:new_RecursiveSafeSubtractorMomentum", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_RecursiveSafeSubtractorMomentum" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  if (obj1) {
    ecode2 = SWIG_AsVal_double(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_RecursiveSafeSubtractorMomentum" "', argument " "2"" of type '" "double""'");
    } 
    arg2 = static_cast< double >(val2);
  }
  if (obj2) {
    ecode3 = SWIG_AsVal_int(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_RecursiveSafeSubtractorMomentum" "', argument " "3"" of type '" "fastjet::JetAlgorithm""'");
    } 
    arg3 = static_cast< fastjet::JetAlgorithm >(val3);
  }
  {
    try {
      result = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > *)new fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum >(arg1,arg2,arg3); 
    }
    CATCH_STD_INVALID_ARGUMENT
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__Momentum_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorMomentum_description(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__Momentum_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RecursiveSafeSubtractorMomentum_description" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > * >(argp1);
  {
    try {
      result = ((fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > const *)arg1)->description(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorMomentum_default_z(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__Momentum_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RecursiveSafeSubtractorMomentum_default_z" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > const *)arg1)->default_z(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorMomentum_default_f(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__Momentum_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RecursiveSafeSubtractorMomentum_default_f" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > const *)arg1)->default_f(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorMomentum_jet_alg(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  fastjet::JetAlgorithm result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__Momentum_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RecursiveSafeSubtractorMomentum_jet_alg" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > * >(argp1);
  {
    try {
      result = (fastjet::JetAlgorithm)((fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > const *)arg1)->jet_alg(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorMomentum_weight_sums(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< double,std::allocator< double > > *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__Momentum_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RecursiveSafeSubtractorMomentum_weight_sums" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > * >(argp1);
  {
    try {
      result = (std::vector< double,std::allocator< double > > *) &((fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > const *)arg1)->weight_sums(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< double,std::allocator< double > > >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorMomentum_total_weight(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__Momentum_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RecursiveSafeSubtractorMomentum_total_weight" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > * >(argp1);
  {
    try {
      result = (double)((fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > const *)arg1)->total_weight(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorMomentum_reclustered_jet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  fastjet::PseudoJet *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__Momentum_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RecursiveSafeSubtractorMomentum_reclustered_jet" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > * >(argp1);
  {
    try {
      result = (fastjet::PseudoJet *) &((fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > const *)arg1)->reclustered_jet(); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_fastjet__PseudoJet, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorMomentum___str__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__Momentum_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RecursiveSafeSubtractorMomentum___str__" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > * >(argp1);
  {
    try {
      result = fastjet_contrib_piranha_RecursiveSafeSubtractor_Sl_emd_Momentum_Sg____str__((fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > const *)arg1); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorMomentum___repr__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__Momentum_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RecursiveSafeSubtractorMomentum___repr__" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > const *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > * >(argp1);
  {
    try {
      result = fastjet_contrib_piranha_RecursiveSafeSubtractor_Sl_emd_Momentum_Sg____repr__((fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > const *)arg1); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorMomentum___call____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > *) 0 ;
  fastjet::PseudoJet *arg2 = 0 ;
  int arg3 = (int) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > result;
  
  if ((nobjs < 2) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__Momentum_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RecursiveSafeSubtractorMomentum___call__" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_fastjet__PseudoJet,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RecursiveSafeSubtractorMomentum___call__" "', argument " "2"" of type '" "fastjet::PseudoJet const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RecursiveSafeSubtractorMomentum___call__" "', argument " "2"" of type '" "fastjet::PseudoJet const &""'"); 
  }
  arg2 = reinterpret_cast< fastjet::PseudoJet * >(argp2);
  if (swig_obj[2]) {
    ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "RecursiveSafeSubtractorMomentum___call__" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
  }
  {
    try {
      result = fastjet_contrib_piranha_RecursiveSafeSubtractor_Sl_emd_Momentum_Sg__operator_Sp__SP___SWIG_0(arg1,(fastjet::PseudoJet const &)*arg2,arg3); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorMomentum___call____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > *) 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *arg2 = 0 ;
  int arg3 = (int) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int val3 ;
  int ecode3 = 0 ;
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > result;
  
  if ((nobjs < 2) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__Momentum_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RecursiveSafeSubtractorMomentum___call__" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > * >(argp1);
  {
    std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *ptr = (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > *)0;
    res2 = swig::asptr(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RecursiveSafeSubtractorMomentum___call__" "', argument " "2"" of type '" "std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RecursiveSafeSubtractorMomentum___call__" "', argument " "2"" of type '" "std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &""'"); 
    }
    arg2 = ptr;
  }
  if (swig_obj[2]) {
    ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "RecursiveSafeSubtractorMomentum___call__" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
  }
  {
    try {
      result = fastjet_contrib_piranha_RecursiveSafeSubtractor_Sl_emd_Momentum_Sg__operator_Sp__SP___SWIG_1(arg1,(std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &)*arg2,arg3); 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorMomentum___call__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "RecursiveSafeSubtractorMomentum___call__", 0, 3, argv))) SWIG_fail;
  --argc;
  if ((argc >= 2) && (argc <= 3)) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__Momentum_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_fastjet__PseudoJet, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        if (argc <= 2) {
          return _wrap_RecursiveSafeSubtractorMomentum___call____SWIG_0(self, argc, argv);
        }
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_RecursiveSafeSubtractorMomentum___call____SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if ((argc >= 2) && (argc <= 3)) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__Momentum_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = swig::asptr(argv[1], (std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        if (argc <= 2) {
          return _wrap_RecursiveSafeSubtractorMomentum___call____SWIG_1(self, argc, argv);
        }
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_RecursiveSafeSubtractorMomentum___call____SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'RecursiveSafeSubtractorMomentum___call__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum >::operator ()(fastjet::PseudoJet const &,int)\n"
    "    fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum >::operator ()(std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > const &,int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_RecursiveSafeSubtractorMomentum_apply(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > *) 0 ;
  double arg2 ;
  double arg3 ;
  int arg4 = (int) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"z",  (char *)"f",  (char *)"_",  NULL 
  };
  std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO|O:RecursiveSafeSubtractorMomentum_apply", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__Momentum_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RecursiveSafeSubtractorMomentum_apply" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RecursiveSafeSubtractorMomentum_apply" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "RecursiveSafeSubtractorMomentum_apply" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  if (obj3) {
    ecode4 = SWIG_AsVal_int(obj3, &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "RecursiveSafeSubtractorMomentum_apply" "', argument " "4"" of type '" "int""'");
    } 
    arg4 = static_cast< int >(val4);
  }
  {
    try {
      result = fastjet_contrib_piranha_RecursiveSafeSubtractor_Sl_emd_Momentum_Sg__apply(arg1,arg2,arg3,arg4); 
    }
    CATCH_STD_INVALID_ARGUMENT
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = swig::from(static_cast< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_RecursiveSafeSubtractorMomentum(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > *arg1 = (fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__Momentum_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_RecursiveSafeSubtractorMomentum" "', argument " "1"" of type '" "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > *""'"); 
  }
  arg1 = reinterpret_cast< fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > * >(argp1);
  {
    try {
      delete arg1; 
    }
    CATCH_STD_RUNTIME_ERROR
    CATCH_STD_EXCEPTION
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *RecursiveSafeSubtractorMomentum_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__Momentum_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *RecursiveSafeSubtractorMomentum_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

static PyMethodDef SwigMethods[] = {
	 { "SWIG_PyInstanceMethod_New", SWIG_PyInstanceMethod_New, METH_O, NULL},
	 { "SWIG_PyStaticMethod_New", SWIG_PyStaticMethod_New, METH_O, NULL},
	 { "delete_SwigPyIterator", _wrap_delete_SwigPyIterator, METH_O, NULL},
	 { "SwigPyIterator_value", _wrap_SwigPyIterator_value, METH_O, NULL},
	 { "SwigPyIterator_incr", (PyCFunction)(void(*)(void))_wrap_SwigPyIterator_incr, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "SwigPyIterator_decr", (PyCFunction)(void(*)(void))_wrap_SwigPyIterator_decr, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "SwigPyIterator_distance", (PyCFunction)(void(*)(void))_wrap_SwigPyIterator_distance, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "SwigPyIterator_equal", (PyCFunction)(void(*)(void))_wrap_SwigPyIterator_equal, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "SwigPyIterator_copy", _wrap_SwigPyIterator_copy, METH_O, NULL},
	 { "SwigPyIterator_next", _wrap_SwigPyIterator_next, METH_O, NULL},
	 { "SwigPyIterator___next__", _wrap_SwigPyIterator___next__, METH_O, NULL},
	 { "SwigPyIterator_previous", _wrap_SwigPyIterator_previous, METH_O, NULL},
	 { "SwigPyIterator_advance", (PyCFunction)(void(*)(void))_wrap_SwigPyIterator_advance, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "SwigPyIterator___eq__", (PyCFunction)(void(*)(void))_wrap_SwigPyIterator___eq__, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "SwigPyIterator___ne__", (PyCFunction)(void(*)(void))_wrap_SwigPyIterator___ne__, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "SwigPyIterator___iadd__", (PyCFunction)(void(*)(void))_wrap_SwigPyIterator___iadd__, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "SwigPyIterator___isub__", (PyCFunction)(void(*)(void))_wrap_SwigPyIterator___isub__, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "SwigPyIterator___add__", (PyCFunction)(void(*)(void))_wrap_SwigPyIterator___add__, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "SwigPyIterator___sub__", _wrap_SwigPyIterator___sub__, METH_VARARGS, NULL},
	 { "SwigPyIterator_swigregister", SwigPyIterator_swigregister, METH_O, NULL},
	 { "new_pairDouble", _wrap_new_pairDouble, METH_VARARGS, NULL},
	 { "pairDouble_first_set", _wrap_pairDouble_first_set, METH_VARARGS, NULL},
	 { "pairDouble_first_get", _wrap_pairDouble_first_get, METH_O, NULL},
	 { "pairDouble_second_set", _wrap_pairDouble_second_set, METH_VARARGS, NULL},
	 { "pairDouble_second_get", _wrap_pairDouble_second_get, METH_O, NULL},
	 { "delete_pairDouble", _wrap_delete_pairDouble, METH_O, NULL},
	 { "pairDouble_swigregister", pairDouble_swigregister, METH_O, NULL},
	 { "pairDouble_swiginit", pairDouble_swiginit, METH_VARARGS, NULL},
	 { "new_pairPairDouble", _wrap_new_pairPairDouble, METH_VARARGS, NULL},
	 { "pairPairDouble_first_set", _wrap_pairPairDouble_first_set, METH_VARARGS, NULL},
	 { "pairPairDouble_first_get", _wrap_pairPairDouble_first_get, METH_O, NULL},
	 { "pairPairDouble_second_set", _wrap_pairPairDouble_second_set, METH_VARARGS, NULL},
	 { "pairPairDouble_second_get", _wrap_pairPairDouble_second_get, METH_O, NULL},
	 { "delete_pairPairDouble", _wrap_delete_pairPairDouble, METH_O, NULL},
	 { "pairPairDouble_swigregister", pairPairDouble_swigregister, METH_O, NULL},
	 { "pairPairDouble_swiginit", pairPairDouble_swiginit, METH_VARARGS, NULL},
	 { "vectorVectorDouble_iterator", _wrap_vectorVectorDouble_iterator, METH_O, NULL},
	 { "vectorVectorDouble___nonzero__", _wrap_vectorVectorDouble___nonzero__, METH_O, NULL},
	 { "vectorVectorDouble___bool__", _wrap_vectorVectorDouble___bool__, METH_O, NULL},
	 { "vectorVectorDouble___len__", _wrap_vectorVectorDouble___len__, METH_O, NULL},
	 { "vectorVectorDouble___getslice__", (PyCFunction)(void(*)(void))_wrap_vectorVectorDouble___getslice__, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorVectorDouble___setslice__", _wrap_vectorVectorDouble___setslice__, METH_VARARGS, NULL},
	 { "vectorVectorDouble___delslice__", (PyCFunction)(void(*)(void))_wrap_vectorVectorDouble___delslice__, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorVectorDouble___delitem__", _wrap_vectorVectorDouble___delitem__, METH_VARARGS, NULL},
	 { "vectorVectorDouble___getitem__", _wrap_vectorVectorDouble___getitem__, METH_VARARGS, NULL},
	 { "vectorVectorDouble___setitem__", _wrap_vectorVectorDouble___setitem__, METH_VARARGS, NULL},
	 { "vectorVectorDouble_pop", _wrap_vectorVectorDouble_pop, METH_O, NULL},
	 { "vectorVectorDouble_append", (PyCFunction)(void(*)(void))_wrap_vectorVectorDouble_append, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorVectorDouble_empty", _wrap_vectorVectorDouble_empty, METH_O, NULL},
	 { "vectorVectorDouble_size", _wrap_vectorVectorDouble_size, METH_O, NULL},
	 { "vectorVectorDouble_swap", (PyCFunction)(void(*)(void))_wrap_vectorVectorDouble_swap, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorVectorDouble_begin", _wrap_vectorVectorDouble_begin, METH_O, NULL},
	 { "vectorVectorDouble_end", _wrap_vectorVectorDouble_end, METH_O, NULL},
	 { "vectorVectorDouble_rbegin", _wrap_vectorVectorDouble_rbegin, METH_O, NULL},
	 { "vectorVectorDouble_rend", _wrap_vectorVectorDouble_rend, METH_O, NULL},
	 { "vectorVectorDouble_clear", _wrap_vectorVectorDouble_clear, METH_O, NULL},
	 { "vectorVectorDouble_get_allocator", _wrap_vectorVectorDouble_get_allocator, METH_O, NULL},
	 { "vectorVectorDouble_pop_back", _wrap_vectorVectorDouble_pop_back, METH_O, NULL},
	 { "vectorVectorDouble_erase", _wrap_vectorVectorDouble_erase, METH_VARARGS, NULL},
	 { "new_vectorVectorDouble", _wrap_new_vectorVectorDouble, METH_VARARGS, NULL},
	 { "vectorVectorDouble_push_back", (PyCFunction)(void(*)(void))_wrap_vectorVectorDouble_push_back, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorVectorDouble_front", _wrap_vectorVectorDouble_front, METH_O, NULL},
	 { "vectorVectorDouble_back", _wrap_vectorVectorDouble_back, METH_O, NULL},
	 { "vectorVectorDouble_assign", (PyCFunction)(void(*)(void))_wrap_vectorVectorDouble_assign, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorVectorDouble_resize", _wrap_vectorVectorDouble_resize, METH_VARARGS, NULL},
	 { "vectorVectorDouble_insert", _wrap_vectorVectorDouble_insert, METH_VARARGS, NULL},
	 { "vectorVectorDouble_reserve", (PyCFunction)(void(*)(void))_wrap_vectorVectorDouble_reserve, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorVectorDouble_capacity", _wrap_vectorVectorDouble_capacity, METH_O, NULL},
	 { "delete_vectorVectorDouble", _wrap_delete_vectorVectorDouble, METH_O, NULL},
	 { "vectorVectorDouble_swigregister", vectorVectorDouble_swigregister, METH_O, NULL},
	 { "vectorVectorDouble_swiginit", vectorVectorDouble_swiginit, METH_VARARGS, NULL},
	 { "vectorSubtractionHistory_iterator", _wrap_vectorSubtractionHistory_iterator, METH_O, NULL},
	 { "vectorSubtractionHistory___nonzero__", _wrap_vectorSubtractionHistory___nonzero__, METH_O, NULL},
	 { "vectorSubtractionHistory___bool__", _wrap_vectorSubtractionHistory___bool__, METH_O, NULL},
	 { "vectorSubtractionHistory___len__", _wrap_vectorSubtractionHistory___len__, METH_O, NULL},
	 { "vectorSubtractionHistory___getslice__", (PyCFunction)(void(*)(void))_wrap_vectorSubtractionHistory___getslice__, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorSubtractionHistory___setslice__", _wrap_vectorSubtractionHistory___setslice__, METH_VARARGS, NULL},
	 { "vectorSubtractionHistory___delslice__", (PyCFunction)(void(*)(void))_wrap_vectorSubtractionHistory___delslice__, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorSubtractionHistory___delitem__", _wrap_vectorSubtractionHistory___delitem__, METH_VARARGS, NULL},
	 { "vectorSubtractionHistory___getitem__", _wrap_vectorSubtractionHistory___getitem__, METH_VARARGS, NULL},
	 { "vectorSubtractionHistory___setitem__", _wrap_vectorSubtractionHistory___setitem__, METH_VARARGS, NULL},
	 { "vectorSubtractionHistory_pop", _wrap_vectorSubtractionHistory_pop, METH_O, NULL},
	 { "vectorSubtractionHistory_append", (PyCFunction)(void(*)(void))_wrap_vectorSubtractionHistory_append, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorSubtractionHistory_empty", _wrap_vectorSubtractionHistory_empty, METH_O, NULL},
	 { "vectorSubtractionHistory_size", _wrap_vectorSubtractionHistory_size, METH_O, NULL},
	 { "vectorSubtractionHistory_swap", (PyCFunction)(void(*)(void))_wrap_vectorSubtractionHistory_swap, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorSubtractionHistory_begin", _wrap_vectorSubtractionHistory_begin, METH_O, NULL},
	 { "vectorSubtractionHistory_end", _wrap_vectorSubtractionHistory_end, METH_O, NULL},
	 { "vectorSubtractionHistory_rbegin", _wrap_vectorSubtractionHistory_rbegin, METH_O, NULL},
	 { "vectorSubtractionHistory_rend", _wrap_vectorSubtractionHistory_rend, METH_O, NULL},
	 { "vectorSubtractionHistory_clear", _wrap_vectorSubtractionHistory_clear, METH_O, NULL},
	 { "vectorSubtractionHistory_get_allocator", _wrap_vectorSubtractionHistory_get_allocator, METH_O, NULL},
	 { "vectorSubtractionHistory_pop_back", _wrap_vectorSubtractionHistory_pop_back, METH_O, NULL},
	 { "vectorSubtractionHistory_erase", _wrap_vectorSubtractionHistory_erase, METH_VARARGS, NULL},
	 { "new_vectorSubtractionHistory", _wrap_new_vectorSubtractionHistory, METH_VARARGS, NULL},
	 { "vectorSubtractionHistory_push_back", (PyCFunction)(void(*)(void))_wrap_vectorSubtractionHistory_push_back, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorSubtractionHistory_front", _wrap_vectorSubtractionHistory_front, METH_O, NULL},
	 { "vectorSubtractionHistory_back", _wrap_vectorSubtractionHistory_back, METH_O, NULL},
	 { "vectorSubtractionHistory_assign", (PyCFunction)(void(*)(void))_wrap_vectorSubtractionHistory_assign, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorSubtractionHistory_resize", _wrap_vectorSubtractionHistory_resize, METH_VARARGS, NULL},
	 { "vectorSubtractionHistory_insert", _wrap_vectorSubtractionHistory_insert, METH_VARARGS, NULL},
	 { "vectorSubtractionHistory_reserve", (PyCFunction)(void(*)(void))_wrap_vectorSubtractionHistory_reserve, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorSubtractionHistory_capacity", _wrap_vectorSubtractionHistory_capacity, METH_O, NULL},
	 { "delete_vectorSubtractionHistory", _wrap_delete_vectorSubtractionHistory, METH_O, NULL},
	 { "vectorSubtractionHistory_swigregister", vectorSubtractionHistory_swigregister, METH_O, NULL},
	 { "vectorSubtractionHistory_swiginit", vectorSubtractionHistory_swiginit, METH_VARARGS, NULL},
	 { "vectorVectorPseudoJet_iterator", _wrap_vectorVectorPseudoJet_iterator, METH_O, NULL},
	 { "vectorVectorPseudoJet___nonzero__", _wrap_vectorVectorPseudoJet___nonzero__, METH_O, NULL},
	 { "vectorVectorPseudoJet___bool__", _wrap_vectorVectorPseudoJet___bool__, METH_O, NULL},
	 { "vectorVectorPseudoJet___len__", _wrap_vectorVectorPseudoJet___len__, METH_O, NULL},
	 { "vectorVectorPseudoJet___getslice__", (PyCFunction)(void(*)(void))_wrap_vectorVectorPseudoJet___getslice__, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorVectorPseudoJet___setslice__", _wrap_vectorVectorPseudoJet___setslice__, METH_VARARGS, NULL},
	 { "vectorVectorPseudoJet___delslice__", (PyCFunction)(void(*)(void))_wrap_vectorVectorPseudoJet___delslice__, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorVectorPseudoJet___delitem__", _wrap_vectorVectorPseudoJet___delitem__, METH_VARARGS, NULL},
	 { "vectorVectorPseudoJet___getitem__", _wrap_vectorVectorPseudoJet___getitem__, METH_VARARGS, NULL},
	 { "vectorVectorPseudoJet___setitem__", _wrap_vectorVectorPseudoJet___setitem__, METH_VARARGS, NULL},
	 { "vectorVectorPseudoJet_pop", _wrap_vectorVectorPseudoJet_pop, METH_O, NULL},
	 { "vectorVectorPseudoJet_append", (PyCFunction)(void(*)(void))_wrap_vectorVectorPseudoJet_append, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorVectorPseudoJet_empty", _wrap_vectorVectorPseudoJet_empty, METH_O, NULL},
	 { "vectorVectorPseudoJet_size", _wrap_vectorVectorPseudoJet_size, METH_O, NULL},
	 { "vectorVectorPseudoJet_swap", (PyCFunction)(void(*)(void))_wrap_vectorVectorPseudoJet_swap, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorVectorPseudoJet_begin", _wrap_vectorVectorPseudoJet_begin, METH_O, NULL},
	 { "vectorVectorPseudoJet_end", _wrap_vectorVectorPseudoJet_end, METH_O, NULL},
	 { "vectorVectorPseudoJet_rbegin", _wrap_vectorVectorPseudoJet_rbegin, METH_O, NULL},
	 { "vectorVectorPseudoJet_rend", _wrap_vectorVectorPseudoJet_rend, METH_O, NULL},
	 { "vectorVectorPseudoJet_clear", _wrap_vectorVectorPseudoJet_clear, METH_O, NULL},
	 { "vectorVectorPseudoJet_get_allocator", _wrap_vectorVectorPseudoJet_get_allocator, METH_O, NULL},
	 { "vectorVectorPseudoJet_pop_back", _wrap_vectorVectorPseudoJet_pop_back, METH_O, NULL},
	 { "vectorVectorPseudoJet_erase", _wrap_vectorVectorPseudoJet_erase, METH_VARARGS, NULL},
	 { "new_vectorVectorPseudoJet", _wrap_new_vectorVectorPseudoJet, METH_VARARGS, NULL},
	 { "vectorVectorPseudoJet_push_back", (PyCFunction)(void(*)(void))_wrap_vectorVectorPseudoJet_push_back, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorVectorPseudoJet_front", _wrap_vectorVectorPseudoJet_front, METH_O, NULL},
	 { "vectorVectorPseudoJet_back", _wrap_vectorVectorPseudoJet_back, METH_O, NULL},
	 { "vectorVectorPseudoJet_assign", (PyCFunction)(void(*)(void))_wrap_vectorVectorPseudoJet_assign, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorVectorPseudoJet_resize", _wrap_vectorVectorPseudoJet_resize, METH_VARARGS, NULL},
	 { "vectorVectorPseudoJet_insert", _wrap_vectorVectorPseudoJet_insert, METH_VARARGS, NULL},
	 { "vectorVectorPseudoJet_reserve", (PyCFunction)(void(*)(void))_wrap_vectorVectorPseudoJet_reserve, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorVectorPseudoJet_capacity", _wrap_vectorVectorPseudoJet_capacity, METH_O, NULL},
	 { "delete_vectorVectorPseudoJet", _wrap_delete_vectorVectorPseudoJet, METH_O, NULL},
	 { "vectorVectorPseudoJet_swigregister", vectorVectorPseudoJet_swigregister, METH_O, NULL},
	 { "vectorVectorPseudoJet_swiginit", vectorVectorPseudoJet_swiginit, METH_VARARGS, NULL},
	 { "vectorPairDouble_iterator", _wrap_vectorPairDouble_iterator, METH_O, NULL},
	 { "vectorPairDouble___nonzero__", _wrap_vectorPairDouble___nonzero__, METH_O, NULL},
	 { "vectorPairDouble___bool__", _wrap_vectorPairDouble___bool__, METH_O, NULL},
	 { "vectorPairDouble___len__", _wrap_vectorPairDouble___len__, METH_O, NULL},
	 { "vectorPairDouble___getslice__", (PyCFunction)(void(*)(void))_wrap_vectorPairDouble___getslice__, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorPairDouble___setslice__", _wrap_vectorPairDouble___setslice__, METH_VARARGS, NULL},
	 { "vectorPairDouble___delslice__", (PyCFunction)(void(*)(void))_wrap_vectorPairDouble___delslice__, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorPairDouble___delitem__", _wrap_vectorPairDouble___delitem__, METH_VARARGS, NULL},
	 { "vectorPairDouble___getitem__", _wrap_vectorPairDouble___getitem__, METH_VARARGS, NULL},
	 { "vectorPairDouble___setitem__", _wrap_vectorPairDouble___setitem__, METH_VARARGS, NULL},
	 { "vectorPairDouble_pop", _wrap_vectorPairDouble_pop, METH_O, NULL},
	 { "vectorPairDouble_append", (PyCFunction)(void(*)(void))_wrap_vectorPairDouble_append, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorPairDouble_empty", _wrap_vectorPairDouble_empty, METH_O, NULL},
	 { "vectorPairDouble_size", _wrap_vectorPairDouble_size, METH_O, NULL},
	 { "vectorPairDouble_swap", (PyCFunction)(void(*)(void))_wrap_vectorPairDouble_swap, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorPairDouble_begin", _wrap_vectorPairDouble_begin, METH_O, NULL},
	 { "vectorPairDouble_end", _wrap_vectorPairDouble_end, METH_O, NULL},
	 { "vectorPairDouble_rbegin", _wrap_vectorPairDouble_rbegin, METH_O, NULL},
	 { "vectorPairDouble_rend", _wrap_vectorPairDouble_rend, METH_O, NULL},
	 { "vectorPairDouble_clear", _wrap_vectorPairDouble_clear, METH_O, NULL},
	 { "vectorPairDouble_get_allocator", _wrap_vectorPairDouble_get_allocator, METH_O, NULL},
	 { "vectorPairDouble_pop_back", _wrap_vectorPairDouble_pop_back, METH_O, NULL},
	 { "vectorPairDouble_erase", _wrap_vectorPairDouble_erase, METH_VARARGS, NULL},
	 { "new_vectorPairDouble", _wrap_new_vectorPairDouble, METH_VARARGS, NULL},
	 { "vectorPairDouble_push_back", (PyCFunction)(void(*)(void))_wrap_vectorPairDouble_push_back, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorPairDouble_front", _wrap_vectorPairDouble_front, METH_O, NULL},
	 { "vectorPairDouble_back", _wrap_vectorPairDouble_back, METH_O, NULL},
	 { "vectorPairDouble_assign", (PyCFunction)(void(*)(void))_wrap_vectorPairDouble_assign, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorPairDouble_resize", _wrap_vectorPairDouble_resize, METH_VARARGS, NULL},
	 { "vectorPairDouble_insert", _wrap_vectorPairDouble_insert, METH_VARARGS, NULL},
	 { "vectorPairDouble_reserve", (PyCFunction)(void(*)(void))_wrap_vectorPairDouble_reserve, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorPairDouble_capacity", _wrap_vectorPairDouble_capacity, METH_O, NULL},
	 { "delete_vectorPairDouble", _wrap_delete_vectorPairDouble, METH_O, NULL},
	 { "vectorPairDouble_swigregister", vectorPairDouble_swigregister, METH_O, NULL},
	 { "vectorPairDouble_swiginit", vectorPairDouble_swiginit, METH_VARARGS, NULL},
	 { "vectorInt_iterator", _wrap_vectorInt_iterator, METH_O, NULL},
	 { "vectorInt___nonzero__", _wrap_vectorInt___nonzero__, METH_O, NULL},
	 { "vectorInt___bool__", _wrap_vectorInt___bool__, METH_O, NULL},
	 { "vectorInt___len__", _wrap_vectorInt___len__, METH_O, NULL},
	 { "vectorInt___getslice__", (PyCFunction)(void(*)(void))_wrap_vectorInt___getslice__, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorInt___setslice__", _wrap_vectorInt___setslice__, METH_VARARGS, NULL},
	 { "vectorInt___delslice__", (PyCFunction)(void(*)(void))_wrap_vectorInt___delslice__, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorInt___delitem__", _wrap_vectorInt___delitem__, METH_VARARGS, NULL},
	 { "vectorInt___getitem__", _wrap_vectorInt___getitem__, METH_VARARGS, NULL},
	 { "vectorInt___setitem__", _wrap_vectorInt___setitem__, METH_VARARGS, NULL},
	 { "vectorInt_pop", _wrap_vectorInt_pop, METH_O, NULL},
	 { "vectorInt_append", (PyCFunction)(void(*)(void))_wrap_vectorInt_append, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorInt_empty", _wrap_vectorInt_empty, METH_O, NULL},
	 { "vectorInt_size", _wrap_vectorInt_size, METH_O, NULL},
	 { "vectorInt_swap", (PyCFunction)(void(*)(void))_wrap_vectorInt_swap, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorInt_begin", _wrap_vectorInt_begin, METH_O, NULL},
	 { "vectorInt_end", _wrap_vectorInt_end, METH_O, NULL},
	 { "vectorInt_rbegin", _wrap_vectorInt_rbegin, METH_O, NULL},
	 { "vectorInt_rend", _wrap_vectorInt_rend, METH_O, NULL},
	 { "vectorInt_clear", _wrap_vectorInt_clear, METH_O, NULL},
	 { "vectorInt_get_allocator", _wrap_vectorInt_get_allocator, METH_O, NULL},
	 { "vectorInt_pop_back", _wrap_vectorInt_pop_back, METH_O, NULL},
	 { "vectorInt_erase", _wrap_vectorInt_erase, METH_VARARGS, NULL},
	 { "new_vectorInt", _wrap_new_vectorInt, METH_VARARGS, NULL},
	 { "vectorInt_push_back", (PyCFunction)(void(*)(void))_wrap_vectorInt_push_back, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorInt_front", _wrap_vectorInt_front, METH_O, NULL},
	 { "vectorInt_back", _wrap_vectorInt_back, METH_O, NULL},
	 { "vectorInt_assign", (PyCFunction)(void(*)(void))_wrap_vectorInt_assign, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorInt_resize", _wrap_vectorInt_resize, METH_VARARGS, NULL},
	 { "vectorInt_insert", _wrap_vectorInt_insert, METH_VARARGS, NULL},
	 { "vectorInt_reserve", (PyCFunction)(void(*)(void))_wrap_vectorInt_reserve, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorInt_capacity", _wrap_vectorInt_capacity, METH_O, NULL},
	 { "delete_vectorInt", _wrap_delete_vectorInt, METH_O, NULL},
	 { "vectorInt_swigregister", vectorInt_swigregister, METH_O, NULL},
	 { "vectorInt_swiginit", vectorInt_swiginit, METH_VARARGS, NULL},
	 { "phi_fix", (PyCFunction)(void(*)(void))_wrap_phi_fix, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "delete_DynamicVoronoiBase", _wrap_delete_DynamicVoronoiBase, METH_O, NULL},
	 { "DynamicVoronoiBase_description", _wrap_DynamicVoronoiBase_description, METH_O, NULL},
	 { "DynamicVoronoiBase_set_subtraction_type", (PyCFunction)(void(*)(void))_wrap_DynamicVoronoiBase_set_subtraction_type, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "DynamicVoronoiBase_set_R", (PyCFunction)(void(*)(void))_wrap_DynamicVoronoiBase_set_R, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "DynamicVoronoiBase_subtraction_type", _wrap_DynamicVoronoiBase_subtraction_type, METH_O, NULL},
	 { "DynamicVoronoiBase_track_emds", _wrap_DynamicVoronoiBase_track_emds, METH_O, NULL},
	 { "DynamicVoronoiBase_R", _wrap_DynamicVoronoiBase_R, METH_O, NULL},
	 { "DynamicVoronoiBase___call__", _wrap_DynamicVoronoiBase___call__, METH_VARARGS, NULL},
	 { "DynamicVoronoiBase_valid_point", _wrap_DynamicVoronoiBase_valid_point, METH_VARARGS, NULL},
	 { "DynamicVoronoiBase_number_of_primary_delaunay_vertices", _wrap_DynamicVoronoiBase_number_of_primary_delaunay_vertices, METH_O, NULL},
	 { "DynamicVoronoiBase_total_area", _wrap_DynamicVoronoiBase_total_area, METH_O, NULL},
	 { "DynamicVoronoiBase_areas", _wrap_DynamicVoronoiBase_areas, METH_O, NULL},
	 { "DynamicVoronoiBase_area", (PyCFunction)(void(*)(void))_wrap_DynamicVoronoiBase_area, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "DynamicVoronoiBase_coincidences", _wrap_DynamicVoronoiBase_coincidences, METH_O, NULL},
	 { "DynamicVoronoiBase_emd_density", (PyCFunction)(void(*)(void))_wrap_DynamicVoronoiBase_emd_density, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "DynamicVoronoiBase_neighbors", (PyCFunction)(void(*)(void))_wrap_DynamicVoronoiBase_neighbors, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "DynamicVoronoiBase_vertex_is_primary_and_active", (PyCFunction)(void(*)(void))_wrap_DynamicVoronoiBase_vertex_is_primary_and_active, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "DynamicVoronoiBase_swigregister", DynamicVoronoiBase_swigregister, METH_O, NULL},
	 { "new_DynamicVoronoiCylinder", _wrap_new_DynamicVoronoiCylinder, METH_VARARGS, NULL},
	 { "DynamicVoronoiCylinder_primary_region", _wrap_DynamicVoronoiCylinder_primary_region, METH_O, NULL},
	 { "DynamicVoronoiCylinder_valid_point", (PyCFunction)(void(*)(void))_wrap_DynamicVoronoiCylinder_valid_point, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "DynamicVoronoiCylinder_neighbors", (PyCFunction)(void(*)(void))_wrap_DynamicVoronoiCylinder_neighbors, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "DynamicVoronoiCylinder_remove", (PyCFunction)(void(*)(void))_wrap_DynamicVoronoiCylinder_remove, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "delete_DynamicVoronoiCylinder", _wrap_delete_DynamicVoronoiCylinder, METH_O, NULL},
	 { "DynamicVoronoiCylinder_swigregister", DynamicVoronoiCylinder_swigregister, METH_O, NULL},
	 { "DynamicVoronoiCylinder_swiginit", DynamicVoronoiCylinder_swiginit, METH_VARARGS, NULL},
	 { "new_DynamicVoronoiDisk", _wrap_new_DynamicVoronoiDisk, METH_VARARGS, NULL},
	 { "DynamicVoronoiDisk_set_R", (PyCFunction)(void(*)(void))_wrap_DynamicVoronoiDisk_set_R, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "DynamicVoronoiDisk_set_center", (PyCFunction)(void(*)(void))_wrap_DynamicVoronoiDisk_set_center, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "DynamicVoronoiDisk_x0", _wrap_DynamicVoronoiDisk_x0, METH_O, NULL},
	 { "DynamicVoronoiDisk_y0", _wrap_DynamicVoronoiDisk_y0, METH_O, NULL},
	 { "DynamicVoronoiDisk_valid_point", (PyCFunction)(void(*)(void))_wrap_DynamicVoronoiDisk_valid_point, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "DynamicVoronoiDisk_remove", (PyCFunction)(void(*)(void))_wrap_DynamicVoronoiDisk_remove, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "delete_DynamicVoronoiDisk", _wrap_delete_DynamicVoronoiDisk, METH_O, NULL},
	 { "DynamicVoronoiDisk_swigregister", DynamicVoronoiDisk_swigregister, METH_O, NULL},
	 { "DynamicVoronoiDisk_swiginit", DynamicVoronoiDisk_swiginit, METH_VARARGS, NULL},
	 { "new_SubtractionHistory", _wrap_new_SubtractionHistory, METH_VARARGS, NULL},
	 { "SubtractionHistory_areas", _wrap_SubtractionHistory_areas, METH_VARARGS, NULL},
	 { "SubtractionHistory_zpt", _wrap_SubtractionHistory_zpt, METH_O, NULL},
	 { "SubtractionHistory_zemd", _wrap_SubtractionHistory_zemd, METH_O, NULL},
	 { "SubtractionHistory_nvalid", _wrap_SubtractionHistory_nvalid, METH_O, NULL},
	 { "SubtractionHistory_emdtot", _wrap_SubtractionHistory_emdtot, METH_VARARGS, NULL},
	 { "SubtractionHistory_nremoved", _wrap_SubtractionHistory_nremoved, METH_VARARGS, NULL},
	 { "delete_SubtractionHistory", _wrap_delete_SubtractionHistory, METH_O, NULL},
	 { "SubtractionHistory_swigregister", SubtractionHistory_swigregister, METH_O, NULL},
	 { "SubtractionHistory_swiginit", SubtractionHistory_swiginit, METH_VARARGS, NULL},
	 { "new_GhostGridBase", _wrap_new_GhostGridBase, METH_VARARGS, NULL},
	 { "delete_GhostGridBase", _wrap_delete_GhostGridBase, METH_O, NULL},
	 { "GhostGridBase_description", _wrap_GhostGridBase_description, METH_O, NULL},
	 { "GhostGridBase_drap", _wrap_GhostGridBase_drap, METH_O, NULL},
	 { "GhostGridBase_dphi", _wrap_GhostGridBase_dphi, METH_O, NULL},
	 { "GhostGridBase_nrap", _wrap_GhostGridBase_nrap, METH_O, NULL},
	 { "GhostGridBase_nphi", _wrap_GhostGridBase_nphi, METH_O, NULL},
	 { "GhostGridBase_points", _wrap_GhostGridBase_points, METH_O, NULL},
	 { "GhostGridBase_ghosts", _wrap_GhostGridBase_ghosts, METH_O, NULL},
	 { "GhostGridBase_nghosts", _wrap_GhostGridBase_nghosts, METH_O, NULL},
	 { "GhostGridBase_swigregister", GhostGridBase_swigregister, METH_O, NULL},
	 { "GhostGridBase_swiginit", GhostGridBase_swiginit, METH_VARARGS, NULL},
	 { "new_GhostGridRectangle", _wrap_new_GhostGridRectangle, METH_VARARGS, NULL},
	 { "GhostGridRectangle_description", _wrap_GhostGridRectangle_description, METH_O, NULL},
	 { "GhostGridRectangle_region", _wrap_GhostGridRectangle_region, METH_O, NULL},
	 { "GhostGridRectangle___str__", _wrap_GhostGridRectangle___str__, METH_O, NULL},
	 { "GhostGridRectangle___repr__", _wrap_GhostGridRectangle___repr__, METH_O, NULL},
	 { "delete_GhostGridRectangle", _wrap_delete_GhostGridRectangle, METH_O, NULL},
	 { "GhostGridRectangle_swigregister", GhostGridRectangle_swigregister, METH_O, NULL},
	 { "GhostGridRectangle_swiginit", GhostGridRectangle_swiginit, METH_VARARGS, NULL},
	 { "new_GhostGridDisk", _wrap_new_GhostGridDisk, METH_VARARGS, NULL},
	 { "GhostGridDisk_description", _wrap_GhostGridDisk_description, METH_O, NULL},
	 { "GhostGridDisk_R", _wrap_GhostGridDisk_R, METH_O, NULL},
	 { "GhostGridDisk___str__", _wrap_GhostGridDisk___str__, METH_O, NULL},
	 { "GhostGridDisk___repr__", _wrap_GhostGridDisk___repr__, METH_O, NULL},
	 { "delete_GhostGridDisk", _wrap_delete_GhostGridDisk, METH_O, NULL},
	 { "GhostGridDisk_swigregister", GhostGridDisk_swigregister, METH_O, NULL},
	 { "GhostGridDisk_swiginit", GhostGridDisk_swiginit, METH_VARARGS, NULL},
	 { "new_IteratedVoronoiSubtractorDiskBase", _wrap_new_IteratedVoronoiSubtractorDiskBase, METH_NOARGS, NULL},
	 { "delete_IteratedVoronoiSubtractorDiskBase", _wrap_delete_IteratedVoronoiSubtractorDiskBase, METH_O, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_description", _wrap_IteratedVoronoiSubtractorDiskBase_description, METH_O, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_set_z", (PyCFunction)(void(*)(void))_wrap_IteratedVoronoiSubtractorDiskBase_set_z, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_set_zpt", (PyCFunction)(void(*)(void))_wrap_IteratedVoronoiSubtractorDiskBase_set_zpt, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_set_zemd", (PyCFunction)(void(*)(void))_wrap_IteratedVoronoiSubtractorDiskBase_set_zemd, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_set_background_estimator", (PyCFunction)(void(*)(void))_wrap_IteratedVoronoiSubtractorDiskBase_set_background_estimator, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_set_rho_subtraction_mode", (PyCFunction)(void(*)(void))_wrap_IteratedVoronoiSubtractorDiskBase_set_rho_subtraction_mode, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_set_jet_constituents_use_same_rho", (PyCFunction)(void(*)(void))_wrap_IteratedVoronoiSubtractorDiskBase_set_jet_constituents_use_same_rho, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_set_subtraction_type", (PyCFunction)(void(*)(void))_wrap_IteratedVoronoiSubtractorDiskBase_set_subtraction_type, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_set_R", (PyCFunction)(void(*)(void))_wrap_IteratedVoronoiSubtractorDiskBase_set_R, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_set_allow_repeats", (PyCFunction)(void(*)(void))_wrap_IteratedVoronoiSubtractorDiskBase_set_allow_repeats, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_set_store_history", (PyCFunction)(void(*)(void))_wrap_IteratedVoronoiSubtractorDiskBase_set_store_history, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_zpt", _wrap_IteratedVoronoiSubtractorDiskBase_zpt, METH_O, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_zemd", _wrap_IteratedVoronoiSubtractorDiskBase_zemd, METH_O, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_background_estimator", _wrap_IteratedVoronoiSubtractorDiskBase_background_estimator, METH_VARARGS, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_jet_constituents_use_same_rho", _wrap_IteratedVoronoiSubtractorDiskBase_jet_constituents_use_same_rho, METH_O, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_rho_subtraction_mode", _wrap_IteratedVoronoiSubtractorDiskBase_rho_subtraction_mode, METH_O, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_track_emds", _wrap_IteratedVoronoiSubtractorDiskBase_track_emds, METH_O, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_total_area", _wrap_IteratedVoronoiSubtractorDiskBase_total_area, METH_O, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_subtraction_type", _wrap_IteratedVoronoiSubtractorDiskBase_subtraction_type, METH_O, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_R", _wrap_IteratedVoronoiSubtractorDiskBase_R, METH_O, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_allow_repeats", _wrap_IteratedVoronoiSubtractorDiskBase_allow_repeats, METH_O, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_store_history", _wrap_IteratedVoronoiSubtractorDiskBase_store_history, METH_O, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_vor", _wrap_IteratedVoronoiSubtractorDiskBase_vor, METH_O, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_reapply", _wrap_IteratedVoronoiSubtractorDiskBase_reapply, METH_O, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_emd", _wrap_IteratedVoronoiSubtractorDiskBase_emd, METH_O, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_nvalid", _wrap_IteratedVoronoiSubtractorDiskBase_nvalid, METH_O, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_nremoved", _wrap_IteratedVoronoiSubtractorDiskBase_nremoved, METH_O, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_history", _wrap_IteratedVoronoiSubtractorDiskBase_history, METH_O, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_hist_size", _wrap_IteratedVoronoiSubtractorDiskBase_hist_size, METH_O, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_hist_i_areas_size", (PyCFunction)(void(*)(void))_wrap_IteratedVoronoiSubtractorDiskBase_hist_i_areas_size, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "IteratedVoronoiSubtractorDiskBase___str__", _wrap_IteratedVoronoiSubtractorDiskBase___str__, METH_O, NULL},
	 { "IteratedVoronoiSubtractorDiskBase___repr__", _wrap_IteratedVoronoiSubtractorDiskBase___repr__, METH_O, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_swigregister", IteratedVoronoiSubtractorDiskBase_swigregister, METH_O, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_swiginit", IteratedVoronoiSubtractorDiskBase_swiginit, METH_VARARGS, NULL},
	 { "new_IteratedVoronoiSubtractorCylinderBase", _wrap_new_IteratedVoronoiSubtractorCylinderBase, METH_NOARGS, NULL},
	 { "delete_IteratedVoronoiSubtractorCylinderBase", _wrap_delete_IteratedVoronoiSubtractorCylinderBase, METH_O, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_description", _wrap_IteratedVoronoiSubtractorCylinderBase_description, METH_O, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_set_z", (PyCFunction)(void(*)(void))_wrap_IteratedVoronoiSubtractorCylinderBase_set_z, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_set_zpt", (PyCFunction)(void(*)(void))_wrap_IteratedVoronoiSubtractorCylinderBase_set_zpt, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_set_zemd", (PyCFunction)(void(*)(void))_wrap_IteratedVoronoiSubtractorCylinderBase_set_zemd, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_set_background_estimator", (PyCFunction)(void(*)(void))_wrap_IteratedVoronoiSubtractorCylinderBase_set_background_estimator, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_set_rho_subtraction_mode", (PyCFunction)(void(*)(void))_wrap_IteratedVoronoiSubtractorCylinderBase_set_rho_subtraction_mode, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_set_jet_constituents_use_same_rho", (PyCFunction)(void(*)(void))_wrap_IteratedVoronoiSubtractorCylinderBase_set_jet_constituents_use_same_rho, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_set_subtraction_type", (PyCFunction)(void(*)(void))_wrap_IteratedVoronoiSubtractorCylinderBase_set_subtraction_type, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_set_R", (PyCFunction)(void(*)(void))_wrap_IteratedVoronoiSubtractorCylinderBase_set_R, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_set_allow_repeats", (PyCFunction)(void(*)(void))_wrap_IteratedVoronoiSubtractorCylinderBase_set_allow_repeats, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_set_store_history", (PyCFunction)(void(*)(void))_wrap_IteratedVoronoiSubtractorCylinderBase_set_store_history, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_zpt", _wrap_IteratedVoronoiSubtractorCylinderBase_zpt, METH_O, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_zemd", _wrap_IteratedVoronoiSubtractorCylinderBase_zemd, METH_O, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_background_estimator", _wrap_IteratedVoronoiSubtractorCylinderBase_background_estimator, METH_VARARGS, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_jet_constituents_use_same_rho", _wrap_IteratedVoronoiSubtractorCylinderBase_jet_constituents_use_same_rho, METH_O, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_rho_subtraction_mode", _wrap_IteratedVoronoiSubtractorCylinderBase_rho_subtraction_mode, METH_O, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_track_emds", _wrap_IteratedVoronoiSubtractorCylinderBase_track_emds, METH_O, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_total_area", _wrap_IteratedVoronoiSubtractorCylinderBase_total_area, METH_O, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_subtraction_type", _wrap_IteratedVoronoiSubtractorCylinderBase_subtraction_type, METH_O, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_R", _wrap_IteratedVoronoiSubtractorCylinderBase_R, METH_O, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_allow_repeats", _wrap_IteratedVoronoiSubtractorCylinderBase_allow_repeats, METH_O, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_store_history", _wrap_IteratedVoronoiSubtractorCylinderBase_store_history, METH_O, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_vor", _wrap_IteratedVoronoiSubtractorCylinderBase_vor, METH_O, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_reapply", _wrap_IteratedVoronoiSubtractorCylinderBase_reapply, METH_O, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_emd", _wrap_IteratedVoronoiSubtractorCylinderBase_emd, METH_O, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_nvalid", _wrap_IteratedVoronoiSubtractorCylinderBase_nvalid, METH_O, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_nremoved", _wrap_IteratedVoronoiSubtractorCylinderBase_nremoved, METH_O, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_history", _wrap_IteratedVoronoiSubtractorCylinderBase_history, METH_O, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_hist_size", _wrap_IteratedVoronoiSubtractorCylinderBase_hist_size, METH_O, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_hist_i_areas_size", (PyCFunction)(void(*)(void))_wrap_IteratedVoronoiSubtractorCylinderBase_hist_i_areas_size, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase___str__", _wrap_IteratedVoronoiSubtractorCylinderBase___str__, METH_O, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase___repr__", _wrap_IteratedVoronoiSubtractorCylinderBase___repr__, METH_O, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_swigregister", IteratedVoronoiSubtractorCylinderBase_swigregister, METH_O, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_swiginit", IteratedVoronoiSubtractorCylinderBase_swiginit, METH_VARARGS, NULL},
	 { "new_OptimalTransportSubtractorTransverseMomentumDeltaR", _wrap_new_OptimalTransportSubtractorTransverseMomentumDeltaR, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumDeltaR_description", _wrap_OptimalTransportSubtractorTransverseMomentumDeltaR_description, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumDeltaR_emd_obj", _wrap_OptimalTransportSubtractorTransverseMomentumDeltaR_emd_obj, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumDeltaR_z", _wrap_OptimalTransportSubtractorTransverseMomentumDeltaR_z, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumDeltaR_total_subtracted", _wrap_OptimalTransportSubtractorTransverseMomentumDeltaR_total_subtracted, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumDeltaR___call__", _wrap_OptimalTransportSubtractorTransverseMomentumDeltaR___call__, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumDeltaR___str__", _wrap_OptimalTransportSubtractorTransverseMomentumDeltaR___str__, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumDeltaR___repr__", _wrap_OptimalTransportSubtractorTransverseMomentumDeltaR___repr__, METH_O, NULL},
	 { "delete_OptimalTransportSubtractorTransverseMomentumDeltaR", _wrap_delete_OptimalTransportSubtractorTransverseMomentumDeltaR, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumDeltaR_swigregister", OptimalTransportSubtractorTransverseMomentumDeltaR_swigregister, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumDeltaR_swiginit", OptimalTransportSubtractorTransverseMomentumDeltaR_swiginit, METH_VARARGS, NULL},
	 { "new_OptimalTransportSubtractorTransverseMomentumHadronicDot", _wrap_new_OptimalTransportSubtractorTransverseMomentumHadronicDot, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumHadronicDot_description", _wrap_OptimalTransportSubtractorTransverseMomentumHadronicDot_description, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumHadronicDot_emd_obj", _wrap_OptimalTransportSubtractorTransverseMomentumHadronicDot_emd_obj, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumHadronicDot_z", _wrap_OptimalTransportSubtractorTransverseMomentumHadronicDot_z, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumHadronicDot_total_subtracted", _wrap_OptimalTransportSubtractorTransverseMomentumHadronicDot_total_subtracted, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumHadronicDot___call__", _wrap_OptimalTransportSubtractorTransverseMomentumHadronicDot___call__, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumHadronicDot___str__", _wrap_OptimalTransportSubtractorTransverseMomentumHadronicDot___str__, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumHadronicDot___repr__", _wrap_OptimalTransportSubtractorTransverseMomentumHadronicDot___repr__, METH_O, NULL},
	 { "delete_OptimalTransportSubtractorTransverseMomentumHadronicDot", _wrap_delete_OptimalTransportSubtractorTransverseMomentumHadronicDot, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumHadronicDot_swigregister", OptimalTransportSubtractorTransverseMomentumHadronicDot_swigregister, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumHadronicDot_swiginit", OptimalTransportSubtractorTransverseMomentumHadronicDot_swiginit, METH_VARARGS, NULL},
	 { "new_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive", _wrap_new_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumHadronicDotMassive_description", _wrap_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive_description, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumHadronicDotMassive_emd_obj", _wrap_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive_emd_obj, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumHadronicDotMassive_z", _wrap_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive_z, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumHadronicDotMassive_total_subtracted", _wrap_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive_total_subtracted, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumHadronicDotMassive___call__", _wrap_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive___call__, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumHadronicDotMassive___str__", _wrap_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive___str__, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumHadronicDotMassive___repr__", _wrap_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive___repr__, METH_O, NULL},
	 { "delete_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive", _wrap_delete_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumHadronicDotMassive_swigregister", OptimalTransportSubtractorTransverseMomentumHadronicDotMassive_swigregister, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumHadronicDotMassive_swiginit", OptimalTransportSubtractorTransverseMomentumHadronicDotMassive_swiginit, METH_VARARGS, NULL},
	 { "new_OptimalTransportSubtractorTransverseEnergyDeltaR", _wrap_new_OptimalTransportSubtractorTransverseEnergyDeltaR, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyDeltaR_description", _wrap_OptimalTransportSubtractorTransverseEnergyDeltaR_description, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyDeltaR_emd_obj", _wrap_OptimalTransportSubtractorTransverseEnergyDeltaR_emd_obj, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyDeltaR_z", _wrap_OptimalTransportSubtractorTransverseEnergyDeltaR_z, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyDeltaR_total_subtracted", _wrap_OptimalTransportSubtractorTransverseEnergyDeltaR_total_subtracted, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyDeltaR___call__", _wrap_OptimalTransportSubtractorTransverseEnergyDeltaR___call__, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyDeltaR___str__", _wrap_OptimalTransportSubtractorTransverseEnergyDeltaR___str__, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyDeltaR___repr__", _wrap_OptimalTransportSubtractorTransverseEnergyDeltaR___repr__, METH_O, NULL},
	 { "delete_OptimalTransportSubtractorTransverseEnergyDeltaR", _wrap_delete_OptimalTransportSubtractorTransverseEnergyDeltaR, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyDeltaR_swigregister", OptimalTransportSubtractorTransverseEnergyDeltaR_swigregister, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyDeltaR_swiginit", OptimalTransportSubtractorTransverseEnergyDeltaR_swiginit, METH_VARARGS, NULL},
	 { "new_OptimalTransportSubtractorTransverseEnergyHadronicDot", _wrap_new_OptimalTransportSubtractorTransverseEnergyHadronicDot, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyHadronicDot_description", _wrap_OptimalTransportSubtractorTransverseEnergyHadronicDot_description, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyHadronicDot_emd_obj", _wrap_OptimalTransportSubtractorTransverseEnergyHadronicDot_emd_obj, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyHadronicDot_z", _wrap_OptimalTransportSubtractorTransverseEnergyHadronicDot_z, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyHadronicDot_total_subtracted", _wrap_OptimalTransportSubtractorTransverseEnergyHadronicDot_total_subtracted, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyHadronicDot___call__", _wrap_OptimalTransportSubtractorTransverseEnergyHadronicDot___call__, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyHadronicDot___str__", _wrap_OptimalTransportSubtractorTransverseEnergyHadronicDot___str__, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyHadronicDot___repr__", _wrap_OptimalTransportSubtractorTransverseEnergyHadronicDot___repr__, METH_O, NULL},
	 { "delete_OptimalTransportSubtractorTransverseEnergyHadronicDot", _wrap_delete_OptimalTransportSubtractorTransverseEnergyHadronicDot, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyHadronicDot_swigregister", OptimalTransportSubtractorTransverseEnergyHadronicDot_swigregister, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyHadronicDot_swiginit", OptimalTransportSubtractorTransverseEnergyHadronicDot_swiginit, METH_VARARGS, NULL},
	 { "new_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive", _wrap_new_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyHadronicDotMassive_description", _wrap_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive_description, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyHadronicDotMassive_emd_obj", _wrap_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive_emd_obj, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyHadronicDotMassive_z", _wrap_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive_z, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyHadronicDotMassive_total_subtracted", _wrap_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive_total_subtracted, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyHadronicDotMassive___call__", _wrap_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive___call__, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyHadronicDotMassive___str__", _wrap_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive___str__, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyHadronicDotMassive___repr__", _wrap_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive___repr__, METH_O, NULL},
	 { "delete_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive", _wrap_delete_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyHadronicDotMassive_swigregister", OptimalTransportSubtractorTransverseEnergyHadronicDotMassive_swigregister, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyHadronicDotMassive_swiginit", OptimalTransportSubtractorTransverseEnergyHadronicDotMassive_swiginit, METH_VARARGS, NULL},
	 { "new_OptimalTransportSubtractorMomentumEEDot", _wrap_new_OptimalTransportSubtractorMomentumEEDot, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorMomentumEEDot_description", _wrap_OptimalTransportSubtractorMomentumEEDot_description, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEDot_emd_obj", _wrap_OptimalTransportSubtractorMomentumEEDot_emd_obj, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEDot_z", _wrap_OptimalTransportSubtractorMomentumEEDot_z, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEDot_total_subtracted", _wrap_OptimalTransportSubtractorMomentumEEDot_total_subtracted, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEDot___call__", _wrap_OptimalTransportSubtractorMomentumEEDot___call__, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorMomentumEEDot___str__", _wrap_OptimalTransportSubtractorMomentumEEDot___str__, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEDot___repr__", _wrap_OptimalTransportSubtractorMomentumEEDot___repr__, METH_O, NULL},
	 { "delete_OptimalTransportSubtractorMomentumEEDot", _wrap_delete_OptimalTransportSubtractorMomentumEEDot, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEDot_swigregister", OptimalTransportSubtractorMomentumEEDot_swigregister, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEDot_swiginit", OptimalTransportSubtractorMomentumEEDot_swiginit, METH_VARARGS, NULL},
	 { "new_OptimalTransportSubtractorMomentumEEDotMassive", _wrap_new_OptimalTransportSubtractorMomentumEEDotMassive, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorMomentumEEDotMassive_description", _wrap_OptimalTransportSubtractorMomentumEEDotMassive_description, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEDotMassive_emd_obj", _wrap_OptimalTransportSubtractorMomentumEEDotMassive_emd_obj, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEDotMassive_z", _wrap_OptimalTransportSubtractorMomentumEEDotMassive_z, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEDotMassive_total_subtracted", _wrap_OptimalTransportSubtractorMomentumEEDotMassive_total_subtracted, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEDotMassive___call__", _wrap_OptimalTransportSubtractorMomentumEEDotMassive___call__, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorMomentumEEDotMassive___str__", _wrap_OptimalTransportSubtractorMomentumEEDotMassive___str__, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEDotMassive___repr__", _wrap_OptimalTransportSubtractorMomentumEEDotMassive___repr__, METH_O, NULL},
	 { "delete_OptimalTransportSubtractorMomentumEEDotMassive", _wrap_delete_OptimalTransportSubtractorMomentumEEDotMassive, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEDotMassive_swigregister", OptimalTransportSubtractorMomentumEEDotMassive_swigregister, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEDotMassive_swiginit", OptimalTransportSubtractorMomentumEEDotMassive_swiginit, METH_VARARGS, NULL},
	 { "new_OptimalTransportSubtractorMomentumEEArcLength", _wrap_new_OptimalTransportSubtractorMomentumEEArcLength, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorMomentumEEArcLength_description", _wrap_OptimalTransportSubtractorMomentumEEArcLength_description, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEArcLength_emd_obj", _wrap_OptimalTransportSubtractorMomentumEEArcLength_emd_obj, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEArcLength_z", _wrap_OptimalTransportSubtractorMomentumEEArcLength_z, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEArcLength_total_subtracted", _wrap_OptimalTransportSubtractorMomentumEEArcLength_total_subtracted, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEArcLength___call__", _wrap_OptimalTransportSubtractorMomentumEEArcLength___call__, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorMomentumEEArcLength___str__", _wrap_OptimalTransportSubtractorMomentumEEArcLength___str__, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEArcLength___repr__", _wrap_OptimalTransportSubtractorMomentumEEArcLength___repr__, METH_O, NULL},
	 { "delete_OptimalTransportSubtractorMomentumEEArcLength", _wrap_delete_OptimalTransportSubtractorMomentumEEArcLength, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEArcLength_swigregister", OptimalTransportSubtractorMomentumEEArcLength_swigregister, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEArcLength_swiginit", OptimalTransportSubtractorMomentumEEArcLength_swiginit, METH_VARARGS, NULL},
	 { "new_OptimalTransportSubtractorMomentumEEArcLengthMassive", _wrap_new_OptimalTransportSubtractorMomentumEEArcLengthMassive, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorMomentumEEArcLengthMassive_description", _wrap_OptimalTransportSubtractorMomentumEEArcLengthMassive_description, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEArcLengthMassive_emd_obj", _wrap_OptimalTransportSubtractorMomentumEEArcLengthMassive_emd_obj, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEArcLengthMassive_z", _wrap_OptimalTransportSubtractorMomentumEEArcLengthMassive_z, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEArcLengthMassive_total_subtracted", _wrap_OptimalTransportSubtractorMomentumEEArcLengthMassive_total_subtracted, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEArcLengthMassive___call__", _wrap_OptimalTransportSubtractorMomentumEEArcLengthMassive___call__, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorMomentumEEArcLengthMassive___str__", _wrap_OptimalTransportSubtractorMomentumEEArcLengthMassive___str__, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEArcLengthMassive___repr__", _wrap_OptimalTransportSubtractorMomentumEEArcLengthMassive___repr__, METH_O, NULL},
	 { "delete_OptimalTransportSubtractorMomentumEEArcLengthMassive", _wrap_delete_OptimalTransportSubtractorMomentumEEArcLengthMassive, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEArcLengthMassive_swigregister", OptimalTransportSubtractorMomentumEEArcLengthMassive_swigregister, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEArcLengthMassive_swiginit", OptimalTransportSubtractorMomentumEEArcLengthMassive_swiginit, METH_VARARGS, NULL},
	 { "new_OptimalTransportSubtractorEnergyEEDot", _wrap_new_OptimalTransportSubtractorEnergyEEDot, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorEnergyEEDot_description", _wrap_OptimalTransportSubtractorEnergyEEDot_description, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEDot_emd_obj", _wrap_OptimalTransportSubtractorEnergyEEDot_emd_obj, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEDot_z", _wrap_OptimalTransportSubtractorEnergyEEDot_z, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEDot_total_subtracted", _wrap_OptimalTransportSubtractorEnergyEEDot_total_subtracted, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEDot___call__", _wrap_OptimalTransportSubtractorEnergyEEDot___call__, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorEnergyEEDot___str__", _wrap_OptimalTransportSubtractorEnergyEEDot___str__, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEDot___repr__", _wrap_OptimalTransportSubtractorEnergyEEDot___repr__, METH_O, NULL},
	 { "delete_OptimalTransportSubtractorEnergyEEDot", _wrap_delete_OptimalTransportSubtractorEnergyEEDot, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEDot_swigregister", OptimalTransportSubtractorEnergyEEDot_swigregister, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEDot_swiginit", OptimalTransportSubtractorEnergyEEDot_swiginit, METH_VARARGS, NULL},
	 { "new_OptimalTransportSubtractorEnergyEEDotMassive", _wrap_new_OptimalTransportSubtractorEnergyEEDotMassive, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorEnergyEEDotMassive_description", _wrap_OptimalTransportSubtractorEnergyEEDotMassive_description, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEDotMassive_emd_obj", _wrap_OptimalTransportSubtractorEnergyEEDotMassive_emd_obj, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEDotMassive_z", _wrap_OptimalTransportSubtractorEnergyEEDotMassive_z, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEDotMassive_total_subtracted", _wrap_OptimalTransportSubtractorEnergyEEDotMassive_total_subtracted, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEDotMassive___call__", _wrap_OptimalTransportSubtractorEnergyEEDotMassive___call__, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorEnergyEEDotMassive___str__", _wrap_OptimalTransportSubtractorEnergyEEDotMassive___str__, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEDotMassive___repr__", _wrap_OptimalTransportSubtractorEnergyEEDotMassive___repr__, METH_O, NULL},
	 { "delete_OptimalTransportSubtractorEnergyEEDotMassive", _wrap_delete_OptimalTransportSubtractorEnergyEEDotMassive, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEDotMassive_swigregister", OptimalTransportSubtractorEnergyEEDotMassive_swigregister, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEDotMassive_swiginit", OptimalTransportSubtractorEnergyEEDotMassive_swiginit, METH_VARARGS, NULL},
	 { "new_OptimalTransportSubtractorEnergyEEArcLength", _wrap_new_OptimalTransportSubtractorEnergyEEArcLength, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorEnergyEEArcLength_description", _wrap_OptimalTransportSubtractorEnergyEEArcLength_description, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEArcLength_emd_obj", _wrap_OptimalTransportSubtractorEnergyEEArcLength_emd_obj, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEArcLength_z", _wrap_OptimalTransportSubtractorEnergyEEArcLength_z, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEArcLength_total_subtracted", _wrap_OptimalTransportSubtractorEnergyEEArcLength_total_subtracted, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEArcLength___call__", _wrap_OptimalTransportSubtractorEnergyEEArcLength___call__, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorEnergyEEArcLength___str__", _wrap_OptimalTransportSubtractorEnergyEEArcLength___str__, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEArcLength___repr__", _wrap_OptimalTransportSubtractorEnergyEEArcLength___repr__, METH_O, NULL},
	 { "delete_OptimalTransportSubtractorEnergyEEArcLength", _wrap_delete_OptimalTransportSubtractorEnergyEEArcLength, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEArcLength_swigregister", OptimalTransportSubtractorEnergyEEArcLength_swigregister, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEArcLength_swiginit", OptimalTransportSubtractorEnergyEEArcLength_swiginit, METH_VARARGS, NULL},
	 { "new_OptimalTransportSubtractorEnergyEEArcLengthMassive", _wrap_new_OptimalTransportSubtractorEnergyEEArcLengthMassive, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorEnergyEEArcLengthMassive_description", _wrap_OptimalTransportSubtractorEnergyEEArcLengthMassive_description, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEArcLengthMassive_emd_obj", _wrap_OptimalTransportSubtractorEnergyEEArcLengthMassive_emd_obj, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEArcLengthMassive_z", _wrap_OptimalTransportSubtractorEnergyEEArcLengthMassive_z, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEArcLengthMassive_total_subtracted", _wrap_OptimalTransportSubtractorEnergyEEArcLengthMassive_total_subtracted, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEArcLengthMassive___call__", _wrap_OptimalTransportSubtractorEnergyEEArcLengthMassive___call__, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorEnergyEEArcLengthMassive___str__", _wrap_OptimalTransportSubtractorEnergyEEArcLengthMassive___str__, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEArcLengthMassive___repr__", _wrap_OptimalTransportSubtractorEnergyEEArcLengthMassive___repr__, METH_O, NULL},
	 { "delete_OptimalTransportSubtractorEnergyEEArcLengthMassive", _wrap_delete_OptimalTransportSubtractorEnergyEEArcLengthMassive, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEArcLengthMassive_swigregister", OptimalTransportSubtractorEnergyEEArcLengthMassive_swigregister, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEArcLengthMassive_swiginit", OptimalTransportSubtractorEnergyEEArcLengthMassive_swiginit, METH_VARARGS, NULL},
	 { "new_IteratedVoronoiSubtractorCylinder", _wrap_new_IteratedVoronoiSubtractorCylinder, METH_VARARGS, NULL},
	 { "IteratedVoronoiSubtractorCylinder___call__", _wrap_IteratedVoronoiSubtractorCylinder___call__, METH_VARARGS, NULL},
	 { "delete_IteratedVoronoiSubtractorCylinder", _wrap_delete_IteratedVoronoiSubtractorCylinder, METH_O, NULL},
	 { "IteratedVoronoiSubtractorCylinder_swigregister", IteratedVoronoiSubtractorCylinder_swigregister, METH_O, NULL},
	 { "IteratedVoronoiSubtractorCylinder_swiginit", IteratedVoronoiSubtractorCylinder_swiginit, METH_VARARGS, NULL},
	 { "new_IteratedVoronoiSubtractorDisk", (PyCFunction)(void(*)(void))_wrap_new_IteratedVoronoiSubtractorDisk, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "IteratedVoronoiSubtractorDisk___call__", _wrap_IteratedVoronoiSubtractorDisk___call__, METH_VARARGS, NULL},
	 { "delete_IteratedVoronoiSubtractorDisk", _wrap_delete_IteratedVoronoiSubtractorDisk, METH_O, NULL},
	 { "IteratedVoronoiSubtractorDisk_swigregister", IteratedVoronoiSubtractorDisk_swigregister, METH_O, NULL},
	 { "IteratedVoronoiSubtractorDisk_swiginit", IteratedVoronoiSubtractorDisk_swiginit, METH_VARARGS, NULL},
	 { "new_RecursiveSafeSubtractorTransverseMomentum", (PyCFunction)(void(*)(void))_wrap_new_RecursiveSafeSubtractorTransverseMomentum, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "RecursiveSafeSubtractorTransverseMomentum_description", _wrap_RecursiveSafeSubtractorTransverseMomentum_description, METH_O, NULL},
	 { "RecursiveSafeSubtractorTransverseMomentum_default_z", _wrap_RecursiveSafeSubtractorTransverseMomentum_default_z, METH_O, NULL},
	 { "RecursiveSafeSubtractorTransverseMomentum_default_f", _wrap_RecursiveSafeSubtractorTransverseMomentum_default_f, METH_O, NULL},
	 { "RecursiveSafeSubtractorTransverseMomentum_jet_alg", _wrap_RecursiveSafeSubtractorTransverseMomentum_jet_alg, METH_O, NULL},
	 { "RecursiveSafeSubtractorTransverseMomentum_weight_sums", _wrap_RecursiveSafeSubtractorTransverseMomentum_weight_sums, METH_O, NULL},
	 { "RecursiveSafeSubtractorTransverseMomentum_total_weight", _wrap_RecursiveSafeSubtractorTransverseMomentum_total_weight, METH_O, NULL},
	 { "RecursiveSafeSubtractorTransverseMomentum_reclustered_jet", _wrap_RecursiveSafeSubtractorTransverseMomentum_reclustered_jet, METH_O, NULL},
	 { "RecursiveSafeSubtractorTransverseMomentum___str__", _wrap_RecursiveSafeSubtractorTransverseMomentum___str__, METH_O, NULL},
	 { "RecursiveSafeSubtractorTransverseMomentum___repr__", _wrap_RecursiveSafeSubtractorTransverseMomentum___repr__, METH_O, NULL},
	 { "RecursiveSafeSubtractorTransverseMomentum___call__", _wrap_RecursiveSafeSubtractorTransverseMomentum___call__, METH_VARARGS, NULL},
	 { "RecursiveSafeSubtractorTransverseMomentum_apply", (PyCFunction)(void(*)(void))_wrap_RecursiveSafeSubtractorTransverseMomentum_apply, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "delete_RecursiveSafeSubtractorTransverseMomentum", _wrap_delete_RecursiveSafeSubtractorTransverseMomentum, METH_O, NULL},
	 { "RecursiveSafeSubtractorTransverseMomentum_swigregister", RecursiveSafeSubtractorTransverseMomentum_swigregister, METH_O, NULL},
	 { "RecursiveSafeSubtractorTransverseMomentum_swiginit", RecursiveSafeSubtractorTransverseMomentum_swiginit, METH_VARARGS, NULL},
	 { "new_RecursiveSafeSubtractorTransverseEnergy", (PyCFunction)(void(*)(void))_wrap_new_RecursiveSafeSubtractorTransverseEnergy, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "RecursiveSafeSubtractorTransverseEnergy_description", _wrap_RecursiveSafeSubtractorTransverseEnergy_description, METH_O, NULL},
	 { "RecursiveSafeSubtractorTransverseEnergy_default_z", _wrap_RecursiveSafeSubtractorTransverseEnergy_default_z, METH_O, NULL},
	 { "RecursiveSafeSubtractorTransverseEnergy_default_f", _wrap_RecursiveSafeSubtractorTransverseEnergy_default_f, METH_O, NULL},
	 { "RecursiveSafeSubtractorTransverseEnergy_jet_alg", _wrap_RecursiveSafeSubtractorTransverseEnergy_jet_alg, METH_O, NULL},
	 { "RecursiveSafeSubtractorTransverseEnergy_weight_sums", _wrap_RecursiveSafeSubtractorTransverseEnergy_weight_sums, METH_O, NULL},
	 { "RecursiveSafeSubtractorTransverseEnergy_total_weight", _wrap_RecursiveSafeSubtractorTransverseEnergy_total_weight, METH_O, NULL},
	 { "RecursiveSafeSubtractorTransverseEnergy_reclustered_jet", _wrap_RecursiveSafeSubtractorTransverseEnergy_reclustered_jet, METH_O, NULL},
	 { "RecursiveSafeSubtractorTransverseEnergy___str__", _wrap_RecursiveSafeSubtractorTransverseEnergy___str__, METH_O, NULL},
	 { "RecursiveSafeSubtractorTransverseEnergy___repr__", _wrap_RecursiveSafeSubtractorTransverseEnergy___repr__, METH_O, NULL},
	 { "RecursiveSafeSubtractorTransverseEnergy___call__", _wrap_RecursiveSafeSubtractorTransverseEnergy___call__, METH_VARARGS, NULL},
	 { "RecursiveSafeSubtractorTransverseEnergy_apply", (PyCFunction)(void(*)(void))_wrap_RecursiveSafeSubtractorTransverseEnergy_apply, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "delete_RecursiveSafeSubtractorTransverseEnergy", _wrap_delete_RecursiveSafeSubtractorTransverseEnergy, METH_O, NULL},
	 { "RecursiveSafeSubtractorTransverseEnergy_swigregister", RecursiveSafeSubtractorTransverseEnergy_swigregister, METH_O, NULL},
	 { "RecursiveSafeSubtractorTransverseEnergy_swiginit", RecursiveSafeSubtractorTransverseEnergy_swiginit, METH_VARARGS, NULL},
	 { "new_RecursiveSafeSubtractorEnergy", (PyCFunction)(void(*)(void))_wrap_new_RecursiveSafeSubtractorEnergy, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "RecursiveSafeSubtractorEnergy_description", _wrap_RecursiveSafeSubtractorEnergy_description, METH_O, NULL},
	 { "RecursiveSafeSubtractorEnergy_default_z", _wrap_RecursiveSafeSubtractorEnergy_default_z, METH_O, NULL},
	 { "RecursiveSafeSubtractorEnergy_default_f", _wrap_RecursiveSafeSubtractorEnergy_default_f, METH_O, NULL},
	 { "RecursiveSafeSubtractorEnergy_jet_alg", _wrap_RecursiveSafeSubtractorEnergy_jet_alg, METH_O, NULL},
	 { "RecursiveSafeSubtractorEnergy_weight_sums", _wrap_RecursiveSafeSubtractorEnergy_weight_sums, METH_O, NULL},
	 { "RecursiveSafeSubtractorEnergy_total_weight", _wrap_RecursiveSafeSubtractorEnergy_total_weight, METH_O, NULL},
	 { "RecursiveSafeSubtractorEnergy_reclustered_jet", _wrap_RecursiveSafeSubtractorEnergy_reclustered_jet, METH_O, NULL},
	 { "RecursiveSafeSubtractorEnergy___str__", _wrap_RecursiveSafeSubtractorEnergy___str__, METH_O, NULL},
	 { "RecursiveSafeSubtractorEnergy___repr__", _wrap_RecursiveSafeSubtractorEnergy___repr__, METH_O, NULL},
	 { "RecursiveSafeSubtractorEnergy___call__", _wrap_RecursiveSafeSubtractorEnergy___call__, METH_VARARGS, NULL},
	 { "RecursiveSafeSubtractorEnergy_apply", (PyCFunction)(void(*)(void))_wrap_RecursiveSafeSubtractorEnergy_apply, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "delete_RecursiveSafeSubtractorEnergy", _wrap_delete_RecursiveSafeSubtractorEnergy, METH_O, NULL},
	 { "RecursiveSafeSubtractorEnergy_swigregister", RecursiveSafeSubtractorEnergy_swigregister, METH_O, NULL},
	 { "RecursiveSafeSubtractorEnergy_swiginit", RecursiveSafeSubtractorEnergy_swiginit, METH_VARARGS, NULL},
	 { "new_RecursiveSafeSubtractorMomentum", (PyCFunction)(void(*)(void))_wrap_new_RecursiveSafeSubtractorMomentum, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "RecursiveSafeSubtractorMomentum_description", _wrap_RecursiveSafeSubtractorMomentum_description, METH_O, NULL},
	 { "RecursiveSafeSubtractorMomentum_default_z", _wrap_RecursiveSafeSubtractorMomentum_default_z, METH_O, NULL},
	 { "RecursiveSafeSubtractorMomentum_default_f", _wrap_RecursiveSafeSubtractorMomentum_default_f, METH_O, NULL},
	 { "RecursiveSafeSubtractorMomentum_jet_alg", _wrap_RecursiveSafeSubtractorMomentum_jet_alg, METH_O, NULL},
	 { "RecursiveSafeSubtractorMomentum_weight_sums", _wrap_RecursiveSafeSubtractorMomentum_weight_sums, METH_O, NULL},
	 { "RecursiveSafeSubtractorMomentum_total_weight", _wrap_RecursiveSafeSubtractorMomentum_total_weight, METH_O, NULL},
	 { "RecursiveSafeSubtractorMomentum_reclustered_jet", _wrap_RecursiveSafeSubtractorMomentum_reclustered_jet, METH_O, NULL},
	 { "RecursiveSafeSubtractorMomentum___str__", _wrap_RecursiveSafeSubtractorMomentum___str__, METH_O, NULL},
	 { "RecursiveSafeSubtractorMomentum___repr__", _wrap_RecursiveSafeSubtractorMomentum___repr__, METH_O, NULL},
	 { "RecursiveSafeSubtractorMomentum___call__", _wrap_RecursiveSafeSubtractorMomentum___call__, METH_VARARGS, NULL},
	 { "RecursiveSafeSubtractorMomentum_apply", (PyCFunction)(void(*)(void))_wrap_RecursiveSafeSubtractorMomentum_apply, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "delete_RecursiveSafeSubtractorMomentum", _wrap_delete_RecursiveSafeSubtractorMomentum, METH_O, NULL},
	 { "RecursiveSafeSubtractorMomentum_swigregister", RecursiveSafeSubtractorMomentum_swigregister, METH_O, NULL},
	 { "RecursiveSafeSubtractorMomentum_swiginit", RecursiveSafeSubtractorMomentum_swiginit, METH_VARARGS, NULL},
	 { NULL, NULL, 0, NULL }
};

static PyMethodDef SwigMethods_proxydocs[] = {
	 { "SWIG_PyInstanceMethod_New", SWIG_PyInstanceMethod_New, METH_O, NULL},
	 { "SWIG_PyStaticMethod_New", SWIG_PyStaticMethod_New, METH_O, NULL},
	 { "delete_SwigPyIterator", _wrap_delete_SwigPyIterator, METH_O, NULL},
	 { "SwigPyIterator_value", _wrap_SwigPyIterator_value, METH_O, NULL},
	 { "SwigPyIterator_incr", (PyCFunction)(void(*)(void))_wrap_SwigPyIterator_incr, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "SwigPyIterator_decr", (PyCFunction)(void(*)(void))_wrap_SwigPyIterator_decr, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "SwigPyIterator_distance", (PyCFunction)(void(*)(void))_wrap_SwigPyIterator_distance, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "SwigPyIterator_equal", (PyCFunction)(void(*)(void))_wrap_SwigPyIterator_equal, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "SwigPyIterator_copy", _wrap_SwigPyIterator_copy, METH_O, NULL},
	 { "SwigPyIterator_next", _wrap_SwigPyIterator_next, METH_O, NULL},
	 { "SwigPyIterator___next__", _wrap_SwigPyIterator___next__, METH_O, NULL},
	 { "SwigPyIterator_previous", _wrap_SwigPyIterator_previous, METH_O, NULL},
	 { "SwigPyIterator_advance", (PyCFunction)(void(*)(void))_wrap_SwigPyIterator_advance, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "SwigPyIterator___eq__", (PyCFunction)(void(*)(void))_wrap_SwigPyIterator___eq__, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "SwigPyIterator___ne__", (PyCFunction)(void(*)(void))_wrap_SwigPyIterator___ne__, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "SwigPyIterator___iadd__", (PyCFunction)(void(*)(void))_wrap_SwigPyIterator___iadd__, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "SwigPyIterator___isub__", (PyCFunction)(void(*)(void))_wrap_SwigPyIterator___isub__, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "SwigPyIterator___add__", (PyCFunction)(void(*)(void))_wrap_SwigPyIterator___add__, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "SwigPyIterator___sub__", _wrap_SwigPyIterator___sub__, METH_VARARGS, NULL},
	 { "SwigPyIterator_swigregister", SwigPyIterator_swigregister, METH_O, NULL},
	 { "new_pairDouble", _wrap_new_pairDouble, METH_VARARGS, NULL},
	 { "pairDouble_first_set", _wrap_pairDouble_first_set, METH_VARARGS, NULL},
	 { "pairDouble_first_get", _wrap_pairDouble_first_get, METH_O, NULL},
	 { "pairDouble_second_set", _wrap_pairDouble_second_set, METH_VARARGS, NULL},
	 { "pairDouble_second_get", _wrap_pairDouble_second_get, METH_O, NULL},
	 { "delete_pairDouble", _wrap_delete_pairDouble, METH_O, NULL},
	 { "pairDouble_swigregister", pairDouble_swigregister, METH_O, NULL},
	 { "pairDouble_swiginit", pairDouble_swiginit, METH_VARARGS, NULL},
	 { "new_pairPairDouble", _wrap_new_pairPairDouble, METH_VARARGS, NULL},
	 { "pairPairDouble_first_set", _wrap_pairPairDouble_first_set, METH_VARARGS, NULL},
	 { "pairPairDouble_first_get", _wrap_pairPairDouble_first_get, METH_O, NULL},
	 { "pairPairDouble_second_set", _wrap_pairPairDouble_second_set, METH_VARARGS, NULL},
	 { "pairPairDouble_second_get", _wrap_pairPairDouble_second_get, METH_O, NULL},
	 { "delete_pairPairDouble", _wrap_delete_pairPairDouble, METH_O, NULL},
	 { "pairPairDouble_swigregister", pairPairDouble_swigregister, METH_O, NULL},
	 { "pairPairDouble_swiginit", pairPairDouble_swiginit, METH_VARARGS, NULL},
	 { "vectorVectorDouble_iterator", _wrap_vectorVectorDouble_iterator, METH_O, NULL},
	 { "vectorVectorDouble___nonzero__", _wrap_vectorVectorDouble___nonzero__, METH_O, NULL},
	 { "vectorVectorDouble___bool__", _wrap_vectorVectorDouble___bool__, METH_O, NULL},
	 { "vectorVectorDouble___len__", _wrap_vectorVectorDouble___len__, METH_O, NULL},
	 { "vectorVectorDouble___getslice__", (PyCFunction)(void(*)(void))_wrap_vectorVectorDouble___getslice__, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorVectorDouble___setslice__", _wrap_vectorVectorDouble___setslice__, METH_VARARGS, NULL},
	 { "vectorVectorDouble___delslice__", (PyCFunction)(void(*)(void))_wrap_vectorVectorDouble___delslice__, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorVectorDouble___delitem__", _wrap_vectorVectorDouble___delitem__, METH_VARARGS, NULL},
	 { "vectorVectorDouble___getitem__", _wrap_vectorVectorDouble___getitem__, METH_VARARGS, NULL},
	 { "vectorVectorDouble___setitem__", _wrap_vectorVectorDouble___setitem__, METH_VARARGS, NULL},
	 { "vectorVectorDouble_pop", _wrap_vectorVectorDouble_pop, METH_O, NULL},
	 { "vectorVectorDouble_append", (PyCFunction)(void(*)(void))_wrap_vectorVectorDouble_append, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorVectorDouble_empty", _wrap_vectorVectorDouble_empty, METH_O, NULL},
	 { "vectorVectorDouble_size", _wrap_vectorVectorDouble_size, METH_O, NULL},
	 { "vectorVectorDouble_swap", (PyCFunction)(void(*)(void))_wrap_vectorVectorDouble_swap, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorVectorDouble_begin", _wrap_vectorVectorDouble_begin, METH_O, NULL},
	 { "vectorVectorDouble_end", _wrap_vectorVectorDouble_end, METH_O, NULL},
	 { "vectorVectorDouble_rbegin", _wrap_vectorVectorDouble_rbegin, METH_O, NULL},
	 { "vectorVectorDouble_rend", _wrap_vectorVectorDouble_rend, METH_O, NULL},
	 { "vectorVectorDouble_clear", _wrap_vectorVectorDouble_clear, METH_O, NULL},
	 { "vectorVectorDouble_get_allocator", _wrap_vectorVectorDouble_get_allocator, METH_O, NULL},
	 { "vectorVectorDouble_pop_back", _wrap_vectorVectorDouble_pop_back, METH_O, NULL},
	 { "vectorVectorDouble_erase", _wrap_vectorVectorDouble_erase, METH_VARARGS, NULL},
	 { "new_vectorVectorDouble", _wrap_new_vectorVectorDouble, METH_VARARGS, NULL},
	 { "vectorVectorDouble_push_back", (PyCFunction)(void(*)(void))_wrap_vectorVectorDouble_push_back, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorVectorDouble_front", _wrap_vectorVectorDouble_front, METH_O, NULL},
	 { "vectorVectorDouble_back", _wrap_vectorVectorDouble_back, METH_O, NULL},
	 { "vectorVectorDouble_assign", (PyCFunction)(void(*)(void))_wrap_vectorVectorDouble_assign, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorVectorDouble_resize", _wrap_vectorVectorDouble_resize, METH_VARARGS, NULL},
	 { "vectorVectorDouble_insert", _wrap_vectorVectorDouble_insert, METH_VARARGS, NULL},
	 { "vectorVectorDouble_reserve", (PyCFunction)(void(*)(void))_wrap_vectorVectorDouble_reserve, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorVectorDouble_capacity", _wrap_vectorVectorDouble_capacity, METH_O, NULL},
	 { "delete_vectorVectorDouble", _wrap_delete_vectorVectorDouble, METH_O, NULL},
	 { "vectorVectorDouble_swigregister", vectorVectorDouble_swigregister, METH_O, NULL},
	 { "vectorVectorDouble_swiginit", vectorVectorDouble_swiginit, METH_VARARGS, NULL},
	 { "vectorSubtractionHistory_iterator", _wrap_vectorSubtractionHistory_iterator, METH_O, NULL},
	 { "vectorSubtractionHistory___nonzero__", _wrap_vectorSubtractionHistory___nonzero__, METH_O, NULL},
	 { "vectorSubtractionHistory___bool__", _wrap_vectorSubtractionHistory___bool__, METH_O, NULL},
	 { "vectorSubtractionHistory___len__", _wrap_vectorSubtractionHistory___len__, METH_O, NULL},
	 { "vectorSubtractionHistory___getslice__", (PyCFunction)(void(*)(void))_wrap_vectorSubtractionHistory___getslice__, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorSubtractionHistory___setslice__", _wrap_vectorSubtractionHistory___setslice__, METH_VARARGS, NULL},
	 { "vectorSubtractionHistory___delslice__", (PyCFunction)(void(*)(void))_wrap_vectorSubtractionHistory___delslice__, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorSubtractionHistory___delitem__", _wrap_vectorSubtractionHistory___delitem__, METH_VARARGS, NULL},
	 { "vectorSubtractionHistory___getitem__", _wrap_vectorSubtractionHistory___getitem__, METH_VARARGS, NULL},
	 { "vectorSubtractionHistory___setitem__", _wrap_vectorSubtractionHistory___setitem__, METH_VARARGS, NULL},
	 { "vectorSubtractionHistory_pop", _wrap_vectorSubtractionHistory_pop, METH_O, NULL},
	 { "vectorSubtractionHistory_append", (PyCFunction)(void(*)(void))_wrap_vectorSubtractionHistory_append, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorSubtractionHistory_empty", _wrap_vectorSubtractionHistory_empty, METH_O, NULL},
	 { "vectorSubtractionHistory_size", _wrap_vectorSubtractionHistory_size, METH_O, NULL},
	 { "vectorSubtractionHistory_swap", (PyCFunction)(void(*)(void))_wrap_vectorSubtractionHistory_swap, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorSubtractionHistory_begin", _wrap_vectorSubtractionHistory_begin, METH_O, NULL},
	 { "vectorSubtractionHistory_end", _wrap_vectorSubtractionHistory_end, METH_O, NULL},
	 { "vectorSubtractionHistory_rbegin", _wrap_vectorSubtractionHistory_rbegin, METH_O, NULL},
	 { "vectorSubtractionHistory_rend", _wrap_vectorSubtractionHistory_rend, METH_O, NULL},
	 { "vectorSubtractionHistory_clear", _wrap_vectorSubtractionHistory_clear, METH_O, NULL},
	 { "vectorSubtractionHistory_get_allocator", _wrap_vectorSubtractionHistory_get_allocator, METH_O, NULL},
	 { "vectorSubtractionHistory_pop_back", _wrap_vectorSubtractionHistory_pop_back, METH_O, NULL},
	 { "vectorSubtractionHistory_erase", _wrap_vectorSubtractionHistory_erase, METH_VARARGS, NULL},
	 { "new_vectorSubtractionHistory", _wrap_new_vectorSubtractionHistory, METH_VARARGS, NULL},
	 { "vectorSubtractionHistory_push_back", (PyCFunction)(void(*)(void))_wrap_vectorSubtractionHistory_push_back, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorSubtractionHistory_front", _wrap_vectorSubtractionHistory_front, METH_O, NULL},
	 { "vectorSubtractionHistory_back", _wrap_vectorSubtractionHistory_back, METH_O, NULL},
	 { "vectorSubtractionHistory_assign", (PyCFunction)(void(*)(void))_wrap_vectorSubtractionHistory_assign, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorSubtractionHistory_resize", _wrap_vectorSubtractionHistory_resize, METH_VARARGS, NULL},
	 { "vectorSubtractionHistory_insert", _wrap_vectorSubtractionHistory_insert, METH_VARARGS, NULL},
	 { "vectorSubtractionHistory_reserve", (PyCFunction)(void(*)(void))_wrap_vectorSubtractionHistory_reserve, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorSubtractionHistory_capacity", _wrap_vectorSubtractionHistory_capacity, METH_O, NULL},
	 { "delete_vectorSubtractionHistory", _wrap_delete_vectorSubtractionHistory, METH_O, NULL},
	 { "vectorSubtractionHistory_swigregister", vectorSubtractionHistory_swigregister, METH_O, NULL},
	 { "vectorSubtractionHistory_swiginit", vectorSubtractionHistory_swiginit, METH_VARARGS, NULL},
	 { "vectorVectorPseudoJet_iterator", _wrap_vectorVectorPseudoJet_iterator, METH_O, NULL},
	 { "vectorVectorPseudoJet___nonzero__", _wrap_vectorVectorPseudoJet___nonzero__, METH_O, NULL},
	 { "vectorVectorPseudoJet___bool__", _wrap_vectorVectorPseudoJet___bool__, METH_O, NULL},
	 { "vectorVectorPseudoJet___len__", _wrap_vectorVectorPseudoJet___len__, METH_O, NULL},
	 { "vectorVectorPseudoJet___getslice__", (PyCFunction)(void(*)(void))_wrap_vectorVectorPseudoJet___getslice__, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorVectorPseudoJet___setslice__", _wrap_vectorVectorPseudoJet___setslice__, METH_VARARGS, NULL},
	 { "vectorVectorPseudoJet___delslice__", (PyCFunction)(void(*)(void))_wrap_vectorVectorPseudoJet___delslice__, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorVectorPseudoJet___delitem__", _wrap_vectorVectorPseudoJet___delitem__, METH_VARARGS, NULL},
	 { "vectorVectorPseudoJet___getitem__", _wrap_vectorVectorPseudoJet___getitem__, METH_VARARGS, NULL},
	 { "vectorVectorPseudoJet___setitem__", _wrap_vectorVectorPseudoJet___setitem__, METH_VARARGS, NULL},
	 { "vectorVectorPseudoJet_pop", _wrap_vectorVectorPseudoJet_pop, METH_O, NULL},
	 { "vectorVectorPseudoJet_append", (PyCFunction)(void(*)(void))_wrap_vectorVectorPseudoJet_append, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorVectorPseudoJet_empty", _wrap_vectorVectorPseudoJet_empty, METH_O, NULL},
	 { "vectorVectorPseudoJet_size", _wrap_vectorVectorPseudoJet_size, METH_O, NULL},
	 { "vectorVectorPseudoJet_swap", (PyCFunction)(void(*)(void))_wrap_vectorVectorPseudoJet_swap, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorVectorPseudoJet_begin", _wrap_vectorVectorPseudoJet_begin, METH_O, NULL},
	 { "vectorVectorPseudoJet_end", _wrap_vectorVectorPseudoJet_end, METH_O, NULL},
	 { "vectorVectorPseudoJet_rbegin", _wrap_vectorVectorPseudoJet_rbegin, METH_O, NULL},
	 { "vectorVectorPseudoJet_rend", _wrap_vectorVectorPseudoJet_rend, METH_O, NULL},
	 { "vectorVectorPseudoJet_clear", _wrap_vectorVectorPseudoJet_clear, METH_O, NULL},
	 { "vectorVectorPseudoJet_get_allocator", _wrap_vectorVectorPseudoJet_get_allocator, METH_O, NULL},
	 { "vectorVectorPseudoJet_pop_back", _wrap_vectorVectorPseudoJet_pop_back, METH_O, NULL},
	 { "vectorVectorPseudoJet_erase", _wrap_vectorVectorPseudoJet_erase, METH_VARARGS, NULL},
	 { "new_vectorVectorPseudoJet", _wrap_new_vectorVectorPseudoJet, METH_VARARGS, NULL},
	 { "vectorVectorPseudoJet_push_back", (PyCFunction)(void(*)(void))_wrap_vectorVectorPseudoJet_push_back, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorVectorPseudoJet_front", _wrap_vectorVectorPseudoJet_front, METH_O, NULL},
	 { "vectorVectorPseudoJet_back", _wrap_vectorVectorPseudoJet_back, METH_O, NULL},
	 { "vectorVectorPseudoJet_assign", (PyCFunction)(void(*)(void))_wrap_vectorVectorPseudoJet_assign, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorVectorPseudoJet_resize", _wrap_vectorVectorPseudoJet_resize, METH_VARARGS, NULL},
	 { "vectorVectorPseudoJet_insert", _wrap_vectorVectorPseudoJet_insert, METH_VARARGS, NULL},
	 { "vectorVectorPseudoJet_reserve", (PyCFunction)(void(*)(void))_wrap_vectorVectorPseudoJet_reserve, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorVectorPseudoJet_capacity", _wrap_vectorVectorPseudoJet_capacity, METH_O, NULL},
	 { "delete_vectorVectorPseudoJet", _wrap_delete_vectorVectorPseudoJet, METH_O, NULL},
	 { "vectorVectorPseudoJet_swigregister", vectorVectorPseudoJet_swigregister, METH_O, NULL},
	 { "vectorVectorPseudoJet_swiginit", vectorVectorPseudoJet_swiginit, METH_VARARGS, NULL},
	 { "vectorPairDouble_iterator", _wrap_vectorPairDouble_iterator, METH_O, NULL},
	 { "vectorPairDouble___nonzero__", _wrap_vectorPairDouble___nonzero__, METH_O, NULL},
	 { "vectorPairDouble___bool__", _wrap_vectorPairDouble___bool__, METH_O, NULL},
	 { "vectorPairDouble___len__", _wrap_vectorPairDouble___len__, METH_O, NULL},
	 { "vectorPairDouble___getslice__", (PyCFunction)(void(*)(void))_wrap_vectorPairDouble___getslice__, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorPairDouble___setslice__", _wrap_vectorPairDouble___setslice__, METH_VARARGS, NULL},
	 { "vectorPairDouble___delslice__", (PyCFunction)(void(*)(void))_wrap_vectorPairDouble___delslice__, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorPairDouble___delitem__", _wrap_vectorPairDouble___delitem__, METH_VARARGS, NULL},
	 { "vectorPairDouble___getitem__", _wrap_vectorPairDouble___getitem__, METH_VARARGS, NULL},
	 { "vectorPairDouble___setitem__", _wrap_vectorPairDouble___setitem__, METH_VARARGS, NULL},
	 { "vectorPairDouble_pop", _wrap_vectorPairDouble_pop, METH_O, NULL},
	 { "vectorPairDouble_append", (PyCFunction)(void(*)(void))_wrap_vectorPairDouble_append, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorPairDouble_empty", _wrap_vectorPairDouble_empty, METH_O, NULL},
	 { "vectorPairDouble_size", _wrap_vectorPairDouble_size, METH_O, NULL},
	 { "vectorPairDouble_swap", (PyCFunction)(void(*)(void))_wrap_vectorPairDouble_swap, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorPairDouble_begin", _wrap_vectorPairDouble_begin, METH_O, NULL},
	 { "vectorPairDouble_end", _wrap_vectorPairDouble_end, METH_O, NULL},
	 { "vectorPairDouble_rbegin", _wrap_vectorPairDouble_rbegin, METH_O, NULL},
	 { "vectorPairDouble_rend", _wrap_vectorPairDouble_rend, METH_O, NULL},
	 { "vectorPairDouble_clear", _wrap_vectorPairDouble_clear, METH_O, NULL},
	 { "vectorPairDouble_get_allocator", _wrap_vectorPairDouble_get_allocator, METH_O, NULL},
	 { "vectorPairDouble_pop_back", _wrap_vectorPairDouble_pop_back, METH_O, NULL},
	 { "vectorPairDouble_erase", _wrap_vectorPairDouble_erase, METH_VARARGS, NULL},
	 { "new_vectorPairDouble", _wrap_new_vectorPairDouble, METH_VARARGS, NULL},
	 { "vectorPairDouble_push_back", (PyCFunction)(void(*)(void))_wrap_vectorPairDouble_push_back, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorPairDouble_front", _wrap_vectorPairDouble_front, METH_O, NULL},
	 { "vectorPairDouble_back", _wrap_vectorPairDouble_back, METH_O, NULL},
	 { "vectorPairDouble_assign", (PyCFunction)(void(*)(void))_wrap_vectorPairDouble_assign, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorPairDouble_resize", _wrap_vectorPairDouble_resize, METH_VARARGS, NULL},
	 { "vectorPairDouble_insert", _wrap_vectorPairDouble_insert, METH_VARARGS, NULL},
	 { "vectorPairDouble_reserve", (PyCFunction)(void(*)(void))_wrap_vectorPairDouble_reserve, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorPairDouble_capacity", _wrap_vectorPairDouble_capacity, METH_O, NULL},
	 { "delete_vectorPairDouble", _wrap_delete_vectorPairDouble, METH_O, NULL},
	 { "vectorPairDouble_swigregister", vectorPairDouble_swigregister, METH_O, NULL},
	 { "vectorPairDouble_swiginit", vectorPairDouble_swiginit, METH_VARARGS, NULL},
	 { "vectorInt_iterator", _wrap_vectorInt_iterator, METH_O, NULL},
	 { "vectorInt___nonzero__", _wrap_vectorInt___nonzero__, METH_O, NULL},
	 { "vectorInt___bool__", _wrap_vectorInt___bool__, METH_O, NULL},
	 { "vectorInt___len__", _wrap_vectorInt___len__, METH_O, NULL},
	 { "vectorInt___getslice__", (PyCFunction)(void(*)(void))_wrap_vectorInt___getslice__, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorInt___setslice__", _wrap_vectorInt___setslice__, METH_VARARGS, NULL},
	 { "vectorInt___delslice__", (PyCFunction)(void(*)(void))_wrap_vectorInt___delslice__, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorInt___delitem__", _wrap_vectorInt___delitem__, METH_VARARGS, NULL},
	 { "vectorInt___getitem__", _wrap_vectorInt___getitem__, METH_VARARGS, NULL},
	 { "vectorInt___setitem__", _wrap_vectorInt___setitem__, METH_VARARGS, NULL},
	 { "vectorInt_pop", _wrap_vectorInt_pop, METH_O, NULL},
	 { "vectorInt_append", (PyCFunction)(void(*)(void))_wrap_vectorInt_append, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorInt_empty", _wrap_vectorInt_empty, METH_O, NULL},
	 { "vectorInt_size", _wrap_vectorInt_size, METH_O, NULL},
	 { "vectorInt_swap", (PyCFunction)(void(*)(void))_wrap_vectorInt_swap, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorInt_begin", _wrap_vectorInt_begin, METH_O, NULL},
	 { "vectorInt_end", _wrap_vectorInt_end, METH_O, NULL},
	 { "vectorInt_rbegin", _wrap_vectorInt_rbegin, METH_O, NULL},
	 { "vectorInt_rend", _wrap_vectorInt_rend, METH_O, NULL},
	 { "vectorInt_clear", _wrap_vectorInt_clear, METH_O, NULL},
	 { "vectorInt_get_allocator", _wrap_vectorInt_get_allocator, METH_O, NULL},
	 { "vectorInt_pop_back", _wrap_vectorInt_pop_back, METH_O, NULL},
	 { "vectorInt_erase", _wrap_vectorInt_erase, METH_VARARGS, NULL},
	 { "new_vectorInt", _wrap_new_vectorInt, METH_VARARGS, NULL},
	 { "vectorInt_push_back", (PyCFunction)(void(*)(void))_wrap_vectorInt_push_back, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorInt_front", _wrap_vectorInt_front, METH_O, NULL},
	 { "vectorInt_back", _wrap_vectorInt_back, METH_O, NULL},
	 { "vectorInt_assign", (PyCFunction)(void(*)(void))_wrap_vectorInt_assign, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorInt_resize", _wrap_vectorInt_resize, METH_VARARGS, NULL},
	 { "vectorInt_insert", _wrap_vectorInt_insert, METH_VARARGS, NULL},
	 { "vectorInt_reserve", (PyCFunction)(void(*)(void))_wrap_vectorInt_reserve, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "vectorInt_capacity", _wrap_vectorInt_capacity, METH_O, NULL},
	 { "delete_vectorInt", _wrap_delete_vectorInt, METH_O, NULL},
	 { "vectorInt_swigregister", vectorInt_swigregister, METH_O, NULL},
	 { "vectorInt_swiginit", vectorInt_swiginit, METH_VARARGS, NULL},
	 { "phi_fix", (PyCFunction)(void(*)(void))_wrap_phi_fix, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "delete_DynamicVoronoiBase", _wrap_delete_DynamicVoronoiBase, METH_O, NULL},
	 { "DynamicVoronoiBase_description", _wrap_DynamicVoronoiBase_description, METH_O, NULL},
	 { "DynamicVoronoiBase_set_subtraction_type", (PyCFunction)(void(*)(void))_wrap_DynamicVoronoiBase_set_subtraction_type, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "DynamicVoronoiBase_set_R", (PyCFunction)(void(*)(void))_wrap_DynamicVoronoiBase_set_R, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "DynamicVoronoiBase_subtraction_type", _wrap_DynamicVoronoiBase_subtraction_type, METH_O, NULL},
	 { "DynamicVoronoiBase_track_emds", _wrap_DynamicVoronoiBase_track_emds, METH_O, NULL},
	 { "DynamicVoronoiBase_R", _wrap_DynamicVoronoiBase_R, METH_O, NULL},
	 { "DynamicVoronoiBase___call__", _wrap_DynamicVoronoiBase___call__, METH_VARARGS, NULL},
	 { "DynamicVoronoiBase_valid_point", _wrap_DynamicVoronoiBase_valid_point, METH_VARARGS, NULL},
	 { "DynamicVoronoiBase_number_of_primary_delaunay_vertices", _wrap_DynamicVoronoiBase_number_of_primary_delaunay_vertices, METH_O, NULL},
	 { "DynamicVoronoiBase_total_area", _wrap_DynamicVoronoiBase_total_area, METH_O, NULL},
	 { "DynamicVoronoiBase_areas", _wrap_DynamicVoronoiBase_areas, METH_O, NULL},
	 { "DynamicVoronoiBase_area", (PyCFunction)(void(*)(void))_wrap_DynamicVoronoiBase_area, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "DynamicVoronoiBase_coincidences", _wrap_DynamicVoronoiBase_coincidences, METH_O, NULL},
	 { "DynamicVoronoiBase_emd_density", (PyCFunction)(void(*)(void))_wrap_DynamicVoronoiBase_emd_density, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "DynamicVoronoiBase_neighbors", (PyCFunction)(void(*)(void))_wrap_DynamicVoronoiBase_neighbors, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "DynamicVoronoiBase_vertex_is_primary_and_active", (PyCFunction)(void(*)(void))_wrap_DynamicVoronoiBase_vertex_is_primary_and_active, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "DynamicVoronoiBase_swigregister", DynamicVoronoiBase_swigregister, METH_O, NULL},
	 { "new_DynamicVoronoiCylinder", _wrap_new_DynamicVoronoiCylinder, METH_VARARGS, NULL},
	 { "DynamicVoronoiCylinder_primary_region", _wrap_DynamicVoronoiCylinder_primary_region, METH_O, NULL},
	 { "DynamicVoronoiCylinder_valid_point", (PyCFunction)(void(*)(void))_wrap_DynamicVoronoiCylinder_valid_point, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "DynamicVoronoiCylinder_neighbors", (PyCFunction)(void(*)(void))_wrap_DynamicVoronoiCylinder_neighbors, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "DynamicVoronoiCylinder_remove", (PyCFunction)(void(*)(void))_wrap_DynamicVoronoiCylinder_remove, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "delete_DynamicVoronoiCylinder", _wrap_delete_DynamicVoronoiCylinder, METH_O, NULL},
	 { "DynamicVoronoiCylinder_swigregister", DynamicVoronoiCylinder_swigregister, METH_O, NULL},
	 { "DynamicVoronoiCylinder_swiginit", DynamicVoronoiCylinder_swiginit, METH_VARARGS, NULL},
	 { "new_DynamicVoronoiDisk", _wrap_new_DynamicVoronoiDisk, METH_VARARGS, NULL},
	 { "DynamicVoronoiDisk_set_R", (PyCFunction)(void(*)(void))_wrap_DynamicVoronoiDisk_set_R, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "DynamicVoronoiDisk_set_center", (PyCFunction)(void(*)(void))_wrap_DynamicVoronoiDisk_set_center, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "DynamicVoronoiDisk_x0", _wrap_DynamicVoronoiDisk_x0, METH_O, NULL},
	 { "DynamicVoronoiDisk_y0", _wrap_DynamicVoronoiDisk_y0, METH_O, NULL},
	 { "DynamicVoronoiDisk_valid_point", (PyCFunction)(void(*)(void))_wrap_DynamicVoronoiDisk_valid_point, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "DynamicVoronoiDisk_remove", (PyCFunction)(void(*)(void))_wrap_DynamicVoronoiDisk_remove, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "delete_DynamicVoronoiDisk", _wrap_delete_DynamicVoronoiDisk, METH_O, NULL},
	 { "DynamicVoronoiDisk_swigregister", DynamicVoronoiDisk_swigregister, METH_O, NULL},
	 { "DynamicVoronoiDisk_swiginit", DynamicVoronoiDisk_swiginit, METH_VARARGS, NULL},
	 { "new_SubtractionHistory", _wrap_new_SubtractionHistory, METH_VARARGS, NULL},
	 { "SubtractionHistory_areas", _wrap_SubtractionHistory_areas, METH_VARARGS, NULL},
	 { "SubtractionHistory_zpt", _wrap_SubtractionHistory_zpt, METH_O, NULL},
	 { "SubtractionHistory_zemd", _wrap_SubtractionHistory_zemd, METH_O, NULL},
	 { "SubtractionHistory_nvalid", _wrap_SubtractionHistory_nvalid, METH_O, NULL},
	 { "SubtractionHistory_emdtot", _wrap_SubtractionHistory_emdtot, METH_VARARGS, NULL},
	 { "SubtractionHistory_nremoved", _wrap_SubtractionHistory_nremoved, METH_VARARGS, NULL},
	 { "delete_SubtractionHistory", _wrap_delete_SubtractionHistory, METH_O, NULL},
	 { "SubtractionHistory_swigregister", SubtractionHistory_swigregister, METH_O, NULL},
	 { "SubtractionHistory_swiginit", SubtractionHistory_swiginit, METH_VARARGS, NULL},
	 { "new_GhostGridBase", _wrap_new_GhostGridBase, METH_VARARGS, NULL},
	 { "delete_GhostGridBase", _wrap_delete_GhostGridBase, METH_O, NULL},
	 { "GhostGridBase_description", _wrap_GhostGridBase_description, METH_O, NULL},
	 { "GhostGridBase_drap", _wrap_GhostGridBase_drap, METH_O, NULL},
	 { "GhostGridBase_dphi", _wrap_GhostGridBase_dphi, METH_O, NULL},
	 { "GhostGridBase_nrap", _wrap_GhostGridBase_nrap, METH_O, NULL},
	 { "GhostGridBase_nphi", _wrap_GhostGridBase_nphi, METH_O, NULL},
	 { "GhostGridBase_points", _wrap_GhostGridBase_points, METH_O, NULL},
	 { "GhostGridBase_ghosts", _wrap_GhostGridBase_ghosts, METH_O, NULL},
	 { "GhostGridBase_nghosts", _wrap_GhostGridBase_nghosts, METH_O, NULL},
	 { "GhostGridBase_swigregister", GhostGridBase_swigregister, METH_O, NULL},
	 { "GhostGridBase_swiginit", GhostGridBase_swiginit, METH_VARARGS, NULL},
	 { "new_GhostGridRectangle", _wrap_new_GhostGridRectangle, METH_VARARGS, NULL},
	 { "GhostGridRectangle_description", _wrap_GhostGridRectangle_description, METH_O, NULL},
	 { "GhostGridRectangle_region", _wrap_GhostGridRectangle_region, METH_O, NULL},
	 { "GhostGridRectangle___str__", _wrap_GhostGridRectangle___str__, METH_O, NULL},
	 { "GhostGridRectangle___repr__", _wrap_GhostGridRectangle___repr__, METH_O, NULL},
	 { "delete_GhostGridRectangle", _wrap_delete_GhostGridRectangle, METH_O, NULL},
	 { "GhostGridRectangle_swigregister", GhostGridRectangle_swigregister, METH_O, NULL},
	 { "GhostGridRectangle_swiginit", GhostGridRectangle_swiginit, METH_VARARGS, NULL},
	 { "new_GhostGridDisk", _wrap_new_GhostGridDisk, METH_VARARGS, NULL},
	 { "GhostGridDisk_description", _wrap_GhostGridDisk_description, METH_O, NULL},
	 { "GhostGridDisk_R", _wrap_GhostGridDisk_R, METH_O, NULL},
	 { "GhostGridDisk___str__", _wrap_GhostGridDisk___str__, METH_O, NULL},
	 { "GhostGridDisk___repr__", _wrap_GhostGridDisk___repr__, METH_O, NULL},
	 { "delete_GhostGridDisk", _wrap_delete_GhostGridDisk, METH_O, NULL},
	 { "GhostGridDisk_swigregister", GhostGridDisk_swigregister, METH_O, NULL},
	 { "GhostGridDisk_swiginit", GhostGridDisk_swiginit, METH_VARARGS, NULL},
	 { "new_IteratedVoronoiSubtractorDiskBase", _wrap_new_IteratedVoronoiSubtractorDiskBase, METH_NOARGS, NULL},
	 { "delete_IteratedVoronoiSubtractorDiskBase", _wrap_delete_IteratedVoronoiSubtractorDiskBase, METH_O, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_description", _wrap_IteratedVoronoiSubtractorDiskBase_description, METH_O, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_set_z", (PyCFunction)(void(*)(void))_wrap_IteratedVoronoiSubtractorDiskBase_set_z, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_set_zpt", (PyCFunction)(void(*)(void))_wrap_IteratedVoronoiSubtractorDiskBase_set_zpt, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_set_zemd", (PyCFunction)(void(*)(void))_wrap_IteratedVoronoiSubtractorDiskBase_set_zemd, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_set_background_estimator", (PyCFunction)(void(*)(void))_wrap_IteratedVoronoiSubtractorDiskBase_set_background_estimator, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_set_rho_subtraction_mode", (PyCFunction)(void(*)(void))_wrap_IteratedVoronoiSubtractorDiskBase_set_rho_subtraction_mode, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_set_jet_constituents_use_same_rho", (PyCFunction)(void(*)(void))_wrap_IteratedVoronoiSubtractorDiskBase_set_jet_constituents_use_same_rho, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_set_subtraction_type", (PyCFunction)(void(*)(void))_wrap_IteratedVoronoiSubtractorDiskBase_set_subtraction_type, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_set_R", (PyCFunction)(void(*)(void))_wrap_IteratedVoronoiSubtractorDiskBase_set_R, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_set_allow_repeats", (PyCFunction)(void(*)(void))_wrap_IteratedVoronoiSubtractorDiskBase_set_allow_repeats, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_set_store_history", (PyCFunction)(void(*)(void))_wrap_IteratedVoronoiSubtractorDiskBase_set_store_history, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_zpt", _wrap_IteratedVoronoiSubtractorDiskBase_zpt, METH_O, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_zemd", _wrap_IteratedVoronoiSubtractorDiskBase_zemd, METH_O, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_background_estimator", _wrap_IteratedVoronoiSubtractorDiskBase_background_estimator, METH_VARARGS, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_jet_constituents_use_same_rho", _wrap_IteratedVoronoiSubtractorDiskBase_jet_constituents_use_same_rho, METH_O, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_rho_subtraction_mode", _wrap_IteratedVoronoiSubtractorDiskBase_rho_subtraction_mode, METH_O, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_track_emds", _wrap_IteratedVoronoiSubtractorDiskBase_track_emds, METH_O, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_total_area", _wrap_IteratedVoronoiSubtractorDiskBase_total_area, METH_O, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_subtraction_type", _wrap_IteratedVoronoiSubtractorDiskBase_subtraction_type, METH_O, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_R", _wrap_IteratedVoronoiSubtractorDiskBase_R, METH_O, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_allow_repeats", _wrap_IteratedVoronoiSubtractorDiskBase_allow_repeats, METH_O, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_store_history", _wrap_IteratedVoronoiSubtractorDiskBase_store_history, METH_O, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_vor", _wrap_IteratedVoronoiSubtractorDiskBase_vor, METH_O, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_reapply", _wrap_IteratedVoronoiSubtractorDiskBase_reapply, METH_O, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_emd", _wrap_IteratedVoronoiSubtractorDiskBase_emd, METH_O, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_nvalid", _wrap_IteratedVoronoiSubtractorDiskBase_nvalid, METH_O, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_nremoved", _wrap_IteratedVoronoiSubtractorDiskBase_nremoved, METH_O, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_history", _wrap_IteratedVoronoiSubtractorDiskBase_history, METH_O, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_hist_size", _wrap_IteratedVoronoiSubtractorDiskBase_hist_size, METH_O, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_hist_i_areas_size", (PyCFunction)(void(*)(void))_wrap_IteratedVoronoiSubtractorDiskBase_hist_i_areas_size, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "IteratedVoronoiSubtractorDiskBase___str__", _wrap_IteratedVoronoiSubtractorDiskBase___str__, METH_O, NULL},
	 { "IteratedVoronoiSubtractorDiskBase___repr__", _wrap_IteratedVoronoiSubtractorDiskBase___repr__, METH_O, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_swigregister", IteratedVoronoiSubtractorDiskBase_swigregister, METH_O, NULL},
	 { "IteratedVoronoiSubtractorDiskBase_swiginit", IteratedVoronoiSubtractorDiskBase_swiginit, METH_VARARGS, NULL},
	 { "new_IteratedVoronoiSubtractorCylinderBase", _wrap_new_IteratedVoronoiSubtractorCylinderBase, METH_NOARGS, NULL},
	 { "delete_IteratedVoronoiSubtractorCylinderBase", _wrap_delete_IteratedVoronoiSubtractorCylinderBase, METH_O, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_description", _wrap_IteratedVoronoiSubtractorCylinderBase_description, METH_O, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_set_z", (PyCFunction)(void(*)(void))_wrap_IteratedVoronoiSubtractorCylinderBase_set_z, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_set_zpt", (PyCFunction)(void(*)(void))_wrap_IteratedVoronoiSubtractorCylinderBase_set_zpt, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_set_zemd", (PyCFunction)(void(*)(void))_wrap_IteratedVoronoiSubtractorCylinderBase_set_zemd, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_set_background_estimator", (PyCFunction)(void(*)(void))_wrap_IteratedVoronoiSubtractorCylinderBase_set_background_estimator, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_set_rho_subtraction_mode", (PyCFunction)(void(*)(void))_wrap_IteratedVoronoiSubtractorCylinderBase_set_rho_subtraction_mode, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_set_jet_constituents_use_same_rho", (PyCFunction)(void(*)(void))_wrap_IteratedVoronoiSubtractorCylinderBase_set_jet_constituents_use_same_rho, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_set_subtraction_type", (PyCFunction)(void(*)(void))_wrap_IteratedVoronoiSubtractorCylinderBase_set_subtraction_type, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_set_R", (PyCFunction)(void(*)(void))_wrap_IteratedVoronoiSubtractorCylinderBase_set_R, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_set_allow_repeats", (PyCFunction)(void(*)(void))_wrap_IteratedVoronoiSubtractorCylinderBase_set_allow_repeats, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_set_store_history", (PyCFunction)(void(*)(void))_wrap_IteratedVoronoiSubtractorCylinderBase_set_store_history, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_zpt", _wrap_IteratedVoronoiSubtractorCylinderBase_zpt, METH_O, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_zemd", _wrap_IteratedVoronoiSubtractorCylinderBase_zemd, METH_O, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_background_estimator", _wrap_IteratedVoronoiSubtractorCylinderBase_background_estimator, METH_VARARGS, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_jet_constituents_use_same_rho", _wrap_IteratedVoronoiSubtractorCylinderBase_jet_constituents_use_same_rho, METH_O, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_rho_subtraction_mode", _wrap_IteratedVoronoiSubtractorCylinderBase_rho_subtraction_mode, METH_O, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_track_emds", _wrap_IteratedVoronoiSubtractorCylinderBase_track_emds, METH_O, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_total_area", _wrap_IteratedVoronoiSubtractorCylinderBase_total_area, METH_O, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_subtraction_type", _wrap_IteratedVoronoiSubtractorCylinderBase_subtraction_type, METH_O, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_R", _wrap_IteratedVoronoiSubtractorCylinderBase_R, METH_O, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_allow_repeats", _wrap_IteratedVoronoiSubtractorCylinderBase_allow_repeats, METH_O, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_store_history", _wrap_IteratedVoronoiSubtractorCylinderBase_store_history, METH_O, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_vor", _wrap_IteratedVoronoiSubtractorCylinderBase_vor, METH_O, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_reapply", _wrap_IteratedVoronoiSubtractorCylinderBase_reapply, METH_O, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_emd", _wrap_IteratedVoronoiSubtractorCylinderBase_emd, METH_O, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_nvalid", _wrap_IteratedVoronoiSubtractorCylinderBase_nvalid, METH_O, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_nremoved", _wrap_IteratedVoronoiSubtractorCylinderBase_nremoved, METH_O, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_history", _wrap_IteratedVoronoiSubtractorCylinderBase_history, METH_O, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_hist_size", _wrap_IteratedVoronoiSubtractorCylinderBase_hist_size, METH_O, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_hist_i_areas_size", (PyCFunction)(void(*)(void))_wrap_IteratedVoronoiSubtractorCylinderBase_hist_i_areas_size, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase___str__", _wrap_IteratedVoronoiSubtractorCylinderBase___str__, METH_O, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase___repr__", _wrap_IteratedVoronoiSubtractorCylinderBase___repr__, METH_O, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_swigregister", IteratedVoronoiSubtractorCylinderBase_swigregister, METH_O, NULL},
	 { "IteratedVoronoiSubtractorCylinderBase_swiginit", IteratedVoronoiSubtractorCylinderBase_swiginit, METH_VARARGS, NULL},
	 { "new_OptimalTransportSubtractorTransverseMomentumDeltaR", _wrap_new_OptimalTransportSubtractorTransverseMomentumDeltaR, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumDeltaR_description", _wrap_OptimalTransportSubtractorTransverseMomentumDeltaR_description, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumDeltaR_emd_obj", _wrap_OptimalTransportSubtractorTransverseMomentumDeltaR_emd_obj, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumDeltaR_z", _wrap_OptimalTransportSubtractorTransverseMomentumDeltaR_z, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumDeltaR_total_subtracted", _wrap_OptimalTransportSubtractorTransverseMomentumDeltaR_total_subtracted, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumDeltaR___call__", _wrap_OptimalTransportSubtractorTransverseMomentumDeltaR___call__, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumDeltaR___str__", _wrap_OptimalTransportSubtractorTransverseMomentumDeltaR___str__, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumDeltaR___repr__", _wrap_OptimalTransportSubtractorTransverseMomentumDeltaR___repr__, METH_O, NULL},
	 { "delete_OptimalTransportSubtractorTransverseMomentumDeltaR", _wrap_delete_OptimalTransportSubtractorTransverseMomentumDeltaR, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumDeltaR_swigregister", OptimalTransportSubtractorTransverseMomentumDeltaR_swigregister, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumDeltaR_swiginit", OptimalTransportSubtractorTransverseMomentumDeltaR_swiginit, METH_VARARGS, NULL},
	 { "new_OptimalTransportSubtractorTransverseMomentumHadronicDot", _wrap_new_OptimalTransportSubtractorTransverseMomentumHadronicDot, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumHadronicDot_description", _wrap_OptimalTransportSubtractorTransverseMomentumHadronicDot_description, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumHadronicDot_emd_obj", _wrap_OptimalTransportSubtractorTransverseMomentumHadronicDot_emd_obj, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumHadronicDot_z", _wrap_OptimalTransportSubtractorTransverseMomentumHadronicDot_z, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumHadronicDot_total_subtracted", _wrap_OptimalTransportSubtractorTransverseMomentumHadronicDot_total_subtracted, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumHadronicDot___call__", _wrap_OptimalTransportSubtractorTransverseMomentumHadronicDot___call__, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumHadronicDot___str__", _wrap_OptimalTransportSubtractorTransverseMomentumHadronicDot___str__, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumHadronicDot___repr__", _wrap_OptimalTransportSubtractorTransverseMomentumHadronicDot___repr__, METH_O, NULL},
	 { "delete_OptimalTransportSubtractorTransverseMomentumHadronicDot", _wrap_delete_OptimalTransportSubtractorTransverseMomentumHadronicDot, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumHadronicDot_swigregister", OptimalTransportSubtractorTransverseMomentumHadronicDot_swigregister, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumHadronicDot_swiginit", OptimalTransportSubtractorTransverseMomentumHadronicDot_swiginit, METH_VARARGS, NULL},
	 { "new_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive", _wrap_new_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumHadronicDotMassive_description", _wrap_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive_description, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumHadronicDotMassive_emd_obj", _wrap_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive_emd_obj, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumHadronicDotMassive_z", _wrap_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive_z, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumHadronicDotMassive_total_subtracted", _wrap_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive_total_subtracted, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumHadronicDotMassive___call__", _wrap_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive___call__, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumHadronicDotMassive___str__", _wrap_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive___str__, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumHadronicDotMassive___repr__", _wrap_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive___repr__, METH_O, NULL},
	 { "delete_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive", _wrap_delete_OptimalTransportSubtractorTransverseMomentumHadronicDotMassive, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumHadronicDotMassive_swigregister", OptimalTransportSubtractorTransverseMomentumHadronicDotMassive_swigregister, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseMomentumHadronicDotMassive_swiginit", OptimalTransportSubtractorTransverseMomentumHadronicDotMassive_swiginit, METH_VARARGS, NULL},
	 { "new_OptimalTransportSubtractorTransverseEnergyDeltaR", _wrap_new_OptimalTransportSubtractorTransverseEnergyDeltaR, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyDeltaR_description", _wrap_OptimalTransportSubtractorTransverseEnergyDeltaR_description, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyDeltaR_emd_obj", _wrap_OptimalTransportSubtractorTransverseEnergyDeltaR_emd_obj, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyDeltaR_z", _wrap_OptimalTransportSubtractorTransverseEnergyDeltaR_z, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyDeltaR_total_subtracted", _wrap_OptimalTransportSubtractorTransverseEnergyDeltaR_total_subtracted, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyDeltaR___call__", _wrap_OptimalTransportSubtractorTransverseEnergyDeltaR___call__, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyDeltaR___str__", _wrap_OptimalTransportSubtractorTransverseEnergyDeltaR___str__, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyDeltaR___repr__", _wrap_OptimalTransportSubtractorTransverseEnergyDeltaR___repr__, METH_O, NULL},
	 { "delete_OptimalTransportSubtractorTransverseEnergyDeltaR", _wrap_delete_OptimalTransportSubtractorTransverseEnergyDeltaR, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyDeltaR_swigregister", OptimalTransportSubtractorTransverseEnergyDeltaR_swigregister, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyDeltaR_swiginit", OptimalTransportSubtractorTransverseEnergyDeltaR_swiginit, METH_VARARGS, NULL},
	 { "new_OptimalTransportSubtractorTransverseEnergyHadronicDot", _wrap_new_OptimalTransportSubtractorTransverseEnergyHadronicDot, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyHadronicDot_description", _wrap_OptimalTransportSubtractorTransverseEnergyHadronicDot_description, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyHadronicDot_emd_obj", _wrap_OptimalTransportSubtractorTransverseEnergyHadronicDot_emd_obj, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyHadronicDot_z", _wrap_OptimalTransportSubtractorTransverseEnergyHadronicDot_z, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyHadronicDot_total_subtracted", _wrap_OptimalTransportSubtractorTransverseEnergyHadronicDot_total_subtracted, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyHadronicDot___call__", _wrap_OptimalTransportSubtractorTransverseEnergyHadronicDot___call__, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyHadronicDot___str__", _wrap_OptimalTransportSubtractorTransverseEnergyHadronicDot___str__, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyHadronicDot___repr__", _wrap_OptimalTransportSubtractorTransverseEnergyHadronicDot___repr__, METH_O, NULL},
	 { "delete_OptimalTransportSubtractorTransverseEnergyHadronicDot", _wrap_delete_OptimalTransportSubtractorTransverseEnergyHadronicDot, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyHadronicDot_swigregister", OptimalTransportSubtractorTransverseEnergyHadronicDot_swigregister, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyHadronicDot_swiginit", OptimalTransportSubtractorTransverseEnergyHadronicDot_swiginit, METH_VARARGS, NULL},
	 { "new_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive", _wrap_new_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyHadronicDotMassive_description", _wrap_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive_description, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyHadronicDotMassive_emd_obj", _wrap_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive_emd_obj, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyHadronicDotMassive_z", _wrap_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive_z, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyHadronicDotMassive_total_subtracted", _wrap_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive_total_subtracted, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyHadronicDotMassive___call__", _wrap_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive___call__, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyHadronicDotMassive___str__", _wrap_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive___str__, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyHadronicDotMassive___repr__", _wrap_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive___repr__, METH_O, NULL},
	 { "delete_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive", _wrap_delete_OptimalTransportSubtractorTransverseEnergyHadronicDotMassive, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyHadronicDotMassive_swigregister", OptimalTransportSubtractorTransverseEnergyHadronicDotMassive_swigregister, METH_O, NULL},
	 { "OptimalTransportSubtractorTransverseEnergyHadronicDotMassive_swiginit", OptimalTransportSubtractorTransverseEnergyHadronicDotMassive_swiginit, METH_VARARGS, NULL},
	 { "new_OptimalTransportSubtractorMomentumEEDot", _wrap_new_OptimalTransportSubtractorMomentumEEDot, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorMomentumEEDot_description", _wrap_OptimalTransportSubtractorMomentumEEDot_description, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEDot_emd_obj", _wrap_OptimalTransportSubtractorMomentumEEDot_emd_obj, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEDot_z", _wrap_OptimalTransportSubtractorMomentumEEDot_z, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEDot_total_subtracted", _wrap_OptimalTransportSubtractorMomentumEEDot_total_subtracted, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEDot___call__", _wrap_OptimalTransportSubtractorMomentumEEDot___call__, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorMomentumEEDot___str__", _wrap_OptimalTransportSubtractorMomentumEEDot___str__, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEDot___repr__", _wrap_OptimalTransportSubtractorMomentumEEDot___repr__, METH_O, NULL},
	 { "delete_OptimalTransportSubtractorMomentumEEDot", _wrap_delete_OptimalTransportSubtractorMomentumEEDot, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEDot_swigregister", OptimalTransportSubtractorMomentumEEDot_swigregister, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEDot_swiginit", OptimalTransportSubtractorMomentumEEDot_swiginit, METH_VARARGS, NULL},
	 { "new_OptimalTransportSubtractorMomentumEEDotMassive", _wrap_new_OptimalTransportSubtractorMomentumEEDotMassive, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorMomentumEEDotMassive_description", _wrap_OptimalTransportSubtractorMomentumEEDotMassive_description, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEDotMassive_emd_obj", _wrap_OptimalTransportSubtractorMomentumEEDotMassive_emd_obj, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEDotMassive_z", _wrap_OptimalTransportSubtractorMomentumEEDotMassive_z, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEDotMassive_total_subtracted", _wrap_OptimalTransportSubtractorMomentumEEDotMassive_total_subtracted, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEDotMassive___call__", _wrap_OptimalTransportSubtractorMomentumEEDotMassive___call__, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorMomentumEEDotMassive___str__", _wrap_OptimalTransportSubtractorMomentumEEDotMassive___str__, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEDotMassive___repr__", _wrap_OptimalTransportSubtractorMomentumEEDotMassive___repr__, METH_O, NULL},
	 { "delete_OptimalTransportSubtractorMomentumEEDotMassive", _wrap_delete_OptimalTransportSubtractorMomentumEEDotMassive, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEDotMassive_swigregister", OptimalTransportSubtractorMomentumEEDotMassive_swigregister, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEDotMassive_swiginit", OptimalTransportSubtractorMomentumEEDotMassive_swiginit, METH_VARARGS, NULL},
	 { "new_OptimalTransportSubtractorMomentumEEArcLength", _wrap_new_OptimalTransportSubtractorMomentumEEArcLength, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorMomentumEEArcLength_description", _wrap_OptimalTransportSubtractorMomentumEEArcLength_description, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEArcLength_emd_obj", _wrap_OptimalTransportSubtractorMomentumEEArcLength_emd_obj, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEArcLength_z", _wrap_OptimalTransportSubtractorMomentumEEArcLength_z, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEArcLength_total_subtracted", _wrap_OptimalTransportSubtractorMomentumEEArcLength_total_subtracted, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEArcLength___call__", _wrap_OptimalTransportSubtractorMomentumEEArcLength___call__, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorMomentumEEArcLength___str__", _wrap_OptimalTransportSubtractorMomentumEEArcLength___str__, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEArcLength___repr__", _wrap_OptimalTransportSubtractorMomentumEEArcLength___repr__, METH_O, NULL},
	 { "delete_OptimalTransportSubtractorMomentumEEArcLength", _wrap_delete_OptimalTransportSubtractorMomentumEEArcLength, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEArcLength_swigregister", OptimalTransportSubtractorMomentumEEArcLength_swigregister, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEArcLength_swiginit", OptimalTransportSubtractorMomentumEEArcLength_swiginit, METH_VARARGS, NULL},
	 { "new_OptimalTransportSubtractorMomentumEEArcLengthMassive", _wrap_new_OptimalTransportSubtractorMomentumEEArcLengthMassive, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorMomentumEEArcLengthMassive_description", _wrap_OptimalTransportSubtractorMomentumEEArcLengthMassive_description, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEArcLengthMassive_emd_obj", _wrap_OptimalTransportSubtractorMomentumEEArcLengthMassive_emd_obj, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEArcLengthMassive_z", _wrap_OptimalTransportSubtractorMomentumEEArcLengthMassive_z, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEArcLengthMassive_total_subtracted", _wrap_OptimalTransportSubtractorMomentumEEArcLengthMassive_total_subtracted, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEArcLengthMassive___call__", _wrap_OptimalTransportSubtractorMomentumEEArcLengthMassive___call__, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorMomentumEEArcLengthMassive___str__", _wrap_OptimalTransportSubtractorMomentumEEArcLengthMassive___str__, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEArcLengthMassive___repr__", _wrap_OptimalTransportSubtractorMomentumEEArcLengthMassive___repr__, METH_O, NULL},
	 { "delete_OptimalTransportSubtractorMomentumEEArcLengthMassive", _wrap_delete_OptimalTransportSubtractorMomentumEEArcLengthMassive, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEArcLengthMassive_swigregister", OptimalTransportSubtractorMomentumEEArcLengthMassive_swigregister, METH_O, NULL},
	 { "OptimalTransportSubtractorMomentumEEArcLengthMassive_swiginit", OptimalTransportSubtractorMomentumEEArcLengthMassive_swiginit, METH_VARARGS, NULL},
	 { "new_OptimalTransportSubtractorEnergyEEDot", _wrap_new_OptimalTransportSubtractorEnergyEEDot, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorEnergyEEDot_description", _wrap_OptimalTransportSubtractorEnergyEEDot_description, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEDot_emd_obj", _wrap_OptimalTransportSubtractorEnergyEEDot_emd_obj, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEDot_z", _wrap_OptimalTransportSubtractorEnergyEEDot_z, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEDot_total_subtracted", _wrap_OptimalTransportSubtractorEnergyEEDot_total_subtracted, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEDot___call__", _wrap_OptimalTransportSubtractorEnergyEEDot___call__, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorEnergyEEDot___str__", _wrap_OptimalTransportSubtractorEnergyEEDot___str__, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEDot___repr__", _wrap_OptimalTransportSubtractorEnergyEEDot___repr__, METH_O, NULL},
	 { "delete_OptimalTransportSubtractorEnergyEEDot", _wrap_delete_OptimalTransportSubtractorEnergyEEDot, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEDot_swigregister", OptimalTransportSubtractorEnergyEEDot_swigregister, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEDot_swiginit", OptimalTransportSubtractorEnergyEEDot_swiginit, METH_VARARGS, NULL},
	 { "new_OptimalTransportSubtractorEnergyEEDotMassive", _wrap_new_OptimalTransportSubtractorEnergyEEDotMassive, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorEnergyEEDotMassive_description", _wrap_OptimalTransportSubtractorEnergyEEDotMassive_description, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEDotMassive_emd_obj", _wrap_OptimalTransportSubtractorEnergyEEDotMassive_emd_obj, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEDotMassive_z", _wrap_OptimalTransportSubtractorEnergyEEDotMassive_z, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEDotMassive_total_subtracted", _wrap_OptimalTransportSubtractorEnergyEEDotMassive_total_subtracted, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEDotMassive___call__", _wrap_OptimalTransportSubtractorEnergyEEDotMassive___call__, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorEnergyEEDotMassive___str__", _wrap_OptimalTransportSubtractorEnergyEEDotMassive___str__, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEDotMassive___repr__", _wrap_OptimalTransportSubtractorEnergyEEDotMassive___repr__, METH_O, NULL},
	 { "delete_OptimalTransportSubtractorEnergyEEDotMassive", _wrap_delete_OptimalTransportSubtractorEnergyEEDotMassive, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEDotMassive_swigregister", OptimalTransportSubtractorEnergyEEDotMassive_swigregister, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEDotMassive_swiginit", OptimalTransportSubtractorEnergyEEDotMassive_swiginit, METH_VARARGS, NULL},
	 { "new_OptimalTransportSubtractorEnergyEEArcLength", _wrap_new_OptimalTransportSubtractorEnergyEEArcLength, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorEnergyEEArcLength_description", _wrap_OptimalTransportSubtractorEnergyEEArcLength_description, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEArcLength_emd_obj", _wrap_OptimalTransportSubtractorEnergyEEArcLength_emd_obj, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEArcLength_z", _wrap_OptimalTransportSubtractorEnergyEEArcLength_z, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEArcLength_total_subtracted", _wrap_OptimalTransportSubtractorEnergyEEArcLength_total_subtracted, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEArcLength___call__", _wrap_OptimalTransportSubtractorEnergyEEArcLength___call__, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorEnergyEEArcLength___str__", _wrap_OptimalTransportSubtractorEnergyEEArcLength___str__, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEArcLength___repr__", _wrap_OptimalTransportSubtractorEnergyEEArcLength___repr__, METH_O, NULL},
	 { "delete_OptimalTransportSubtractorEnergyEEArcLength", _wrap_delete_OptimalTransportSubtractorEnergyEEArcLength, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEArcLength_swigregister", OptimalTransportSubtractorEnergyEEArcLength_swigregister, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEArcLength_swiginit", OptimalTransportSubtractorEnergyEEArcLength_swiginit, METH_VARARGS, NULL},
	 { "new_OptimalTransportSubtractorEnergyEEArcLengthMassive", _wrap_new_OptimalTransportSubtractorEnergyEEArcLengthMassive, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorEnergyEEArcLengthMassive_description", _wrap_OptimalTransportSubtractorEnergyEEArcLengthMassive_description, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEArcLengthMassive_emd_obj", _wrap_OptimalTransportSubtractorEnergyEEArcLengthMassive_emd_obj, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEArcLengthMassive_z", _wrap_OptimalTransportSubtractorEnergyEEArcLengthMassive_z, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEArcLengthMassive_total_subtracted", _wrap_OptimalTransportSubtractorEnergyEEArcLengthMassive_total_subtracted, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEArcLengthMassive___call__", _wrap_OptimalTransportSubtractorEnergyEEArcLengthMassive___call__, METH_VARARGS, NULL},
	 { "OptimalTransportSubtractorEnergyEEArcLengthMassive___str__", _wrap_OptimalTransportSubtractorEnergyEEArcLengthMassive___str__, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEArcLengthMassive___repr__", _wrap_OptimalTransportSubtractorEnergyEEArcLengthMassive___repr__, METH_O, NULL},
	 { "delete_OptimalTransportSubtractorEnergyEEArcLengthMassive", _wrap_delete_OptimalTransportSubtractorEnergyEEArcLengthMassive, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEArcLengthMassive_swigregister", OptimalTransportSubtractorEnergyEEArcLengthMassive_swigregister, METH_O, NULL},
	 { "OptimalTransportSubtractorEnergyEEArcLengthMassive_swiginit", OptimalTransportSubtractorEnergyEEArcLengthMassive_swiginit, METH_VARARGS, NULL},
	 { "new_IteratedVoronoiSubtractorCylinder", _wrap_new_IteratedVoronoiSubtractorCylinder, METH_VARARGS, NULL},
	 { "IteratedVoronoiSubtractorCylinder___call__", _wrap_IteratedVoronoiSubtractorCylinder___call__, METH_VARARGS, NULL},
	 { "delete_IteratedVoronoiSubtractorCylinder", _wrap_delete_IteratedVoronoiSubtractorCylinder, METH_O, NULL},
	 { "IteratedVoronoiSubtractorCylinder_swigregister", IteratedVoronoiSubtractorCylinder_swigregister, METH_O, NULL},
	 { "IteratedVoronoiSubtractorCylinder_swiginit", IteratedVoronoiSubtractorCylinder_swiginit, METH_VARARGS, NULL},
	 { "new_IteratedVoronoiSubtractorDisk", (PyCFunction)(void(*)(void))_wrap_new_IteratedVoronoiSubtractorDisk, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "IteratedVoronoiSubtractorDisk___call__", _wrap_IteratedVoronoiSubtractorDisk___call__, METH_VARARGS, NULL},
	 { "delete_IteratedVoronoiSubtractorDisk", _wrap_delete_IteratedVoronoiSubtractorDisk, METH_O, NULL},
	 { "IteratedVoronoiSubtractorDisk_swigregister", IteratedVoronoiSubtractorDisk_swigregister, METH_O, NULL},
	 { "IteratedVoronoiSubtractorDisk_swiginit", IteratedVoronoiSubtractorDisk_swiginit, METH_VARARGS, NULL},
	 { "new_RecursiveSafeSubtractorTransverseMomentum", (PyCFunction)(void(*)(void))_wrap_new_RecursiveSafeSubtractorTransverseMomentum, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "RecursiveSafeSubtractorTransverseMomentum_description", _wrap_RecursiveSafeSubtractorTransverseMomentum_description, METH_O, NULL},
	 { "RecursiveSafeSubtractorTransverseMomentum_default_z", _wrap_RecursiveSafeSubtractorTransverseMomentum_default_z, METH_O, NULL},
	 { "RecursiveSafeSubtractorTransverseMomentum_default_f", _wrap_RecursiveSafeSubtractorTransverseMomentum_default_f, METH_O, NULL},
	 { "RecursiveSafeSubtractorTransverseMomentum_jet_alg", _wrap_RecursiveSafeSubtractorTransverseMomentum_jet_alg, METH_O, NULL},
	 { "RecursiveSafeSubtractorTransverseMomentum_weight_sums", _wrap_RecursiveSafeSubtractorTransverseMomentum_weight_sums, METH_O, NULL},
	 { "RecursiveSafeSubtractorTransverseMomentum_total_weight", _wrap_RecursiveSafeSubtractorTransverseMomentum_total_weight, METH_O, NULL},
	 { "RecursiveSafeSubtractorTransverseMomentum_reclustered_jet", _wrap_RecursiveSafeSubtractorTransverseMomentum_reclustered_jet, METH_O, NULL},
	 { "RecursiveSafeSubtractorTransverseMomentum___str__", _wrap_RecursiveSafeSubtractorTransverseMomentum___str__, METH_O, NULL},
	 { "RecursiveSafeSubtractorTransverseMomentum___repr__", _wrap_RecursiveSafeSubtractorTransverseMomentum___repr__, METH_O, NULL},
	 { "RecursiveSafeSubtractorTransverseMomentum___call__", _wrap_RecursiveSafeSubtractorTransverseMomentum___call__, METH_VARARGS, NULL},
	 { "RecursiveSafeSubtractorTransverseMomentum_apply", (PyCFunction)(void(*)(void))_wrap_RecursiveSafeSubtractorTransverseMomentum_apply, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "delete_RecursiveSafeSubtractorTransverseMomentum", _wrap_delete_RecursiveSafeSubtractorTransverseMomentum, METH_O, NULL},
	 { "RecursiveSafeSubtractorTransverseMomentum_swigregister", RecursiveSafeSubtractorTransverseMomentum_swigregister, METH_O, NULL},
	 { "RecursiveSafeSubtractorTransverseMomentum_swiginit", RecursiveSafeSubtractorTransverseMomentum_swiginit, METH_VARARGS, NULL},
	 { "new_RecursiveSafeSubtractorTransverseEnergy", (PyCFunction)(void(*)(void))_wrap_new_RecursiveSafeSubtractorTransverseEnergy, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "RecursiveSafeSubtractorTransverseEnergy_description", _wrap_RecursiveSafeSubtractorTransverseEnergy_description, METH_O, NULL},
	 { "RecursiveSafeSubtractorTransverseEnergy_default_z", _wrap_RecursiveSafeSubtractorTransverseEnergy_default_z, METH_O, NULL},
	 { "RecursiveSafeSubtractorTransverseEnergy_default_f", _wrap_RecursiveSafeSubtractorTransverseEnergy_default_f, METH_O, NULL},
	 { "RecursiveSafeSubtractorTransverseEnergy_jet_alg", _wrap_RecursiveSafeSubtractorTransverseEnergy_jet_alg, METH_O, NULL},
	 { "RecursiveSafeSubtractorTransverseEnergy_weight_sums", _wrap_RecursiveSafeSubtractorTransverseEnergy_weight_sums, METH_O, NULL},
	 { "RecursiveSafeSubtractorTransverseEnergy_total_weight", _wrap_RecursiveSafeSubtractorTransverseEnergy_total_weight, METH_O, NULL},
	 { "RecursiveSafeSubtractorTransverseEnergy_reclustered_jet", _wrap_RecursiveSafeSubtractorTransverseEnergy_reclustered_jet, METH_O, NULL},
	 { "RecursiveSafeSubtractorTransverseEnergy___str__", _wrap_RecursiveSafeSubtractorTransverseEnergy___str__, METH_O, NULL},
	 { "RecursiveSafeSubtractorTransverseEnergy___repr__", _wrap_RecursiveSafeSubtractorTransverseEnergy___repr__, METH_O, NULL},
	 { "RecursiveSafeSubtractorTransverseEnergy___call__", _wrap_RecursiveSafeSubtractorTransverseEnergy___call__, METH_VARARGS, NULL},
	 { "RecursiveSafeSubtractorTransverseEnergy_apply", (PyCFunction)(void(*)(void))_wrap_RecursiveSafeSubtractorTransverseEnergy_apply, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "delete_RecursiveSafeSubtractorTransverseEnergy", _wrap_delete_RecursiveSafeSubtractorTransverseEnergy, METH_O, NULL},
	 { "RecursiveSafeSubtractorTransverseEnergy_swigregister", RecursiveSafeSubtractorTransverseEnergy_swigregister, METH_O, NULL},
	 { "RecursiveSafeSubtractorTransverseEnergy_swiginit", RecursiveSafeSubtractorTransverseEnergy_swiginit, METH_VARARGS, NULL},
	 { "new_RecursiveSafeSubtractorEnergy", (PyCFunction)(void(*)(void))_wrap_new_RecursiveSafeSubtractorEnergy, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "RecursiveSafeSubtractorEnergy_description", _wrap_RecursiveSafeSubtractorEnergy_description, METH_O, NULL},
	 { "RecursiveSafeSubtractorEnergy_default_z", _wrap_RecursiveSafeSubtractorEnergy_default_z, METH_O, NULL},
	 { "RecursiveSafeSubtractorEnergy_default_f", _wrap_RecursiveSafeSubtractorEnergy_default_f, METH_O, NULL},
	 { "RecursiveSafeSubtractorEnergy_jet_alg", _wrap_RecursiveSafeSubtractorEnergy_jet_alg, METH_O, NULL},
	 { "RecursiveSafeSubtractorEnergy_weight_sums", _wrap_RecursiveSafeSubtractorEnergy_weight_sums, METH_O, NULL},
	 { "RecursiveSafeSubtractorEnergy_total_weight", _wrap_RecursiveSafeSubtractorEnergy_total_weight, METH_O, NULL},
	 { "RecursiveSafeSubtractorEnergy_reclustered_jet", _wrap_RecursiveSafeSubtractorEnergy_reclustered_jet, METH_O, NULL},
	 { "RecursiveSafeSubtractorEnergy___str__", _wrap_RecursiveSafeSubtractorEnergy___str__, METH_O, NULL},
	 { "RecursiveSafeSubtractorEnergy___repr__", _wrap_RecursiveSafeSubtractorEnergy___repr__, METH_O, NULL},
	 { "RecursiveSafeSubtractorEnergy___call__", _wrap_RecursiveSafeSubtractorEnergy___call__, METH_VARARGS, NULL},
	 { "RecursiveSafeSubtractorEnergy_apply", (PyCFunction)(void(*)(void))_wrap_RecursiveSafeSubtractorEnergy_apply, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "delete_RecursiveSafeSubtractorEnergy", _wrap_delete_RecursiveSafeSubtractorEnergy, METH_O, NULL},
	 { "RecursiveSafeSubtractorEnergy_swigregister", RecursiveSafeSubtractorEnergy_swigregister, METH_O, NULL},
	 { "RecursiveSafeSubtractorEnergy_swiginit", RecursiveSafeSubtractorEnergy_swiginit, METH_VARARGS, NULL},
	 { "new_RecursiveSafeSubtractorMomentum", (PyCFunction)(void(*)(void))_wrap_new_RecursiveSafeSubtractorMomentum, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "RecursiveSafeSubtractorMomentum_description", _wrap_RecursiveSafeSubtractorMomentum_description, METH_O, NULL},
	 { "RecursiveSafeSubtractorMomentum_default_z", _wrap_RecursiveSafeSubtractorMomentum_default_z, METH_O, NULL},
	 { "RecursiveSafeSubtractorMomentum_default_f", _wrap_RecursiveSafeSubtractorMomentum_default_f, METH_O, NULL},
	 { "RecursiveSafeSubtractorMomentum_jet_alg", _wrap_RecursiveSafeSubtractorMomentum_jet_alg, METH_O, NULL},
	 { "RecursiveSafeSubtractorMomentum_weight_sums", _wrap_RecursiveSafeSubtractorMomentum_weight_sums, METH_O, NULL},
	 { "RecursiveSafeSubtractorMomentum_total_weight", _wrap_RecursiveSafeSubtractorMomentum_total_weight, METH_O, NULL},
	 { "RecursiveSafeSubtractorMomentum_reclustered_jet", _wrap_RecursiveSafeSubtractorMomentum_reclustered_jet, METH_O, NULL},
	 { "RecursiveSafeSubtractorMomentum___str__", _wrap_RecursiveSafeSubtractorMomentum___str__, METH_O, NULL},
	 { "RecursiveSafeSubtractorMomentum___repr__", _wrap_RecursiveSafeSubtractorMomentum___repr__, METH_O, NULL},
	 { "RecursiveSafeSubtractorMomentum___call__", _wrap_RecursiveSafeSubtractorMomentum___call__, METH_VARARGS, NULL},
	 { "RecursiveSafeSubtractorMomentum_apply", (PyCFunction)(void(*)(void))_wrap_RecursiveSafeSubtractorMomentum_apply, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "delete_RecursiveSafeSubtractorMomentum", _wrap_delete_RecursiveSafeSubtractorMomentum, METH_O, NULL},
	 { "RecursiveSafeSubtractorMomentum_swigregister", RecursiveSafeSubtractorMomentum_swigregister, METH_O, NULL},
	 { "RecursiveSafeSubtractorMomentum_swiginit", RecursiveSafeSubtractorMomentum_swiginit, METH_VARARGS, NULL},
	 { NULL, NULL, 0, NULL }
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorDiskTo_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiDisk_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *)  ((fastjet::contrib::piranha::IteratedVoronoiSubtractorDisk *) x));
}
static void *_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorCylinderTo_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiCylinder_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *)  ((fastjet::contrib::piranha::IteratedVoronoiSubtractorCylinder *) x));
}
static void *_p_fastjet__contrib__piranha__DynamicVoronoiDiskTo_p_fastjet__contrib__piranha__DynamicVoronoiBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((fastjet::contrib::piranha::DynamicVoronoiBase *)  ((fastjet::contrib::piranha::DynamicVoronoiDisk *) x));
}
static void *_p_fastjet__contrib__piranha__DynamicVoronoiCylinderTo_p_fastjet__contrib__piranha__DynamicVoronoiBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((fastjet::contrib::piranha::DynamicVoronoiBase *)  ((fastjet::contrib::piranha::DynamicVoronoiCylinder *) x));
}
static void *_p_fastjet__JetMedianBackgroundEstimatorTo_p_fastjet__BackgroundEstimatorBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((fastjet::BackgroundEstimatorBase *)  ((fastjet::JetMedianBackgroundEstimator *) x));
}
static void *_p_fastjet__GridMedianBackgroundEstimatorTo_p_fastjet__BackgroundEstimatorBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((fastjet::BackgroundEstimatorBase *)  ((fastjet::GridMedianBackgroundEstimator *) x));
}
static void *_p_fastjet__contrib__piranha__PiranhaErrorTo_p_std__runtime_error(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::runtime_error *)  ((fastjet::contrib::piranha::PiranhaError *) x));
}
static void *_p_fastjet__contrib__piranha__GhostGridRectangleTo_p_fastjet__contrib__piranha__GhostGridBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((fastjet::contrib::piranha::GhostGridBase *)  ((fastjet::contrib::piranha::GhostGridRectangle *) x));
}
static void *_p_fastjet__contrib__piranha__GhostGridDiskTo_p_fastjet__contrib__piranha__GhostGridBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((fastjet::contrib::piranha::GhostGridBase *)  ((fastjet::contrib::piranha::GhostGridDisk *) x));
}
static swig_type_info _swigt__p_Axis = {"_p_Axis", "Axis *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CGAL__Delaunay_triangulation_2T_fastjet__contrib__piranha__DynamicVoronoiBase__K_fastjet__contrib__piranha__DynamicVoronoiBase__Tds2_t__Point = {"_p_CGAL__Delaunay_triangulation_2T_fastjet__contrib__piranha__DynamicVoronoiBase__K_fastjet__contrib__piranha__DynamicVoronoiBase__Tds2_t__Point", "fastjet::contrib::piranha::DynamicVoronoiBase::Point *|CGAL::Delaunay_triangulation_2< fastjet::contrib::piranha::DynamicVoronoiBase::K,fastjet::contrib::piranha::DynamicVoronoiBase::Tds2 >::Point *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Event = {"_p_Event", "Event *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_EventVector = {"_p_EventVector", "EventVector *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Face_circulator = {"_p_Face_circulator", "Face_circulator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Face_handle = {"_p_Face_handle", "Face_handle *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IndexedPointsVec = {"_p_IndexedPointsVec", "IndexedPointsVec *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_K = {"_p_K", "K *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PairwiseDistance = {"_p_PairwiseDistance", "PairwiseDistance *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ParticleCollection = {"_p_ParticleCollection", "ParticleCollection *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ParticleWeight = {"_p_ParticleWeight", "ParticleWeight *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Point = {"_p_Point", "Point *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Search_traits_2 = {"_p_Search_traits_2", "Search_traits_2 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Self = {"_p_Self", "Self *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_StructureType = {"_p_StructureType", "StructureType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Tds2 = {"_p_Tds2", "Tds2 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Tfb2 = {"_p_Tfb2", "Tfb2 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Transform = {"_p_Transform", "Transform *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Triangulation = {"_p_Triangulation", "Triangulation *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Tvb2 = {"_p_Tvb2", "Tvb2 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ValuePublic = {"_p_ValuePublic", "ValuePublic *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Vertex_circulator = {"_p_Vertex_circulator", "Vertex_circulator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Vertex_handle = {"_p_Vertex_handle", "Vertex_handle *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_WeightCollection = {"_p_WeightCollection", "WeightCollection *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_allocator_type = {"_p_allocator_type", "allocator_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_char = {"_p_char", "char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_difference_type = {"_p_difference_type", "difference_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_double = {"_p_double", "fastjet::contrib::emd::Value *|double *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fastjet__BackgroundEstimatorBase = {"_p_fastjet__BackgroundEstimatorBase", "fastjet::BackgroundEstimatorBase *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fastjet__JetMedianBackgroundEstimator = {"_p_fastjet__JetMedianBackgroundEstimator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_fastjet__GridMedianBackgroundEstimator = {"_p_fastjet__GridMedianBackgroundEstimator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_fastjet__GhostedAreaSpec = {"_p_fastjet__GhostedAreaSpec", "fastjet::GhostedAreaSpec *|fastjet::ActiveAreaSpec *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fastjet__JetAlgorithm = {"_p_fastjet__JetAlgorithm", "enum fastjet::JetAlgorithm *|fastjet::JetFinder *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fastjet__PseudoJet = {"_p_fastjet__PseudoJet", "fastjet::PseudoJet *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Energy_fastjet__contrib__emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t = {"_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Energy_fastjet__contrib__emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t", "fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEArcLengthMassive,lemon::NetworkSimplex< > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Energy_fastjet__contrib__emd__EEArcLength_lemon__NetworkSimplexT_t_t = {"_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Energy_fastjet__contrib__emd__EEArcLength_lemon__NetworkSimplexT_t_t", "fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEArcLength,lemon::NetworkSimplex< > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Energy_fastjet__contrib__emd__EEDotMassive_lemon__NetworkSimplexT_t_t = {"_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Energy_fastjet__contrib__emd__EEDotMassive_lemon__NetworkSimplexT_t_t", "fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEDotMassive,lemon::NetworkSimplex< > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Energy_fastjet__contrib__emd__EEDot_lemon__NetworkSimplexT_t_t = {"_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Energy_fastjet__contrib__emd__EEDot_lemon__NetworkSimplexT_t_t", "fastjet::contrib::emd::EMD< fastjet::contrib::emd::Energy,fastjet::contrib::emd::EEDot,lemon::NetworkSimplex< > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Momentum_fastjet__contrib__emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t = {"_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Momentum_fastjet__contrib__emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t", "fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEArcLengthMassive,lemon::NetworkSimplex< > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Momentum_fastjet__contrib__emd__EEArcLength_lemon__NetworkSimplexT_t_t = {"_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Momentum_fastjet__contrib__emd__EEArcLength_lemon__NetworkSimplexT_t_t", "fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEArcLength,lemon::NetworkSimplex< > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Momentum_fastjet__contrib__emd__EEDotMassive_lemon__NetworkSimplexT_t_t = {"_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Momentum_fastjet__contrib__emd__EEDotMassive_lemon__NetworkSimplexT_t_t", "fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEDotMassive,lemon::NetworkSimplex< > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Momentum_fastjet__contrib__emd__EEDot_lemon__NetworkSimplexT_t_t = {"_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Momentum_fastjet__contrib__emd__EEDot_lemon__NetworkSimplexT_t_t", "fastjet::contrib::emd::EMD< fastjet::contrib::emd::Momentum,fastjet::contrib::emd::EEDot,lemon::NetworkSimplex< > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseEnergy_fastjet__contrib__emd__DeltaR_lemon__NetworkSimplexT_t_t = {"_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseEnergy_fastjet__contrib__emd__DeltaR_lemon__NetworkSimplexT_t_t", "fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseEnergy,fastjet::contrib::emd::DeltaR,lemon::NetworkSimplex< > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseEnergy_fastjet__contrib__emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t = {"_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseEnergy_fastjet__contrib__emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t", "fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseEnergy,fastjet::contrib::emd::HadronicDotMassive,lemon::NetworkSimplex< > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseEnergy_fastjet__contrib__emd__HadronicDot_lemon__NetworkSimplexT_t_t = {"_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseEnergy_fastjet__contrib__emd__HadronicDot_lemon__NetworkSimplexT_t_t", "fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseEnergy,fastjet::contrib::emd::HadronicDot,lemon::NetworkSimplex< > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseMomentum_fastjet__contrib__emd__DeltaR_lemon__NetworkSimplexT_t_t = {"_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseMomentum_fastjet__contrib__emd__DeltaR_lemon__NetworkSimplexT_t_t", "fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseMomentum,fastjet::contrib::emd::DeltaR,lemon::NetworkSimplex< > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseMomentum_fastjet__contrib__emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t = {"_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseMomentum_fastjet__contrib__emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t", "fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseMomentum,fastjet::contrib::emd::HadronicDotMassive,lemon::NetworkSimplex< > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseMomentum_fastjet__contrib__emd__HadronicDot_lemon__NetworkSimplexT_t_t = {"_p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseMomentum_fastjet__contrib__emd__HadronicDot_lemon__NetworkSimplexT_t_t", "fastjet::contrib::emd::EMD< fastjet::contrib::emd::TransverseMomentum,fastjet::contrib::emd::HadronicDot,lemon::NetworkSimplex< > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fastjet__contrib__piranha__DynamicVoronoiBase = {"_p_fastjet__contrib__piranha__DynamicVoronoiBase", "fastjet::contrib::piranha::DynamicVoronoiBase *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fastjet__contrib__piranha__DynamicVoronoiCylinder = {"_p_fastjet__contrib__piranha__DynamicVoronoiCylinder", "fastjet::contrib::piranha::DynamicVoronoiCylinder *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fastjet__contrib__piranha__DynamicVoronoiDisk = {"_p_fastjet__contrib__piranha__DynamicVoronoiDisk", "fastjet::contrib::piranha::DynamicVoronoiDisk *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fastjet__contrib__piranha__GhostGridBase = {"_p_fastjet__contrib__piranha__GhostGridBase", "fastjet::contrib::piranha::GhostGridBase *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fastjet__contrib__piranha__GhostGridDisk = {"_p_fastjet__contrib__piranha__GhostGridDisk", "fastjet::contrib::piranha::GhostGridDisk *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fastjet__contrib__piranha__GhostGridRectangle = {"_p_fastjet__contrib__piranha__GhostGridRectangle", "fastjet::contrib::piranha::GhostGridRectangle *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiCylinder_t = {"_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiCylinder_t", "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiCylinder > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiDisk_t = {"_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiDisk_t", "fastjet::contrib::piranha::IteratedVoronoiSubtractorBase< fastjet::contrib::piranha::DynamicVoronoiDisk > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fastjet__contrib__piranha__IteratedVoronoiSubtractorCylinder = {"_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorCylinder", "fastjet::contrib::piranha::IteratedVoronoiSubtractorCylinder *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fastjet__contrib__piranha__IteratedVoronoiSubtractorDisk = {"_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorDisk", "fastjet::contrib::piranha::IteratedVoronoiSubtractorDisk *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t_t = {"_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t_t", "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive > > *|fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLengthMassive,lemon::NetworkSimplex< > > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEArcLength_lemon__NetworkSimplexT_t_t_t = {"_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEArcLength_lemon__NetworkSimplexT_t_t_t", "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength > > *|fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEArcLength,lemon::NetworkSimplex< > > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEDotMassive_lemon__NetworkSimplexT_t_t_t = {"_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEDotMassive_lemon__NetworkSimplexT_t_t_t", "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive > > *|fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDotMassive,lemon::NetworkSimplex< > > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEDot_lemon__NetworkSimplexT_t_t_t = {"_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEDot_lemon__NetworkSimplexT_t_t_t", "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot > > *|fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Energy,emd::EEDot,lemon::NetworkSimplex< > > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t_t = {"_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t_t", "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive > > *|fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLengthMassive,lemon::NetworkSimplex< > > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEArcLength_lemon__NetworkSimplexT_t_t_t = {"_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEArcLength_lemon__NetworkSimplexT_t_t_t", "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength > > *|fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEArcLength,lemon::NetworkSimplex< > > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEDotMassive_lemon__NetworkSimplexT_t_t_t = {"_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEDotMassive_lemon__NetworkSimplexT_t_t_t", "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive > > *|fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDotMassive,lemon::NetworkSimplex< > > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEDot_lemon__NetworkSimplexT_t_t_t = {"_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEDot_lemon__NetworkSimplexT_t_t_t", "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot > > *|fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::Momentum,emd::EEDot,lemon::NetworkSimplex< > > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__DeltaR_lemon__NetworkSimplexT_t_t_t = {"_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__DeltaR_lemon__NetworkSimplexT_t_t_t", "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR > > *|fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::DeltaR,lemon::NetworkSimplex< > > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t_t = {"_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t_t", "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive > > *|fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDotMassive,lemon::NetworkSimplex< > > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__HadronicDot_lemon__NetworkSimplexT_t_t_t = {"_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__HadronicDot_lemon__NetworkSimplexT_t_t_t", "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot > > *|fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseEnergy,emd::HadronicDot,lemon::NetworkSimplex< > > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__DeltaR_lemon__NetworkSimplexT_t_t_t = {"_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__DeltaR_lemon__NetworkSimplexT_t_t_t", "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR > > *|fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::DeltaR,lemon::NetworkSimplex< > > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t_t = {"_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t_t", "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive > > *|fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDotMassive,lemon::NetworkSimplex< > > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__HadronicDot_lemon__NetworkSimplexT_t_t_t = {"_p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__HadronicDot_lemon__NetworkSimplexT_t_t_t", "fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot > > *|fastjet::contrib::piranha::OptimalTransportSubtractor< fastjet::contrib::emd::EMD< emd::TransverseMomentum,emd::HadronicDot,lemon::NetworkSimplex< > > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__Energy_t = {"_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__Energy_t", "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Energy > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__Momentum_t = {"_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__Momentum_t", "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::Momentum > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__TransverseEnergy_t = {"_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__TransverseEnergy_t", "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseEnergy > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__TransverseMomentum_t = {"_p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__TransverseMomentum_t", "fastjet::contrib::piranha::RecursiveSafeSubtractor< emd::TransverseMomentum > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fastjet__contrib__piranha__SubtractionHistory = {"_p_fastjet__contrib__piranha__SubtractionHistory", "fastjet::contrib::piranha::SubtractionHistory *|std::vector< fastjet::contrib::piranha::SubtractionHistory >::value_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_first_type = {"_p_first_type", "first_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_PyObject = {"_p_p_PyObject", "PyObject **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_second_type = {"_p_second_type", "second_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_size_type = {"_p_size_type", "size_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t = {"_p_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t", "std::allocator< fastjet::contrib::piranha::SubtractionHistory > *|std::vector< fastjet::contrib::piranha::SubtractionHistory >::allocator_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__allocatorT_int_t = {"_p_std__allocatorT_int_t", "std::vector< int >::allocator_type *|std::allocator< int > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__allocatorT_std__pairT_double_double_t_t = {"_p_std__allocatorT_std__pairT_double_double_t_t", "std::allocator< std::pair< double,double > > *|std::vector< std::pair< double,double > >::allocator_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t = {"_p_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t", "std::vector< std::vector< double > >::allocator_type *|std::allocator< std::vector< double,std::allocator< double > > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t = {"_p_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t", "std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > *|std::vector< std::vector< fastjet::PseudoJet > >::allocator_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__invalid_argument = {"_p_std__invalid_argument", "std::invalid_argument *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__pairT_double_double_t = {"_p_std__pairT_double_double_t", "std::pair< double,double > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__pairT_std__pairT_double_double_t_std__pairT_double_double_t_t = {"_p_std__pairT_std__pairT_double_double_t_std__pairT_double_double_t_t", "std::pair< std::pair< double,double >,std::pair< double,double > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__runtime_error = {"_p_std__runtime_error", "std::runtime_error *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fastjet__contrib__piranha__PiranhaError = {"_p_fastjet__contrib__piranha__PiranhaError", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_std__vectorT_CGAL__Delaunay_triangulation_2T_fastjet__contrib__piranha__DynamicVoronoiBase__K_fastjet__contrib__piranha__DynamicVoronoiBase__Tds2_t__Point_std__allocatorT_CGAL__Delaunay_triangulation_2T_fastjet__contrib__piranha__DynamicVoronoiBase__K_fastjet__contrib__piranha__DynamicVoronoiBase__Tds2_t__Point_t_t = {"_p_std__vectorT_CGAL__Delaunay_triangulation_2T_fastjet__contrib__piranha__DynamicVoronoiBase__K_fastjet__contrib__piranha__DynamicVoronoiBase__Tds2_t__Point_std__allocatorT_CGAL__Delaunay_triangulation_2T_fastjet__contrib__piranha__DynamicVoronoiBase__K_fastjet__contrib__piranha__DynamicVoronoiBase__Tds2_t__Point_t_t", "std::vector< fastjet::contrib::piranha::DynamicVoronoiBase::Point,std::allocator< fastjet::contrib::piranha::DynamicVoronoiBase::Point > > *|std::vector< CGAL::Delaunay_triangulation_2< fastjet::contrib::piranha::DynamicVoronoiBase::K,fastjet::contrib::piranha::DynamicVoronoiBase::Tds2 >::Point,std::allocator< CGAL::Delaunay_triangulation_2< fastjet::contrib::piranha::DynamicVoronoiBase::K,fastjet::contrib::piranha::DynamicVoronoiBase::Tds2 >::Point > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_double_std__allocatorT_double_t_t = {"_p_std__vectorT_double_std__allocatorT_double_t_t", "std::vector< double,std::allocator< double > > *|fastjet::contrib::emd::ValueVector *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t = {"_p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t", "std::vector< fastjet::contrib::piranha::SubtractionHistory > *|std::vector< fastjet::contrib::piranha::SubtractionHistory,std::allocator< fastjet::contrib::piranha::SubtractionHistory > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_int_std__allocatorT_int_t_t = {"_p_std__vectorT_int_std__allocatorT_int_t_t", "std::vector< int,std::allocator< int > > *|std::vector< int > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t = {"_p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t", "std::vector< std::pair< double,double > > *|std::vector< std::pair< double,double >,std::allocator< std::pair< double,double > > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t = {"_p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t", "std::vector< std::vector< double > > *|std::vector< std::vector< double,std::allocator< double > >,std::allocator< std::vector< double,std::allocator< double > > > > *|std::vector< std::vector< double,std::allocator< double > > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t = {"_p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t", "std::vector< std::vector< fastjet::PseudoJet > > *|std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > >,std::allocator< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > > *|std::vector< std::vector< fastjet::PseudoJet,std::allocator< fastjet::PseudoJet > > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_swig__SwigPyIterator = {"_p_swig__SwigPyIterator", "swig::SwigPyIterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_value_type = {"_p_value_type", "value_type *", 0, 0, (void*)0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt__p_Axis,
  &_swigt__p_CGAL__Delaunay_triangulation_2T_fastjet__contrib__piranha__DynamicVoronoiBase__K_fastjet__contrib__piranha__DynamicVoronoiBase__Tds2_t__Point,
  &_swigt__p_Event,
  &_swigt__p_EventVector,
  &_swigt__p_Face_circulator,
  &_swigt__p_Face_handle,
  &_swigt__p_IndexedPointsVec,
  &_swigt__p_K,
  &_swigt__p_PairwiseDistance,
  &_swigt__p_ParticleCollection,
  &_swigt__p_ParticleWeight,
  &_swigt__p_Point,
  &_swigt__p_Search_traits_2,
  &_swigt__p_Self,
  &_swigt__p_StructureType,
  &_swigt__p_Tds2,
  &_swigt__p_Tfb2,
  &_swigt__p_Transform,
  &_swigt__p_Triangulation,
  &_swigt__p_Tvb2,
  &_swigt__p_ValuePublic,
  &_swigt__p_Vertex_circulator,
  &_swigt__p_Vertex_handle,
  &_swigt__p_WeightCollection,
  &_swigt__p_allocator_type,
  &_swigt__p_char,
  &_swigt__p_difference_type,
  &_swigt__p_double,
  &_swigt__p_fastjet__BackgroundEstimatorBase,
  &_swigt__p_fastjet__GhostedAreaSpec,
  &_swigt__p_fastjet__GridMedianBackgroundEstimator,
  &_swigt__p_fastjet__JetAlgorithm,
  &_swigt__p_fastjet__JetMedianBackgroundEstimator,
  &_swigt__p_fastjet__PseudoJet,
  &_swigt__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Energy_fastjet__contrib__emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t,
  &_swigt__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Energy_fastjet__contrib__emd__EEArcLength_lemon__NetworkSimplexT_t_t,
  &_swigt__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Energy_fastjet__contrib__emd__EEDotMassive_lemon__NetworkSimplexT_t_t,
  &_swigt__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Energy_fastjet__contrib__emd__EEDot_lemon__NetworkSimplexT_t_t,
  &_swigt__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Momentum_fastjet__contrib__emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t,
  &_swigt__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Momentum_fastjet__contrib__emd__EEArcLength_lemon__NetworkSimplexT_t_t,
  &_swigt__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Momentum_fastjet__contrib__emd__EEDotMassive_lemon__NetworkSimplexT_t_t,
  &_swigt__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Momentum_fastjet__contrib__emd__EEDot_lemon__NetworkSimplexT_t_t,
  &_swigt__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseEnergy_fastjet__contrib__emd__DeltaR_lemon__NetworkSimplexT_t_t,
  &_swigt__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseEnergy_fastjet__contrib__emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t,
  &_swigt__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseEnergy_fastjet__contrib__emd__HadronicDot_lemon__NetworkSimplexT_t_t,
  &_swigt__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseMomentum_fastjet__contrib__emd__DeltaR_lemon__NetworkSimplexT_t_t,
  &_swigt__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseMomentum_fastjet__contrib__emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t,
  &_swigt__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseMomentum_fastjet__contrib__emd__HadronicDot_lemon__NetworkSimplexT_t_t,
  &_swigt__p_fastjet__contrib__piranha__DynamicVoronoiBase,
  &_swigt__p_fastjet__contrib__piranha__DynamicVoronoiCylinder,
  &_swigt__p_fastjet__contrib__piranha__DynamicVoronoiDisk,
  &_swigt__p_fastjet__contrib__piranha__GhostGridBase,
  &_swigt__p_fastjet__contrib__piranha__GhostGridDisk,
  &_swigt__p_fastjet__contrib__piranha__GhostGridRectangle,
  &_swigt__p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiCylinder_t,
  &_swigt__p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiDisk_t,
  &_swigt__p_fastjet__contrib__piranha__IteratedVoronoiSubtractorCylinder,
  &_swigt__p_fastjet__contrib__piranha__IteratedVoronoiSubtractorDisk,
  &_swigt__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t_t,
  &_swigt__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEArcLength_lemon__NetworkSimplexT_t_t_t,
  &_swigt__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEDotMassive_lemon__NetworkSimplexT_t_t_t,
  &_swigt__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEDot_lemon__NetworkSimplexT_t_t_t,
  &_swigt__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t_t,
  &_swigt__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEArcLength_lemon__NetworkSimplexT_t_t_t,
  &_swigt__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEDotMassive_lemon__NetworkSimplexT_t_t_t,
  &_swigt__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEDot_lemon__NetworkSimplexT_t_t_t,
  &_swigt__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__DeltaR_lemon__NetworkSimplexT_t_t_t,
  &_swigt__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t_t,
  &_swigt__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__HadronicDot_lemon__NetworkSimplexT_t_t_t,
  &_swigt__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__DeltaR_lemon__NetworkSimplexT_t_t_t,
  &_swigt__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t_t,
  &_swigt__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__HadronicDot_lemon__NetworkSimplexT_t_t_t,
  &_swigt__p_fastjet__contrib__piranha__PiranhaError,
  &_swigt__p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__Energy_t,
  &_swigt__p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__Momentum_t,
  &_swigt__p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__TransverseEnergy_t,
  &_swigt__p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__TransverseMomentum_t,
  &_swigt__p_fastjet__contrib__piranha__SubtractionHistory,
  &_swigt__p_first_type,
  &_swigt__p_p_PyObject,
  &_swigt__p_second_type,
  &_swigt__p_size_type,
  &_swigt__p_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t,
  &_swigt__p_std__allocatorT_int_t,
  &_swigt__p_std__allocatorT_std__pairT_double_double_t_t,
  &_swigt__p_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t,
  &_swigt__p_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t,
  &_swigt__p_std__invalid_argument,
  &_swigt__p_std__pairT_double_double_t,
  &_swigt__p_std__pairT_std__pairT_double_double_t_std__pairT_double_double_t_t,
  &_swigt__p_std__runtime_error,
  &_swigt__p_std__vectorT_CGAL__Delaunay_triangulation_2T_fastjet__contrib__piranha__DynamicVoronoiBase__K_fastjet__contrib__piranha__DynamicVoronoiBase__Tds2_t__Point_std__allocatorT_CGAL__Delaunay_triangulation_2T_fastjet__contrib__piranha__DynamicVoronoiBase__K_fastjet__contrib__piranha__DynamicVoronoiBase__Tds2_t__Point_t_t,
  &_swigt__p_std__vectorT_double_std__allocatorT_double_t_t,
  &_swigt__p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t,
  &_swigt__p_std__vectorT_int_std__allocatorT_int_t_t,
  &_swigt__p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t,
  &_swigt__p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t,
  &_swigt__p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t,
  &_swigt__p_swig__SwigPyIterator,
  &_swigt__p_value_type,
};

static swig_cast_info _swigc__p_Axis[] = {  {&_swigt__p_Axis, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CGAL__Delaunay_triangulation_2T_fastjet__contrib__piranha__DynamicVoronoiBase__K_fastjet__contrib__piranha__DynamicVoronoiBase__Tds2_t__Point[] = {  {&_swigt__p_CGAL__Delaunay_triangulation_2T_fastjet__contrib__piranha__DynamicVoronoiBase__K_fastjet__contrib__piranha__DynamicVoronoiBase__Tds2_t__Point, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Event[] = {  {&_swigt__p_Event, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_EventVector[] = {  {&_swigt__p_EventVector, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Face_circulator[] = {  {&_swigt__p_Face_circulator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Face_handle[] = {  {&_swigt__p_Face_handle, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IndexedPointsVec[] = {  {&_swigt__p_IndexedPointsVec, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_K[] = {  {&_swigt__p_K, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PairwiseDistance[] = {  {&_swigt__p_PairwiseDistance, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ParticleCollection[] = {  {&_swigt__p_ParticleCollection, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ParticleWeight[] = {  {&_swigt__p_ParticleWeight, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Point[] = {  {&_swigt__p_Point, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Search_traits_2[] = {  {&_swigt__p_Search_traits_2, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Self[] = {  {&_swigt__p_Self, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_StructureType[] = {  {&_swigt__p_StructureType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Tds2[] = {  {&_swigt__p_Tds2, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Tfb2[] = {  {&_swigt__p_Tfb2, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Transform[] = {  {&_swigt__p_Transform, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Triangulation[] = {  {&_swigt__p_Triangulation, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Tvb2[] = {  {&_swigt__p_Tvb2, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ValuePublic[] = {  {&_swigt__p_ValuePublic, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Vertex_circulator[] = {  {&_swigt__p_Vertex_circulator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Vertex_handle[] = {  {&_swigt__p_Vertex_handle, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_WeightCollection[] = {  {&_swigt__p_WeightCollection, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_allocator_type[] = {  {&_swigt__p_allocator_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_difference_type[] = {  {&_swigt__p_difference_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_double[] = {  {&_swigt__p_double, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fastjet__JetMedianBackgroundEstimator[] = {{&_swigt__p_fastjet__JetMedianBackgroundEstimator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fastjet__GridMedianBackgroundEstimator[] = {{&_swigt__p_fastjet__GridMedianBackgroundEstimator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fastjet__BackgroundEstimatorBase[] = {  {&_swigt__p_fastjet__JetMedianBackgroundEstimator, _p_fastjet__JetMedianBackgroundEstimatorTo_p_fastjet__BackgroundEstimatorBase, 0, 0},  {&_swigt__p_fastjet__GridMedianBackgroundEstimator, _p_fastjet__GridMedianBackgroundEstimatorTo_p_fastjet__BackgroundEstimatorBase, 0, 0},  {&_swigt__p_fastjet__BackgroundEstimatorBase, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fastjet__GhostedAreaSpec[] = {  {&_swigt__p_fastjet__GhostedAreaSpec, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fastjet__JetAlgorithm[] = {  {&_swigt__p_fastjet__JetAlgorithm, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fastjet__PseudoJet[] = {  {&_swigt__p_fastjet__PseudoJet, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Energy_fastjet__contrib__emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t[] = {  {&_swigt__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Energy_fastjet__contrib__emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Energy_fastjet__contrib__emd__EEArcLength_lemon__NetworkSimplexT_t_t[] = {  {&_swigt__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Energy_fastjet__contrib__emd__EEArcLength_lemon__NetworkSimplexT_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Energy_fastjet__contrib__emd__EEDotMassive_lemon__NetworkSimplexT_t_t[] = {  {&_swigt__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Energy_fastjet__contrib__emd__EEDotMassive_lemon__NetworkSimplexT_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Energy_fastjet__contrib__emd__EEDot_lemon__NetworkSimplexT_t_t[] = {  {&_swigt__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Energy_fastjet__contrib__emd__EEDot_lemon__NetworkSimplexT_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Momentum_fastjet__contrib__emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t[] = {  {&_swigt__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Momentum_fastjet__contrib__emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Momentum_fastjet__contrib__emd__EEArcLength_lemon__NetworkSimplexT_t_t[] = {  {&_swigt__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Momentum_fastjet__contrib__emd__EEArcLength_lemon__NetworkSimplexT_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Momentum_fastjet__contrib__emd__EEDotMassive_lemon__NetworkSimplexT_t_t[] = {  {&_swigt__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Momentum_fastjet__contrib__emd__EEDotMassive_lemon__NetworkSimplexT_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Momentum_fastjet__contrib__emd__EEDot_lemon__NetworkSimplexT_t_t[] = {  {&_swigt__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Momentum_fastjet__contrib__emd__EEDot_lemon__NetworkSimplexT_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseEnergy_fastjet__contrib__emd__DeltaR_lemon__NetworkSimplexT_t_t[] = {  {&_swigt__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseEnergy_fastjet__contrib__emd__DeltaR_lemon__NetworkSimplexT_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseEnergy_fastjet__contrib__emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t[] = {  {&_swigt__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseEnergy_fastjet__contrib__emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseEnergy_fastjet__contrib__emd__HadronicDot_lemon__NetworkSimplexT_t_t[] = {  {&_swigt__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseEnergy_fastjet__contrib__emd__HadronicDot_lemon__NetworkSimplexT_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseMomentum_fastjet__contrib__emd__DeltaR_lemon__NetworkSimplexT_t_t[] = {  {&_swigt__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseMomentum_fastjet__contrib__emd__DeltaR_lemon__NetworkSimplexT_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseMomentum_fastjet__contrib__emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t[] = {  {&_swigt__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseMomentum_fastjet__contrib__emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseMomentum_fastjet__contrib__emd__HadronicDot_lemon__NetworkSimplexT_t_t[] = {  {&_swigt__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseMomentum_fastjet__contrib__emd__HadronicDot_lemon__NetworkSimplexT_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fastjet__contrib__piranha__DynamicVoronoiBase[] = {  {&_swigt__p_fastjet__contrib__piranha__DynamicVoronoiDisk, _p_fastjet__contrib__piranha__DynamicVoronoiDiskTo_p_fastjet__contrib__piranha__DynamicVoronoiBase, 0, 0},  {&_swigt__p_fastjet__contrib__piranha__DynamicVoronoiBase, 0, 0, 0},  {&_swigt__p_fastjet__contrib__piranha__DynamicVoronoiCylinder, _p_fastjet__contrib__piranha__DynamicVoronoiCylinderTo_p_fastjet__contrib__piranha__DynamicVoronoiBase, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fastjet__contrib__piranha__DynamicVoronoiCylinder[] = {  {&_swigt__p_fastjet__contrib__piranha__DynamicVoronoiCylinder, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fastjet__contrib__piranha__DynamicVoronoiDisk[] = {  {&_swigt__p_fastjet__contrib__piranha__DynamicVoronoiDisk, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fastjet__contrib__piranha__GhostGridBase[] = {  {&_swigt__p_fastjet__contrib__piranha__GhostGridBase, 0, 0, 0},  {&_swigt__p_fastjet__contrib__piranha__GhostGridRectangle, _p_fastjet__contrib__piranha__GhostGridRectangleTo_p_fastjet__contrib__piranha__GhostGridBase, 0, 0},  {&_swigt__p_fastjet__contrib__piranha__GhostGridDisk, _p_fastjet__contrib__piranha__GhostGridDiskTo_p_fastjet__contrib__piranha__GhostGridBase, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fastjet__contrib__piranha__GhostGridDisk[] = {  {&_swigt__p_fastjet__contrib__piranha__GhostGridDisk, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fastjet__contrib__piranha__GhostGridRectangle[] = {  {&_swigt__p_fastjet__contrib__piranha__GhostGridRectangle, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiCylinder_t[] = {  {&_swigt__p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiCylinder_t, 0, 0, 0},  {&_swigt__p_fastjet__contrib__piranha__IteratedVoronoiSubtractorCylinder, _p_fastjet__contrib__piranha__IteratedVoronoiSubtractorCylinderTo_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiCylinder_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiDisk_t[] = {  {&_swigt__p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiDisk_t, 0, 0, 0},  {&_swigt__p_fastjet__contrib__piranha__IteratedVoronoiSubtractorDisk, _p_fastjet__contrib__piranha__IteratedVoronoiSubtractorDiskTo_p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiDisk_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fastjet__contrib__piranha__IteratedVoronoiSubtractorCylinder[] = {  {&_swigt__p_fastjet__contrib__piranha__IteratedVoronoiSubtractorCylinder, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fastjet__contrib__piranha__IteratedVoronoiSubtractorDisk[] = {  {&_swigt__p_fastjet__contrib__piranha__IteratedVoronoiSubtractorDisk, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t_t[] = {  {&_swigt__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEArcLength_lemon__NetworkSimplexT_t_t_t[] = {  {&_swigt__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEArcLength_lemon__NetworkSimplexT_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEDotMassive_lemon__NetworkSimplexT_t_t_t[] = {  {&_swigt__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEDotMassive_lemon__NetworkSimplexT_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEDot_lemon__NetworkSimplexT_t_t_t[] = {  {&_swigt__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEDot_lemon__NetworkSimplexT_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t_t[] = {  {&_swigt__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEArcLength_lemon__NetworkSimplexT_t_t_t[] = {  {&_swigt__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEArcLength_lemon__NetworkSimplexT_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEDotMassive_lemon__NetworkSimplexT_t_t_t[] = {  {&_swigt__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEDotMassive_lemon__NetworkSimplexT_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEDot_lemon__NetworkSimplexT_t_t_t[] = {  {&_swigt__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEDot_lemon__NetworkSimplexT_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__DeltaR_lemon__NetworkSimplexT_t_t_t[] = {  {&_swigt__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__DeltaR_lemon__NetworkSimplexT_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t_t[] = {  {&_swigt__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__HadronicDot_lemon__NetworkSimplexT_t_t_t[] = {  {&_swigt__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__HadronicDot_lemon__NetworkSimplexT_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__DeltaR_lemon__NetworkSimplexT_t_t_t[] = {  {&_swigt__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__DeltaR_lemon__NetworkSimplexT_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t_t[] = {  {&_swigt__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__HadronicDot_lemon__NetworkSimplexT_t_t_t[] = {  {&_swigt__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__HadronicDot_lemon__NetworkSimplexT_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__Energy_t[] = {  {&_swigt__p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__Energy_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__Momentum_t[] = {  {&_swigt__p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__Momentum_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__TransverseEnergy_t[] = {  {&_swigt__p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__TransverseEnergy_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__TransverseMomentum_t[] = {  {&_swigt__p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__TransverseMomentum_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fastjet__contrib__piranha__SubtractionHistory[] = {  {&_swigt__p_fastjet__contrib__piranha__SubtractionHistory, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_first_type[] = {  {&_swigt__p_first_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_PyObject[] = {  {&_swigt__p_p_PyObject, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_second_type[] = {  {&_swigt__p_second_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_size_type[] = {  {&_swigt__p_size_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t[] = {  {&_swigt__p_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__allocatorT_int_t[] = {  {&_swigt__p_std__allocatorT_int_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__allocatorT_std__pairT_double_double_t_t[] = {  {&_swigt__p_std__allocatorT_std__pairT_double_double_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t[] = {  {&_swigt__p_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t[] = {  {&_swigt__p_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__invalid_argument[] = {  {&_swigt__p_std__invalid_argument, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__pairT_double_double_t[] = {  {&_swigt__p_std__pairT_double_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__pairT_std__pairT_double_double_t_std__pairT_double_double_t_t[] = {  {&_swigt__p_std__pairT_std__pairT_double_double_t_std__pairT_double_double_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fastjet__contrib__piranha__PiranhaError[] = {{&_swigt__p_fastjet__contrib__piranha__PiranhaError, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__runtime_error[] = {  {&_swigt__p_std__runtime_error, 0, 0, 0},  {&_swigt__p_fastjet__contrib__piranha__PiranhaError, _p_fastjet__contrib__piranha__PiranhaErrorTo_p_std__runtime_error, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_CGAL__Delaunay_triangulation_2T_fastjet__contrib__piranha__DynamicVoronoiBase__K_fastjet__contrib__piranha__DynamicVoronoiBase__Tds2_t__Point_std__allocatorT_CGAL__Delaunay_triangulation_2T_fastjet__contrib__piranha__DynamicVoronoiBase__K_fastjet__contrib__piranha__DynamicVoronoiBase__Tds2_t__Point_t_t[] = {  {&_swigt__p_std__vectorT_CGAL__Delaunay_triangulation_2T_fastjet__contrib__piranha__DynamicVoronoiBase__K_fastjet__contrib__piranha__DynamicVoronoiBase__Tds2_t__Point_std__allocatorT_CGAL__Delaunay_triangulation_2T_fastjet__contrib__piranha__DynamicVoronoiBase__K_fastjet__contrib__piranha__DynamicVoronoiBase__Tds2_t__Point_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_double_std__allocatorT_double_t_t[] = {  {&_swigt__p_std__vectorT_double_std__allocatorT_double_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t[] = {  {&_swigt__p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_int_std__allocatorT_int_t_t[] = {  {&_swigt__p_std__vectorT_int_std__allocatorT_int_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t[] = {  {&_swigt__p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t[] = {  {&_swigt__p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t[] = {  {&_swigt__p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_swig__SwigPyIterator[] = {  {&_swigt__p_swig__SwigPyIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_value_type[] = {  {&_swigt__p_value_type, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc__p_Axis,
  _swigc__p_CGAL__Delaunay_triangulation_2T_fastjet__contrib__piranha__DynamicVoronoiBase__K_fastjet__contrib__piranha__DynamicVoronoiBase__Tds2_t__Point,
  _swigc__p_Event,
  _swigc__p_EventVector,
  _swigc__p_Face_circulator,
  _swigc__p_Face_handle,
  _swigc__p_IndexedPointsVec,
  _swigc__p_K,
  _swigc__p_PairwiseDistance,
  _swigc__p_ParticleCollection,
  _swigc__p_ParticleWeight,
  _swigc__p_Point,
  _swigc__p_Search_traits_2,
  _swigc__p_Self,
  _swigc__p_StructureType,
  _swigc__p_Tds2,
  _swigc__p_Tfb2,
  _swigc__p_Transform,
  _swigc__p_Triangulation,
  _swigc__p_Tvb2,
  _swigc__p_ValuePublic,
  _swigc__p_Vertex_circulator,
  _swigc__p_Vertex_handle,
  _swigc__p_WeightCollection,
  _swigc__p_allocator_type,
  _swigc__p_char,
  _swigc__p_difference_type,
  _swigc__p_double,
  _swigc__p_fastjet__BackgroundEstimatorBase,
  _swigc__p_fastjet__GhostedAreaSpec,
  _swigc__p_fastjet__GridMedianBackgroundEstimator,
  _swigc__p_fastjet__JetAlgorithm,
  _swigc__p_fastjet__JetMedianBackgroundEstimator,
  _swigc__p_fastjet__PseudoJet,
  _swigc__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Energy_fastjet__contrib__emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t,
  _swigc__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Energy_fastjet__contrib__emd__EEArcLength_lemon__NetworkSimplexT_t_t,
  _swigc__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Energy_fastjet__contrib__emd__EEDotMassive_lemon__NetworkSimplexT_t_t,
  _swigc__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Energy_fastjet__contrib__emd__EEDot_lemon__NetworkSimplexT_t_t,
  _swigc__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Momentum_fastjet__contrib__emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t,
  _swigc__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Momentum_fastjet__contrib__emd__EEArcLength_lemon__NetworkSimplexT_t_t,
  _swigc__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Momentum_fastjet__contrib__emd__EEDotMassive_lemon__NetworkSimplexT_t_t,
  _swigc__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__Momentum_fastjet__contrib__emd__EEDot_lemon__NetworkSimplexT_t_t,
  _swigc__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseEnergy_fastjet__contrib__emd__DeltaR_lemon__NetworkSimplexT_t_t,
  _swigc__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseEnergy_fastjet__contrib__emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t,
  _swigc__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseEnergy_fastjet__contrib__emd__HadronicDot_lemon__NetworkSimplexT_t_t,
  _swigc__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseMomentum_fastjet__contrib__emd__DeltaR_lemon__NetworkSimplexT_t_t,
  _swigc__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseMomentum_fastjet__contrib__emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t,
  _swigc__p_fastjet__contrib__emd__EMDT_fastjet__contrib__emd__TransverseMomentum_fastjet__contrib__emd__HadronicDot_lemon__NetworkSimplexT_t_t,
  _swigc__p_fastjet__contrib__piranha__DynamicVoronoiBase,
  _swigc__p_fastjet__contrib__piranha__DynamicVoronoiCylinder,
  _swigc__p_fastjet__contrib__piranha__DynamicVoronoiDisk,
  _swigc__p_fastjet__contrib__piranha__GhostGridBase,
  _swigc__p_fastjet__contrib__piranha__GhostGridDisk,
  _swigc__p_fastjet__contrib__piranha__GhostGridRectangle,
  _swigc__p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiCylinder_t,
  _swigc__p_fastjet__contrib__piranha__IteratedVoronoiSubtractorBaseT_fastjet__contrib__piranha__DynamicVoronoiDisk_t,
  _swigc__p_fastjet__contrib__piranha__IteratedVoronoiSubtractorCylinder,
  _swigc__p_fastjet__contrib__piranha__IteratedVoronoiSubtractorDisk,
  _swigc__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t_t,
  _swigc__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEArcLength_lemon__NetworkSimplexT_t_t_t,
  _swigc__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEDotMassive_lemon__NetworkSimplexT_t_t_t,
  _swigc__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Energy_emd__EEDot_lemon__NetworkSimplexT_t_t_t,
  _swigc__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEArcLengthMassive_lemon__NetworkSimplexT_t_t_t,
  _swigc__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEArcLength_lemon__NetworkSimplexT_t_t_t,
  _swigc__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEDotMassive_lemon__NetworkSimplexT_t_t_t,
  _swigc__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__Momentum_emd__EEDot_lemon__NetworkSimplexT_t_t_t,
  _swigc__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__DeltaR_lemon__NetworkSimplexT_t_t_t,
  _swigc__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t_t,
  _swigc__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseEnergy_emd__HadronicDot_lemon__NetworkSimplexT_t_t_t,
  _swigc__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__DeltaR_lemon__NetworkSimplexT_t_t_t,
  _swigc__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__HadronicDotMassive_lemon__NetworkSimplexT_t_t_t,
  _swigc__p_fastjet__contrib__piranha__OptimalTransportSubtractorT_fastjet__contrib__emd__EMDT_emd__TransverseMomentum_emd__HadronicDot_lemon__NetworkSimplexT_t_t_t,
  _swigc__p_fastjet__contrib__piranha__PiranhaError,
  _swigc__p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__Energy_t,
  _swigc__p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__Momentum_t,
  _swigc__p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__TransverseEnergy_t,
  _swigc__p_fastjet__contrib__piranha__RecursiveSafeSubtractorT_emd__TransverseMomentum_t,
  _swigc__p_fastjet__contrib__piranha__SubtractionHistory,
  _swigc__p_first_type,
  _swigc__p_p_PyObject,
  _swigc__p_second_type,
  _swigc__p_size_type,
  _swigc__p_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t,
  _swigc__p_std__allocatorT_int_t,
  _swigc__p_std__allocatorT_std__pairT_double_double_t_t,
  _swigc__p_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t,
  _swigc__p_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t,
  _swigc__p_std__invalid_argument,
  _swigc__p_std__pairT_double_double_t,
  _swigc__p_std__pairT_std__pairT_double_double_t_std__pairT_double_double_t_t,
  _swigc__p_std__runtime_error,
  _swigc__p_std__vectorT_CGAL__Delaunay_triangulation_2T_fastjet__contrib__piranha__DynamicVoronoiBase__K_fastjet__contrib__piranha__DynamicVoronoiBase__Tds2_t__Point_std__allocatorT_CGAL__Delaunay_triangulation_2T_fastjet__contrib__piranha__DynamicVoronoiBase__K_fastjet__contrib__piranha__DynamicVoronoiBase__Tds2_t__Point_t_t,
  _swigc__p_std__vectorT_double_std__allocatorT_double_t_t,
  _swigc__p_std__vectorT_fastjet__contrib__piranha__SubtractionHistory_std__allocatorT_fastjet__contrib__piranha__SubtractionHistory_t_t,
  _swigc__p_std__vectorT_int_std__allocatorT_int_t_t,
  _swigc__p_std__vectorT_std__pairT_double_double_t_std__allocatorT_std__pairT_double_double_t_t_t,
  _swigc__p_std__vectorT_std__vectorT_double_std__allocatorT_double_t_t_std__allocatorT_std__vectorT_double_std__allocatorT_double_t_t_t_t,
  _swigc__p_std__vectorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_std__allocatorT_std__vectorT_fastjet__PseudoJet_std__allocatorT_fastjet__PseudoJet_t_t_t_t,
  _swigc__p_swig__SwigPyIterator,
  _swigc__p_value_type,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_const_info swig_const_table[] = {
{0, 0, 0, 0.0, 0, 0}};

#ifdef __cplusplus
}
#endif
/* -----------------------------------------------------------------------------
 * Type initialization:
 * This problem is tough by the requirement that no dynamic
 * memory is used. Also, since swig_type_info structures store pointers to
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization.
 * The idea is that swig generates all the structures that are needed.
 * The runtime then collects these partially filled structures.
 * The SWIG_InitializeModule function takes these initial arrays out of
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.
 *
 * The generated swig_type_info structures are assigned statically to an initial
 * array. We just loop through that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.
 *
 * First off, we lookup the cast->type name to see if it is already loaded.
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* c-mode */
#endif
#endif

#if 0
#define SWIGRUNTIME_DEBUG
#endif


SWIGRUNTIME void
SWIG_InitializeModule(void *clientdata) {
  size_t i;
  swig_module_info *module_head, *iter;
  int init;
  
  /* check to see if the circular list has been setup, if not, set it up */
  if (swig_module.next==0) {
    /* Initialize the swig_module */
    swig_module.type_initial = swig_type_initial;
    swig_module.cast_initial = swig_cast_initial;
    swig_module.next = &swig_module;
    init = 1;
  } else {
    init = 0;
  }
  
  /* Try and load any already created modules */
  module_head = SWIG_GetModule(clientdata);
  if (!module_head) {
    /* This is the first module loaded for this interpreter */
    /* so set the swig module into the interpreter */
    SWIG_SetModule(clientdata, &swig_module);
  } else {
    /* the interpreter has loaded a SWIG module, but has it loaded this one? */
    iter=module_head;
    do {
      if (iter==&swig_module) {
        /* Our module is already in the list, so there's nothing more to do. */
        return;
      }
      iter=iter->next;
    } while (iter!= module_head);
    
    /* otherwise we must add our module into the list */
    swig_module.next = module_head->next;
    module_head->next = &swig_module;
  }
  
  /* When multiple interpreters are used, a module could have already been initialized in
       a different interpreter, but not yet have a pointer in this interpreter.
       In this case, we do not want to continue adding types... everything should be
       set up already */
  if (init == 0) return;
  
  /* Now work on filling in swig_module.types */
#ifdef SWIGRUNTIME_DEBUG
  printf("SWIG_InitializeModule: size %lu\n", (unsigned long)swig_module.size);
#endif
  for (i = 0; i < swig_module.size; ++i) {
    swig_type_info *type = 0;
    swig_type_info *ret;
    swig_cast_info *cast;
    
#ifdef SWIGRUNTIME_DEBUG
    printf("SWIG_InitializeModule: type %lu %s\n", (unsigned long)i, swig_module.type_initial[i]->name);
#endif
    
    /* if there is another module already loaded */
    if (swig_module.next != &swig_module) {
      type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
    }
    if (type) {
      /* Overwrite clientdata field */
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found type %s\n", type->name);
#endif
      if (swig_module.type_initial[i]->clientdata) {
        type->clientdata = swig_module.type_initial[i]->clientdata;
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: found and overwrite type %s \n", type->name);
#endif
      }
    } else {
      type = swig_module.type_initial[i];
    }
    
    /* Insert casting types */
    cast = swig_module.cast_initial[i];
    while (cast->type) {
      /* Don't need to add information already in the list */
      ret = 0;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: look cast %s\n", cast->type->name);
#endif
      if (swig_module.next != &swig_module) {
        ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
#ifdef SWIGRUNTIME_DEBUG
        if (ret) printf("SWIG_InitializeModule: found cast %s\n", ret->name);
#endif
      }
      if (ret) {
        if (type == swig_module.type_initial[i]) {
#ifdef SWIGRUNTIME_DEBUG
          printf("SWIG_InitializeModule: skip old type %s\n", ret->name);
#endif
          cast->type = ret;
          ret = 0;
        } else {
          /* Check for casting already in the list */
          swig_cast_info *ocast = SWIG_TypeCheck(ret->name, type);
#ifdef SWIGRUNTIME_DEBUG
          if (ocast) printf("SWIG_InitializeModule: skip old cast %s\n", ret->name);
#endif
          if (!ocast) ret = 0;
        }
      }
      
      if (!ret) {
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: adding cast %s\n", cast->type->name);
#endif
        if (type->cast) {
          type->cast->prev = cast;
          cast->next = type->cast;
        }
        type->cast = cast;
      }
      cast++;
    }
    /* Set entry in modules->types array equal to the type */
    swig_module.types[i] = type;
  }
  swig_module.types[i] = 0;
  
#ifdef SWIGRUNTIME_DEBUG
  printf("**** SWIG_InitializeModule: Cast List ******\n");
  for (i = 0; i < swig_module.size; ++i) {
    int j = 0;
    swig_cast_info *cast = swig_module.cast_initial[i];
    printf("SWIG_InitializeModule: type %lu %s\n", (unsigned long)i, swig_module.type_initial[i]->name);
    while (cast->type) {
      printf("SWIG_InitializeModule: cast type %s\n", cast->type->name);
      cast++;
      ++j;
    }
    printf("---- Total casts: %d\n",j);
  }
  printf("**** SWIG_InitializeModule: Cast List ******\n");
#endif
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientData(void) {
  size_t i;
  swig_cast_info *equiv;
  static int init_run = 0;
  
  if (init_run) return;
  init_run = 1;
  
  for (i = 0; i < swig_module.size; i++) {
    if (swig_module.types[i]->clientdata) {
      equiv = swig_module.types[i]->cast;
      while (equiv) {
        if (!equiv->converter) {
          if (equiv->type && !equiv->type->clientdata)
          SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
        }
        equiv = equiv->next;
      }
    }
  }
}

#ifdef __cplusplus
#if 0
{
  /* c-mode */
#endif
}
#endif



#ifdef __cplusplus
extern "C" {
#endif
  
  /* Python-specific SWIG API */
#define SWIG_newvarlink()                             SWIG_Python_newvarlink()
#define SWIG_addvarlink(p, name, get_attr, set_attr)  SWIG_Python_addvarlink(p, name, get_attr, set_attr)
#define SWIG_InstallConstants(d, constants)           SWIG_Python_InstallConstants(d, constants)
  
  /* -----------------------------------------------------------------------------
   * global variable support code.
   * ----------------------------------------------------------------------------- */
  
  typedef struct swig_globalvar {
    char       *name;                  /* Name of global variable */
    PyObject *(*get_attr)(void);       /* Return the current value */
    int       (*set_attr)(PyObject *); /* Set the value */
    struct swig_globalvar *next;
  } swig_globalvar;
  
  typedef struct swig_varlinkobject {
    PyObject_HEAD
    swig_globalvar *vars;
  } swig_varlinkobject;
  
  SWIGINTERN PyObject *
  swig_varlink_repr(swig_varlinkobject *SWIGUNUSEDPARM(v)) {
#if PY_VERSION_HEX >= 0x03000000
    return PyUnicode_InternFromString("<Swig global variables>");
#else
    return PyString_FromString("<Swig global variables>");
#endif
  }
  
  SWIGINTERN PyObject *
  swig_varlink_str(swig_varlinkobject *v) {
#if PY_VERSION_HEX >= 0x03000000
    PyObject *str = PyUnicode_InternFromString("(");
    PyObject *tail;
    PyObject *joined;
    swig_globalvar *var;
    for (var = v->vars; var; var=var->next) {
      tail = PyUnicode_FromString(var->name);
      joined = PyUnicode_Concat(str, tail);
      Py_DecRef(str);
      Py_DecRef(tail);
      str = joined;
      if (var->next) {
        tail = PyUnicode_InternFromString(", ");
        joined = PyUnicode_Concat(str, tail);
        Py_DecRef(str);
        Py_DecRef(tail);
        str = joined;
      }
    }
    tail = PyUnicode_InternFromString(")");
    joined = PyUnicode_Concat(str, tail);
    Py_DecRef(str);
    Py_DecRef(tail);
    str = joined;
#else
    PyObject *str = PyString_FromString("(");
    swig_globalvar *var;
    for (var = v->vars; var; var=var->next) {
      PyString_ConcatAndDel(&str,PyString_FromString(var->name));
      if (var->next) PyString_ConcatAndDel(&str,PyString_FromString(", "));
    }
    PyString_ConcatAndDel(&str,PyString_FromString(")"));
#endif
    return str;
  }
  
  SWIGINTERN void
  swig_varlink_dealloc(swig_varlinkobject *v) {
    swig_globalvar *var = v->vars;
    while (var) {
      swig_globalvar *n = var->next;
      free(var->name);
      free(var);
      var = n;
    }
  }
  
  SWIGINTERN PyObject *
  swig_varlink_getattr(swig_varlinkobject *v, char *n) {
    PyObject *res = NULL;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->get_attr)();
        break;
      }
      var = var->next;
    }
    if (res == NULL && !PyErr_Occurred()) {
      PyErr_Format(PyExc_AttributeError, "Unknown C global variable '%s'", n);
    }
    return res;
  }
  
  SWIGINTERN int
  swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {
    int res = 1;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->set_attr)(p);
        break;
      }
      var = var->next;
    }
    if (res == 1 && !PyErr_Occurred()) {
      PyErr_Format(PyExc_AttributeError, "Unknown C global variable '%s'", n);
    }
    return res;
  }
  
  SWIGINTERN PyTypeObject*
  swig_varlink_type(void) {
    static char varlink__doc__[] = "Swig var link object";
    static PyTypeObject varlink_type;
    static int type_init = 0;
    if (!type_init) {
      const PyTypeObject tmp = {
#if PY_VERSION_HEX >= 0x03000000
        PyVarObject_HEAD_INIT(NULL, 0)
#else
        PyObject_HEAD_INIT(NULL)
        0,                                  /* ob_size */
#endif
        "swigvarlink",                      /* tp_name */
        sizeof(swig_varlinkobject),         /* tp_basicsize */
        0,                                  /* tp_itemsize */
        (destructor) swig_varlink_dealloc,  /* tp_dealloc */
        0,                                  /* tp_print */
        (getattrfunc) swig_varlink_getattr, /* tp_getattr */
        (setattrfunc) swig_varlink_setattr, /* tp_setattr */
        0,                                  /* tp_compare */
        (reprfunc) swig_varlink_repr,       /* tp_repr */
        0,                                  /* tp_as_number */
        0,                                  /* tp_as_sequence */
        0,                                  /* tp_as_mapping */
        0,                                  /* tp_hash */
        0,                                  /* tp_call */
        (reprfunc) swig_varlink_str,        /* tp_str */
        0,                                  /* tp_getattro */
        0,                                  /* tp_setattro */
        0,                                  /* tp_as_buffer */
        0,                                  /* tp_flags */
        varlink__doc__,                     /* tp_doc */
        0,                                  /* tp_traverse */
        0,                                  /* tp_clear */
        0,                                  /* tp_richcompare */
        0,                                  /* tp_weaklistoffset */
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, /* tp_iter -> tp_weaklist */
        0,                                  /* tp_del */
        0,                                  /* tp_version_tag */
#if PY_VERSION_HEX >= 0x03040000
        0,                                  /* tp_finalize */
#endif
#if PY_VERSION_HEX >= 0x03080000
        0,                                  /* tp_vectorcall */
#endif
#if (PY_VERSION_HEX >= 0x03080000) && (PY_VERSION_HEX < 0x03090000)
        0,                                  /* tp_print */
#endif
#ifdef COUNT_ALLOCS
        0,                                  /* tp_allocs */
        0,                                  /* tp_frees */
        0,                                  /* tp_maxalloc */
        0,                                  /* tp_prev */
        0                                   /* tp_next */
#endif
      };
      varlink_type = tmp;
      type_init = 1;
      if (PyType_Ready(&varlink_type) < 0)
      return NULL;
    }
    return &varlink_type;
  }
  
  /* Create a variable linking object for use later */
  SWIGINTERN PyObject *
  SWIG_Python_newvarlink(void) {
    swig_varlinkobject *result = PyObject_NEW(swig_varlinkobject, swig_varlink_type());
    if (result) {
      result->vars = 0;
    }
    return ((PyObject*) result);
  }
  
  SWIGINTERN void 
  SWIG_Python_addvarlink(PyObject *p, const char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {
    swig_varlinkobject *v = (swig_varlinkobject *) p;
    swig_globalvar *gv = (swig_globalvar *) malloc(sizeof(swig_globalvar));
    if (gv) {
      size_t size = strlen(name)+1;
      gv->name = (char *)malloc(size);
      if (gv->name) {
        memcpy(gv->name, name, size);
        gv->get_attr = get_attr;
        gv->set_attr = set_attr;
        gv->next = v->vars;
      }
    }
    v->vars = gv;
  }
  
  SWIGINTERN PyObject *
  SWIG_globals(void) {
    static PyObject *globals = 0;
    if (!globals) {
      globals = SWIG_newvarlink();
    }
    return globals;
  }
  
  /* -----------------------------------------------------------------------------
   * constants/methods manipulation
   * ----------------------------------------------------------------------------- */
  
  /* Install Constants */
  SWIGINTERN void
  SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {
    PyObject *obj = 0;
    size_t i;
    for (i = 0; constants[i].type; ++i) {
      switch(constants[i].type) {
      case SWIG_PY_POINTER:
        obj = SWIG_InternalNewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
        break;
      case SWIG_PY_BINARY:
        obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
        break;
      default:
        obj = 0;
        break;
      }
      if (obj) {
        PyDict_SetItemString(d, constants[i].name, obj);
        Py_DECREF(obj);
      }
    }
  }
  
  /* -----------------------------------------------------------------------------*/
  /* Fix SwigMethods to carry the callback ptrs when needed */
  /* -----------------------------------------------------------------------------*/
  
  SWIGINTERN void
  SWIG_Python_FixMethods(PyMethodDef *methods,
    swig_const_info *const_table,
    swig_type_info **types,
    swig_type_info **types_initial) {
    size_t i;
    for (i = 0; methods[i].ml_name; ++i) {
      const char *c = methods[i].ml_doc;
      if (!c) continue;
      c = strstr(c, "swig_ptr: ");
      if (c) {
        int j;
        swig_const_info *ci = 0;
        const char *name = c + 10;
        for (j = 0; const_table[j].type; ++j) {
          if (strncmp(const_table[j].name, name, 
              strlen(const_table[j].name)) == 0) {
            ci = &(const_table[j]);
            break;
          }
        }
        if (ci) {
          void *ptr = (ci->type == SWIG_PY_POINTER) ? ci->pvalue : 0;
          if (ptr) {
            size_t shift = (ci->ptype) - types;
            swig_type_info *ty = types_initial[shift];
            size_t ldoc = (c - methods[i].ml_doc);
            size_t lptr = strlen(ty->name)+2*sizeof(void*)+2;
            char *ndoc = (char*)malloc(ldoc + lptr + 10);
            if (ndoc) {
              char *buff = ndoc;
              memcpy(buff, methods[i].ml_doc, ldoc);
              buff += ldoc;
              memcpy(buff, "swig_ptr: ", 10);
              buff += 10;
              SWIG_PackVoidPtr(buff, ptr, ty->name, lptr);
              methods[i].ml_doc = ndoc;
            }
          }
        }
      }
    }
  } 
  
  /* -----------------------------------------------------------------------------
   * Method creation and docstring support functions
   * ----------------------------------------------------------------------------- */
  
  /* -----------------------------------------------------------------------------
   * Function to find the method definition with the correct docstring for the
   * proxy module as opposed to the low-level API
   * ----------------------------------------------------------------------------- */
  
  SWIGINTERN PyMethodDef *SWIG_PythonGetProxyDoc(const char *name) {
    /* Find the function in the modified method table */
    size_t offset = 0;
    int found = 0;
    while (SwigMethods_proxydocs[offset].ml_meth != NULL) {
      if (strcmp(SwigMethods_proxydocs[offset].ml_name, name) == 0) {
        found = 1;
        break;
      }
      offset++;
    }
    /* Use the copy with the modified docstring if available */
    return found ? &SwigMethods_proxydocs[offset] : NULL;
  }
  
  /* -----------------------------------------------------------------------------
   * Wrapper of PyInstanceMethod_New() used in Python 3
   * It is exported to the generated module, used for -fastproxy
   * ----------------------------------------------------------------------------- */
  
  SWIGINTERN PyObject *SWIG_PyInstanceMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *func) {
    if (PyCFunction_Check(func)) {
      PyCFunctionObject *funcobj = (PyCFunctionObject *)func;
      PyMethodDef *ml = SWIG_PythonGetProxyDoc(funcobj->m_ml->ml_name);
      if (ml)
      func = PyCFunction_NewEx(ml, funcobj->m_self, funcobj->m_module);
    }
#if PY_VERSION_HEX >= 0x03000000
    return PyInstanceMethod_New(func);
#else
    return PyMethod_New(func, NULL, NULL);
#endif
  }
  
  /* -----------------------------------------------------------------------------
   * Wrapper of PyStaticMethod_New()
   * It is exported to the generated module, used for -fastproxy
   * ----------------------------------------------------------------------------- */
  
  SWIGINTERN PyObject *SWIG_PyStaticMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *func) {
    if (PyCFunction_Check(func)) {
      PyCFunctionObject *funcobj = (PyCFunctionObject *)func;
      PyMethodDef *ml = SWIG_PythonGetProxyDoc(funcobj->m_ml->ml_name);
      if (ml)
      func = PyCFunction_NewEx(ml, funcobj->m_self, funcobj->m_module);
    }
    return PyStaticMethod_New(func);
  }
  
#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------*
 *  Partial Init method
 * -----------------------------------------------------------------------------*/

#ifdef __cplusplus
extern "C"
#endif

SWIGEXPORT 
#if PY_VERSION_HEX >= 0x03000000
PyObject*
#else
void
#endif
SWIG_init(void) {
  PyObject *m, *d, *md, *globals;
  
#if PY_VERSION_HEX >= 0x03000000
  static struct PyModuleDef SWIG_module = {
    PyModuleDef_HEAD_INIT,
    SWIG_name,
    NULL,
    -1,
    SwigMethods,
    NULL,
    NULL,
    NULL,
    NULL
  };
#endif
  
#if defined(SWIGPYTHON_BUILTIN)
  static SwigPyClientData SwigPyObject_clientdata = {
    0, 0, 0, 0, 0, 0, 0
  };
  static PyGetSetDef this_getset_def = {
    (char *)"this", &SwigPyBuiltin_ThisClosure, NULL, NULL, NULL
  };
  static SwigPyGetSet thisown_getset_closure = {
    SwigPyObject_own,
    SwigPyObject_own
  };
  static PyGetSetDef thisown_getset_def = {
    (char *)"thisown", SwigPyBuiltin_GetterClosure, SwigPyBuiltin_SetterClosure, NULL, &thisown_getset_closure
  };
  PyTypeObject *builtin_pytype;
  int builtin_base_count;
  swig_type_info *builtin_basetype;
  PyObject *tuple;
  PyGetSetDescrObject *static_getset;
  PyTypeObject *metatype;
  PyTypeObject *swigpyobject;
  SwigPyClientData *cd;
  PyObject *public_interface, *public_symbol;
  PyObject *this_descr;
  PyObject *thisown_descr;
  PyObject *self = 0;
  int i;
  
  (void)builtin_pytype;
  (void)builtin_base_count;
  (void)builtin_basetype;
  (void)tuple;
  (void)static_getset;
  (void)self;
  
  /* Metaclass is used to implement static member variables */
  metatype = SwigPyObjectType();
  assert(metatype);
#endif
  
  (void)globals;
  
  /* Create singletons now to avoid potential deadlocks with multi-threaded usage after module initialization */
  SWIG_This();
  SWIG_Python_TypeCache();
  SwigPyPacked_type();
#ifndef SWIGPYTHON_BUILTIN
  SwigPyObject_type();
#endif
  
  /* Fix SwigMethods to carry the callback ptrs when needed */
  SWIG_Python_FixMethods(SwigMethods, swig_const_table, swig_types, swig_type_initial);
  
#if PY_VERSION_HEX >= 0x03000000
  m = PyModule_Create(&SWIG_module);
#else
  m = Py_InitModule(SWIG_name, SwigMethods);
#endif
  
  md = d = PyModule_GetDict(m);
  (void)md;
  
  SWIG_InitializeModule(0);
  
#ifdef SWIGPYTHON_BUILTIN
  swigpyobject = SwigPyObject_TypeOnce();
  
  SwigPyObject_stype = SWIG_MangledTypeQuery("_p_SwigPyObject");
  assert(SwigPyObject_stype);
  cd = (SwigPyClientData*) SwigPyObject_stype->clientdata;
  if (!cd) {
    SwigPyObject_stype->clientdata = &SwigPyObject_clientdata;
    SwigPyObject_clientdata.pytype = swigpyobject;
  } else if (swigpyobject->tp_basicsize != cd->pytype->tp_basicsize) {
    PyErr_SetString(PyExc_RuntimeError, "Import error: attempted to load two incompatible swig-generated modules.");
# if PY_VERSION_HEX >= 0x03000000
    return NULL;
# else
    return;
# endif
  }
  
  /* All objects have a 'this' attribute */
  this_descr = PyDescr_NewGetSet(SwigPyObject_type(), &this_getset_def);
  (void)this_descr;
  
  /* All objects have a 'thisown' attribute */
  thisown_descr = PyDescr_NewGetSet(SwigPyObject_type(), &thisown_getset_def);
  (void)thisown_descr;
  
  public_interface = PyList_New(0);
  public_symbol = 0;
  (void)public_symbol;
  
  PyDict_SetItemString(md, "__all__", public_interface);
  Py_DECREF(public_interface);
  for (i = 0; SwigMethods[i].ml_name != NULL; ++i)
  SwigPyBuiltin_AddPublicSymbol(public_interface, SwigMethods[i].ml_name);
  for (i = 0; swig_const_table[i].name != 0; ++i)
  SwigPyBuiltin_AddPublicSymbol(public_interface, swig_const_table[i].name);
#endif
  
  SWIG_InstallConstants(d,swig_const_table);
  
  
  fastjet::Error::set_print_errors(false);
  FastJetError_ = PyErr_NewException("Piranha" ".FastJetError", NULL, NULL);
  Py_INCREF(FastJetError_);
  if (PyModule_AddObject(m, "FastJetError", FastJetError_) < 0) {
    Py_DECREF(m);
    Py_DECREF(FastJetError_);
#if PY_VERSION_HEX >= 0x03000000
    return NULL;
#else
    return;
#endif
  }
  
  
  // thread safe initialization
  swig::container_owner_attribute();
  
  SWIG_Python_SetConstant(d, "VERBOSE",SWIG_From_int(static_cast< int >(1)));
  SWIG_Python_SetConstant(d, "INFINITE_VERTEX_ID",SWIG_From_int(static_cast< int >(-1)));
  SWIG_Python_SetConstant(d, "DEFAULT_VORONOI_QUANTITY",SWIG_From_double(static_cast< double >(-1.0)));
  SWIG_Python_SetConstant(d, "REMOVED_COINCIDENCE",SWIG_From_int(static_cast< int >(-1)));
  globals = SWIG_globals();
  if (!globals) {
    PyErr_SetString(PyExc_TypeError, "Failure to create SWIG globals.");
#if PY_VERSION_HEX >= 0x03000000
    return NULL;
#else
    return;
#endif
  }
  PyDict_SetItemString(md, "cvar", globals);
  Py_DECREF(globals);
  SWIG_addvarlink(globals, "PI", Swig_var_PI_get, Swig_var_PI_set);
  SWIG_addvarlink(globals, "TWOPI", Swig_var_TWOPI_get, Swig_var_TWOPI_set);
  SWIG_Python_SetConstant(d, "SubtractionType_Area",SWIG_From_int(static_cast< int >(fastjet::contrib::piranha::SubtractionType::Area)));
  SWIG_Python_SetConstant(d, "SubtractionType_AreaTrackEMD",SWIG_From_int(static_cast< int >(fastjet::contrib::piranha::SubtractionType::AreaTrackEMD)));
  SWIG_Python_SetConstant(d, "SubtractionType_EMD",SWIG_From_int(static_cast< int >(fastjet::contrib::piranha::SubtractionType::EMD)));
  SWIG_Python_SetConstant(d, "RhoSubtractionMode_Additive",SWIG_From_int(static_cast< int >(fastjet::contrib::piranha::RhoSubtractionMode::Additive)));
  SWIG_Python_SetConstant(d, "RhoSubtractionMode_Fractional",SWIG_From_int(static_cast< int >(fastjet::contrib::piranha::RhoSubtractionMode::Fractional)));
  SWIG_Python_SetConstant(d, "RemovalResult_Success",SWIG_From_int(static_cast< int >(fastjet::contrib::piranha::RemovalResult::Success)));
  SWIG_Python_SetConstant(d, "RemovalResult_Coincidence",SWIG_From_int(static_cast< int >(fastjet::contrib::piranha::RemovalResult::Coincidence)));
  SWIG_Python_SetConstant(d, "VERTEX_DEFAULT_IND",SWIG_From_int(static_cast< int >(-1)));
  SWIG_addvarlink(globals, "piranha_epsilon", Swig_var_piranha_epsilon_get, Swig_var_piranha_epsilon_set);
  SWIG_Python_SetConstant(d, "INVALID_TOTAL_WEIGHT",SWIG_From_int(static_cast< int >(-1)));
#if PY_VERSION_HEX >= 0x03000000
  return m;
#else
  return;
#endif
}

